circuit FPU :
  module RoundAnyRawFNToRecFN_3 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 107:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 108:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 108:82]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 108:80]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 108:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 114:47]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 33:92]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 33:92]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 33:92]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 114:47]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 33:92]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 33:92]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 33:92]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 33:92]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 33:92]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 33:92]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module FPUFMAPipe :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : { valid : UInt<1>, bits : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}}, out : { valid : UInt<1>, bits : { data : UInt<65>, exc : UInt<5>}}}

    clock is invalid
    reset is invalid
    io is invalid
    reg valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid) @[FPU.scala 699:18]
    valid <= io.in.valid @[FPU.scala 699:18]
    reg in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, clock with :
      reset => (UInt<1>("h0"), in) @[FPU.scala 700:15]
    when io.in.valid : @[FPU.scala 701:22]
      node one = shl(UInt<1>("h1"), 63) @[FPU.scala 702:23]
      node _zero_T = xor(io.in.bits.in1, io.in.bits.in2) @[FPU.scala 703:32]
      node _zero_T_1 = shl(UInt<1>("h1"), 64) @[FPU.scala 703:61]
      node zero = and(_zero_T, _zero_T_1) @[FPU.scala 703:50]
      in <- io.in.bits @[FPU.scala 706:8]
      when io.in.bits.swap23 : @[FPU.scala 707:23]
        in.in2 <= one @[FPU.scala 707:32]
      node _T = or(io.in.bits.ren3, io.in.bits.swap23) @[FPU.scala 708:21]
      node _T_1 = eq(_T, UInt<1>("h0")) @[FPU.scala 708:11]
      when _T_1 : @[FPU.scala 708:37]
        in.in3 <= zero @[FPU.scala 708:46]
    inst fma of MulAddRecFNPipe @[FPU.scala 711:19]
    fma.clock is invalid
    fma.reset is invalid
    fma.io is invalid
    fma.clock <= clock
    fma.reset <= reset
    fma.io.validin <= valid @[FPU.scala 712:18]
    fma.io.op <= in.fmaCmd @[FPU.scala 713:13]
    fma.io.roundingMode <= in.rm @[FPU.scala 714:23]
    fma.io.detectTininess <= UInt<1>("h1") @[FPU.scala 715:25]
    fma.io.a <= in.in1 @[FPU.scala 716:12]
    fma.io.b <= in.in2 @[FPU.scala 717:12]
    fma.io.c <= in.in3 @[FPU.scala 718:12]
    wire res : { data : UInt<65>, exc : UInt<5>} @[FPU.scala 720:17]
    res is invalid @[FPU.scala 720:17]
    node _res_data_maskedNaN_T = not(UInt<65>("h1010000000000000")) @[FPU.scala 408:27]
    node res_data_maskedNaN = and(fma.io.out, _res_data_maskedNaN_T) @[FPU.scala 408:25]
    node _res_data_T = bits(fma.io.out, 63, 61) @[FPU.scala 244:25]
    node _res_data_T_1 = andr(_res_data_T) @[FPU.scala 244:56]
    node _res_data_T_2 = mux(_res_data_T_1, res_data_maskedNaN, fma.io.out) @[FPU.scala 409:10]
    res.data <= _res_data_T_2 @[FPU.scala 721:12]
    res.exc <= fma.io.exceptionFlags @[FPU.scala 722:11]
    reg io_out_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_out_v <= fma.io.validout @[Valid.scala 130:22]
    reg io_out_b : { data : UInt<65>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), io_out_b) @[Reg.scala 19:16]
    when fma.io.validout : @[Reg.scala 20:18]
      io_out_b <= res @[Reg.scala 20:22]
    wire io_out_out : { valid : UInt<1>, bits : { data : UInt<65>, exc : UInt<5>}} @[Valid.scala 125:21]
    io_out_out is invalid @[Valid.scala 125:21]
    io_out_out.valid <= io_out_v @[Valid.scala 126:17]
    io_out_out.bits <- io_out_b @[Valid.scala 127:16]
    io.out <- io_out_out @[FPU.scala 724:10]

  module FMADecoder :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip uopc : UInt<7>, cmd : UInt<2>}

    wire decoder_decoded_plaInput : UInt<7> @[pla.scala 77:22]
    node decoder_decoded_invInputs = not(decoder_decoded_plaInput) @[pla.scala 78:21]
    wire decoder_decoded : UInt<2> @[pla.scala 81:23]
    node decoder_decoded_andMatrixInput_0 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_6 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi = cat(decoder_decoded_andMatrixInput_4, decoder_decoded_andMatrixInput_5) @[Cat.scala 33:92]
    node decoder_decoded_lo = cat(decoder_decoded_lo_hi, decoder_decoded_andMatrixInput_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_lo = cat(decoder_decoded_andMatrixInput_2, decoder_decoded_andMatrixInput_3) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi = cat(decoder_decoded_andMatrixInput_0, decoder_decoded_andMatrixInput_1) @[Cat.scala 33:92]
    node decoder_decoded_hi = cat(decoder_decoded_hi_hi, decoder_decoded_hi_lo) @[Cat.scala 33:92]
    node _decoder_decoded_T = cat(decoder_decoded_hi, decoder_decoded_lo) @[Cat.scala 33:92]
    node _decoder_decoded_T_1 = andr(_decoder_decoded_T) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_1 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_1 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_1 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_1 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_1 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_1 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_1 = cat(decoder_decoded_andMatrixInput_3_1, decoder_decoded_andMatrixInput_4_1) @[Cat.scala 33:92]
    node decoder_decoded_lo_1 = cat(decoder_decoded_lo_hi_1, decoder_decoded_andMatrixInput_5_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_1 = cat(decoder_decoded_andMatrixInput_0_1, decoder_decoded_andMatrixInput_1_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_1 = cat(decoder_decoded_hi_hi_1, decoder_decoded_andMatrixInput_2_1) @[Cat.scala 33:92]
    node _decoder_decoded_T_2 = cat(decoder_decoded_hi_1, decoder_decoded_lo_1) @[Cat.scala 33:92]
    node _decoder_decoded_T_3 = andr(_decoder_decoded_T_2) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_2 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_2 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_2 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_2 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_2 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_2 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_2 = cat(decoder_decoded_andMatrixInput_3_2, decoder_decoded_andMatrixInput_4_2) @[Cat.scala 33:92]
    node decoder_decoded_lo_2 = cat(decoder_decoded_lo_hi_2, decoder_decoded_andMatrixInput_5_2) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_2 = cat(decoder_decoded_andMatrixInput_0_2, decoder_decoded_andMatrixInput_1_2) @[Cat.scala 33:92]
    node decoder_decoded_hi_2 = cat(decoder_decoded_hi_hi_2, decoder_decoded_andMatrixInput_2_2) @[Cat.scala 33:92]
    node _decoder_decoded_T_4 = cat(decoder_decoded_hi_2, decoder_decoded_lo_2) @[Cat.scala 33:92]
    node _decoder_decoded_T_5 = andr(_decoder_decoded_T_4) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_3 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_3 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_3 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_3 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_3 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_3 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_6_1 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_3 = cat(decoder_decoded_andMatrixInput_4_3, decoder_decoded_andMatrixInput_5_3) @[Cat.scala 33:92]
    node decoder_decoded_lo_3 = cat(decoder_decoded_lo_hi_3, decoder_decoded_andMatrixInput_6_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_lo_1 = cat(decoder_decoded_andMatrixInput_2_3, decoder_decoded_andMatrixInput_3_3) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_3 = cat(decoder_decoded_andMatrixInput_0_3, decoder_decoded_andMatrixInput_1_3) @[Cat.scala 33:92]
    node decoder_decoded_hi_3 = cat(decoder_decoded_hi_hi_3, decoder_decoded_hi_lo_1) @[Cat.scala 33:92]
    node _decoder_decoded_T_6 = cat(decoder_decoded_hi_3, decoder_decoded_lo_3) @[Cat.scala 33:92]
    node _decoder_decoded_T_7 = andr(_decoder_decoded_T_6) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_4 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_4 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_4 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_4 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_4 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_4 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_4 = cat(decoder_decoded_andMatrixInput_3_4, decoder_decoded_andMatrixInput_4_4) @[Cat.scala 33:92]
    node decoder_decoded_lo_4 = cat(decoder_decoded_lo_hi_4, decoder_decoded_andMatrixInput_5_4) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_4 = cat(decoder_decoded_andMatrixInput_0_4, decoder_decoded_andMatrixInput_1_4) @[Cat.scala 33:92]
    node decoder_decoded_hi_4 = cat(decoder_decoded_hi_hi_4, decoder_decoded_andMatrixInput_2_4) @[Cat.scala 33:92]
    node _decoder_decoded_T_8 = cat(decoder_decoded_hi_4, decoder_decoded_lo_4) @[Cat.scala 33:92]
    node _decoder_decoded_T_9 = andr(_decoder_decoded_T_8) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_5 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_5 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_5 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_5 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_5 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_5 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_5 = cat(decoder_decoded_andMatrixInput_3_5, decoder_decoded_andMatrixInput_4_5) @[Cat.scala 33:92]
    node decoder_decoded_lo_5 = cat(decoder_decoded_lo_hi_5, decoder_decoded_andMatrixInput_5_5) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_5 = cat(decoder_decoded_andMatrixInput_0_5, decoder_decoded_andMatrixInput_1_5) @[Cat.scala 33:92]
    node decoder_decoded_hi_5 = cat(decoder_decoded_hi_hi_5, decoder_decoded_andMatrixInput_2_5) @[Cat.scala 33:92]
    node _decoder_decoded_T_10 = cat(decoder_decoded_hi_5, decoder_decoded_lo_5) @[Cat.scala 33:92]
    node _decoder_decoded_T_11 = andr(_decoder_decoded_T_10) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_6 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_6 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_6 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_6 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_6 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_6 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_6_2 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_6 = cat(decoder_decoded_andMatrixInput_4_6, decoder_decoded_andMatrixInput_5_6) @[Cat.scala 33:92]
    node decoder_decoded_lo_6 = cat(decoder_decoded_lo_hi_6, decoder_decoded_andMatrixInput_6_2) @[Cat.scala 33:92]
    node decoder_decoded_hi_lo_2 = cat(decoder_decoded_andMatrixInput_2_6, decoder_decoded_andMatrixInput_3_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_6 = cat(decoder_decoded_andMatrixInput_0_6, decoder_decoded_andMatrixInput_1_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_6 = cat(decoder_decoded_hi_hi_6, decoder_decoded_hi_lo_2) @[Cat.scala 33:92]
    node _decoder_decoded_T_12 = cat(decoder_decoded_hi_6, decoder_decoded_lo_6) @[Cat.scala 33:92]
    node _decoder_decoded_T_13 = andr(_decoder_decoded_T_12) @[pla.scala 98:74]
    node decoder_decoded_orMatrixOutputs_lo = cat(_decoder_decoded_T_5, _decoder_decoded_T_11) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi = cat(_decoder_decoded_T_1, _decoder_decoded_T_3) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T = cat(decoder_decoded_orMatrixOutputs_hi, decoder_decoded_orMatrixOutputs_lo) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_1 = orr(_decoder_decoded_orMatrixOutputs_T) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_hi_1 = cat(_decoder_decoded_T_7, _decoder_decoded_T_9) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_2 = cat(decoder_decoded_orMatrixOutputs_hi_1, _decoder_decoded_T_13) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_3 = orr(_decoder_decoded_orMatrixOutputs_T_2) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs = cat(_decoder_decoded_orMatrixOutputs_T_3, _decoder_decoded_orMatrixOutputs_T_1) @[Cat.scala 33:92]
    node _decoder_decoded_invMatrixOutputs_T = bits(decoder_decoded_orMatrixOutputs, 0, 0) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_1 = bits(decoder_decoded_orMatrixOutputs, 1, 1) @[pla.scala 124:31]
    node decoder_decoded_invMatrixOutputs = cat(_decoder_decoded_invMatrixOutputs_T_1, _decoder_decoded_invMatrixOutputs_T) @[Cat.scala 33:92]
    decoder_decoded <= decoder_decoded_invMatrixOutputs @[pla.scala 129:13]
    decoder_decoded_plaInput <= io.uopc @[decoder.scala 40:16]
    node cmd = bits(decoder_decoded, 1, 0) @[Decode.scala 50:77]
    io.cmd <= cmd @[fpu.scala 150:10]

  module RecFNToIN :
    output io : { flip in : UInt<65>, flip roundingMode : UInt<3>, flip signedOut : UInt<1>, out : UInt<64>, intExceptionFlags : UInt<3>}

    io is invalid
    node rawIn_exp = bits(io.in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawIn_out_isNaN_T_1 = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawIn.isNaN <= _rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawIn_out_isInf_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawIn_out_isInf_T_1 = eq(_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawIn_out_isInf_T_2 = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawIn.isInf <= _rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawIn.isZero <= rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawIn_out_sign_T = bits(io.in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawIn.sign <= _rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawIn_out_sExp_T = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    rawIn.sExp <= _rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawIn_out_sig_T = eq(rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawIn_out_sig_T_1 = bits(io.in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h0"), _rawIn_out_sig_T) @[Cat.scala 33:92]
    node _rawIn_out_sig_T_2 = cat(rawIn_out_sig_hi, _rawIn_out_sig_T_1) @[Cat.scala 33:92]
    rawIn.sig <= _rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node magGeOne = bits(rawIn.sExp, 11, 11) @[RecFNToIN.scala 58:30]
    node posExp = bits(rawIn.sExp, 10, 0) @[RecFNToIN.scala 59:28]
    node _magJustBelowOne_T = eq(magGeOne, UInt<1>("h0")) @[RecFNToIN.scala 60:27]
    node _magJustBelowOne_T_1 = andr(posExp) @[RecFNToIN.scala 60:47]
    node magJustBelowOne = and(_magJustBelowOne_T, _magJustBelowOne_T_1) @[RecFNToIN.scala 60:37]
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RecFNToIN.scala 64:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RecFNToIN.scala 65:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RecFNToIN.scala 66:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RecFNToIN.scala 67:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RecFNToIN.scala 68:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RecFNToIN.scala 69:53]
    node _shiftedSig_T = bits(rawIn.sig, 51, 0) @[RecFNToIN.scala 80:32]
    node _shiftedSig_T_1 = cat(magGeOne, _shiftedSig_T) @[Cat.scala 33:92]
    node _shiftedSig_T_2 = bits(rawIn.sExp, 5, 0) @[RecFNToIN.scala 82:27]
    node _shiftedSig_T_3 = mux(magGeOne, _shiftedSig_T_2, UInt<1>("h0")) @[RecFNToIN.scala 81:16]
    node shiftedSig = dshl(_shiftedSig_T_1, _shiftedSig_T_3) @[RecFNToIN.scala 80:50]
    node _alignedSig_T = shr(shiftedSig, 51) @[RecFNToIN.scala 86:23]
    node _alignedSig_T_1 = bits(shiftedSig, 50, 0) @[RecFNToIN.scala 86:51]
    node _alignedSig_T_2 = orr(_alignedSig_T_1) @[RecFNToIN.scala 86:69]
    node alignedSig = cat(_alignedSig_T, _alignedSig_T_2) @[Cat.scala 33:92]
    node _unroundedInt_T = shr(alignedSig, 2) @[RecFNToIN.scala 87:54]
    node unroundedInt = or(UInt<64>("h0"), _unroundedInt_T) @[RecFNToIN.scala 87:42]
    node _common_inexact_T = bits(alignedSig, 1, 0) @[RecFNToIN.scala 89:50]
    node _common_inexact_T_1 = orr(_common_inexact_T) @[RecFNToIN.scala 89:57]
    node _common_inexact_T_2 = eq(rawIn.isZero, UInt<1>("h0")) @[RecFNToIN.scala 89:62]
    node common_inexact = mux(magGeOne, _common_inexact_T_1, _common_inexact_T_2) @[RecFNToIN.scala 89:29]
    node _roundIncr_near_even_T = bits(alignedSig, 2, 1) @[RecFNToIN.scala 91:39]
    node _roundIncr_near_even_T_1 = andr(_roundIncr_near_even_T) @[RecFNToIN.scala 91:46]
    node _roundIncr_near_even_T_2 = bits(alignedSig, 1, 0) @[RecFNToIN.scala 91:64]
    node _roundIncr_near_even_T_3 = andr(_roundIncr_near_even_T_2) @[RecFNToIN.scala 91:71]
    node _roundIncr_near_even_T_4 = or(_roundIncr_near_even_T_1, _roundIncr_near_even_T_3) @[RecFNToIN.scala 91:51]
    node _roundIncr_near_even_T_5 = and(magGeOne, _roundIncr_near_even_T_4) @[RecFNToIN.scala 91:25]
    node _roundIncr_near_even_T_6 = bits(alignedSig, 1, 0) @[RecFNToIN.scala 92:39]
    node _roundIncr_near_even_T_7 = orr(_roundIncr_near_even_T_6) @[RecFNToIN.scala 92:46]
    node _roundIncr_near_even_T_8 = and(magJustBelowOne, _roundIncr_near_even_T_7) @[RecFNToIN.scala 92:26]
    node roundIncr_near_even = or(_roundIncr_near_even_T_5, _roundIncr_near_even_T_8) @[RecFNToIN.scala 91:78]
    node _roundIncr_near_maxMag_T = bits(alignedSig, 1, 1) @[RecFNToIN.scala 93:56]
    node _roundIncr_near_maxMag_T_1 = and(magGeOne, _roundIncr_near_maxMag_T) @[RecFNToIN.scala 93:43]
    node roundIncr_near_maxMag = or(_roundIncr_near_maxMag_T_1, magJustBelowOne) @[RecFNToIN.scala 93:61]
    node _roundIncr_T = and(roundingMode_near_even, roundIncr_near_even) @[RecFNToIN.scala 95:35]
    node _roundIncr_T_1 = and(roundingMode_near_maxMag, roundIncr_near_maxMag) @[RecFNToIN.scala 96:35]
    node _roundIncr_T_2 = or(_roundIncr_T, _roundIncr_T_1) @[RecFNToIN.scala 95:61]
    node _roundIncr_T_3 = or(roundingMode_min, roundingMode_odd) @[RecFNToIN.scala 97:28]
    node _roundIncr_T_4 = and(rawIn.sign, common_inexact) @[RecFNToIN.scala 98:26]
    node _roundIncr_T_5 = and(_roundIncr_T_3, _roundIncr_T_4) @[RecFNToIN.scala 97:49]
    node _roundIncr_T_6 = or(_roundIncr_T_2, _roundIncr_T_5) @[RecFNToIN.scala 96:61]
    node _roundIncr_T_7 = eq(rawIn.sign, UInt<1>("h0")) @[RecFNToIN.scala 99:31]
    node _roundIncr_T_8 = and(_roundIncr_T_7, common_inexact) @[RecFNToIN.scala 99:43]
    node _roundIncr_T_9 = and(roundingMode_max, _roundIncr_T_8) @[RecFNToIN.scala 99:27]
    node roundIncr = or(_roundIncr_T_6, _roundIncr_T_9) @[RecFNToIN.scala 98:46]
    node _complUnroundedInt_T = not(unroundedInt) @[RecFNToIN.scala 100:45]
    node complUnroundedInt = mux(rawIn.sign, _complUnroundedInt_T, unroundedInt) @[RecFNToIN.scala 100:32]
    node _roundedInt_T = xor(roundIncr, rawIn.sign) @[RecFNToIN.scala 102:23]
    node _roundedInt_T_1 = add(complUnroundedInt, UInt<1>("h1")) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_2 = tail(_roundedInt_T_1, 1) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_3 = mux(_roundedInt_T, _roundedInt_T_2, complUnroundedInt) @[RecFNToIN.scala 102:12]
    node _roundedInt_T_4 = and(roundingMode_odd, common_inexact) @[RecFNToIN.scala 105:31]
    node roundedInt = or(_roundedInt_T_3, _roundedInt_T_4) @[RecFNToIN.scala 105:11]
    node magGeOne_atOverflowEdge = eq(posExp, UInt<6>("h3f")) @[RecFNToIN.scala 107:43]
    node _roundCarryBut2_T = bits(unroundedInt, 61, 0) @[RecFNToIN.scala 110:38]
    node _roundCarryBut2_T_1 = andr(_roundCarryBut2_T) @[RecFNToIN.scala 110:56]
    node roundCarryBut2 = and(_roundCarryBut2_T_1, roundIncr) @[RecFNToIN.scala 110:61]
    node _common_overflow_T = geq(posExp, UInt<7>("h40")) @[RecFNToIN.scala 113:21]
    node _common_overflow_T_1 = bits(unroundedInt, 62, 0) @[RecFNToIN.scala 117:42]
    node _common_overflow_T_2 = orr(_common_overflow_T_1) @[RecFNToIN.scala 117:60]
    node _common_overflow_T_3 = or(_common_overflow_T_2, roundIncr) @[RecFNToIN.scala 117:64]
    node _common_overflow_T_4 = and(magGeOne_atOverflowEdge, _common_overflow_T_3) @[RecFNToIN.scala 116:49]
    node _common_overflow_T_5 = eq(posExp, UInt<6>("h3e")) @[RecFNToIN.scala 119:38]
    node _common_overflow_T_6 = and(_common_overflow_T_5, roundCarryBut2) @[RecFNToIN.scala 119:62]
    node _common_overflow_T_7 = or(magGeOne_atOverflowEdge, _common_overflow_T_6) @[RecFNToIN.scala 118:49]
    node _common_overflow_T_8 = mux(rawIn.sign, _common_overflow_T_4, _common_overflow_T_7) @[RecFNToIN.scala 115:24]
    node _common_overflow_T_9 = bits(unroundedInt, 62, 62) @[RecFNToIN.scala 123:42]
    node _common_overflow_T_10 = and(magGeOne_atOverflowEdge, _common_overflow_T_9) @[RecFNToIN.scala 122:50]
    node _common_overflow_T_11 = and(_common_overflow_T_10, roundCarryBut2) @[RecFNToIN.scala 123:57]
    node _common_overflow_T_12 = or(rawIn.sign, _common_overflow_T_11) @[RecFNToIN.scala 121:32]
    node _common_overflow_T_13 = mux(io.signedOut, _common_overflow_T_8, _common_overflow_T_12) @[RecFNToIN.scala 114:20]
    node _common_overflow_T_14 = or(_common_overflow_T, _common_overflow_T_13) @[RecFNToIN.scala 113:40]
    node _common_overflow_T_15 = eq(io.signedOut, UInt<1>("h0")) @[RecFNToIN.scala 125:13]
    node _common_overflow_T_16 = and(_common_overflow_T_15, rawIn.sign) @[RecFNToIN.scala 125:27]
    node _common_overflow_T_17 = and(_common_overflow_T_16, roundIncr) @[RecFNToIN.scala 125:41]
    node common_overflow = mux(magGeOne, _common_overflow_T_14, _common_overflow_T_17) @[RecFNToIN.scala 112:12]
    node invalidExc = or(rawIn.isNaN, rawIn.isInf) @[RecFNToIN.scala 130:34]
    node _overflow_T = eq(invalidExc, UInt<1>("h0")) @[RecFNToIN.scala 131:20]
    node overflow = and(_overflow_T, common_overflow) @[RecFNToIN.scala 131:32]
    node _inexact_T = eq(invalidExc, UInt<1>("h0")) @[RecFNToIN.scala 132:20]
    node _inexact_T_1 = eq(common_overflow, UInt<1>("h0")) @[RecFNToIN.scala 132:35]
    node _inexact_T_2 = and(_inexact_T, _inexact_T_1) @[RecFNToIN.scala 132:32]
    node inexact = and(_inexact_T_2, common_inexact) @[RecFNToIN.scala 132:52]
    node _excSign_T = eq(rawIn.isNaN, UInt<1>("h0")) @[RecFNToIN.scala 134:19]
    node excSign = and(_excSign_T, rawIn.sign) @[RecFNToIN.scala 134:32]
    node _excOut_T = eq(io.signedOut, excSign) @[RecFNToIN.scala 136:27]
    node _excOut_T_1 = mux(_excOut_T, UInt<64>("h8000000000000000"), UInt<1>("h0")) @[RecFNToIN.scala 136:12]
    node _excOut_T_2 = eq(excSign, UInt<1>("h0")) @[RecFNToIN.scala 140:13]
    node _excOut_T_3 = mux(_excOut_T_2, UInt<63>("h7fffffffffffffff"), UInt<1>("h0")) @[RecFNToIN.scala 140:12]
    node excOut = or(_excOut_T_1, _excOut_T_3) @[RecFNToIN.scala 139:11]
    node _io_out_T = or(invalidExc, common_overflow) @[RecFNToIN.scala 142:30]
    node _io_out_T_1 = mux(_io_out_T, excOut, roundedInt) @[RecFNToIN.scala 142:18]
    io.out <= _io_out_T_1 @[RecFNToIN.scala 142:12]
    node io_intExceptionFlags_hi = cat(invalidExc, overflow) @[Cat.scala 33:92]
    node _io_intExceptionFlags_T = cat(io_intExceptionFlags_hi, inexact) @[Cat.scala 33:92]
    io.intExceptionFlags <= _io_intExceptionFlags_T @[RecFNToIN.scala 143:26]

  module MulAddRecFNToRaw_postMul :
    output io : { flip fromPreMul : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<13>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<6>, highAlignedSigC : UInt<55>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<107>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<56>}}

    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[MulAddRecFN.scala 185:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 189:42]
    node _sigSum_T = bits(io.mulAddResult, 106, 106) @[MulAddRecFN.scala 191:32]
    node _sigSum_T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h1")) @[MulAddRecFN.scala 192:47]
    node _sigSum_T_2 = tail(_sigSum_T_1, 1) @[MulAddRecFN.scala 192:47]
    node _sigSum_T_3 = mux(_sigSum_T, _sigSum_T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 191:16]
    node _sigSum_T_4 = bits(io.mulAddResult, 105, 0) @[MulAddRecFN.scala 195:28]
    node sigSum_hi = cat(_sigSum_T_3, _sigSum_T_4) @[Cat.scala 33:92]
    node sigSum = cat(sigSum_hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 33:92]
    node _CDom_sExp_T = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 202:69]
    node _CDom_sExp_T_1 = sub(io.fromPreMul.sExpSum, _CDom_sExp_T) @[MulAddRecFN.scala 202:43]
    node _CDom_sExp_T_2 = tail(_CDom_sExp_T_1, 1) @[MulAddRecFN.scala 202:43]
    node CDom_sExp = asSInt(_CDom_sExp_T_2) @[MulAddRecFN.scala 202:43]
    node _CDom_absSigSum_T = bits(sigSum, 161, 54) @[MulAddRecFN.scala 205:20]
    node _CDom_absSigSum_T_1 = not(_CDom_absSigSum_T) @[MulAddRecFN.scala 205:13]
    node _CDom_absSigSum_T_2 = bits(io.fromPreMul.highAlignedSigC, 54, 53) @[MulAddRecFN.scala 208:46]
    node _CDom_absSigSum_T_3 = bits(sigSum, 159, 55) @[MulAddRecFN.scala 209:23]
    node CDom_absSigSum_hi = cat(UInt<1>("h0"), _CDom_absSigSum_T_2) @[Cat.scala 33:92]
    node _CDom_absSigSum_T_4 = cat(CDom_absSigSum_hi, _CDom_absSigSum_T_3) @[Cat.scala 33:92]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _CDom_absSigSum_T_1, _CDom_absSigSum_T_4) @[MulAddRecFN.scala 204:12]
    node _CDom_absSigSumExtra_T = bits(sigSum, 53, 1) @[MulAddRecFN.scala 214:21]
    node _CDom_absSigSumExtra_T_1 = not(_CDom_absSigSumExtra_T) @[MulAddRecFN.scala 214:14]
    node _CDom_absSigSumExtra_T_2 = orr(_CDom_absSigSumExtra_T_1) @[MulAddRecFN.scala 214:36]
    node _CDom_absSigSumExtra_T_3 = bits(sigSum, 54, 1) @[MulAddRecFN.scala 215:19]
    node _CDom_absSigSumExtra_T_4 = orr(_CDom_absSigSumExtra_T_3) @[MulAddRecFN.scala 215:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _CDom_absSigSumExtra_T_2, _CDom_absSigSumExtra_T_4) @[MulAddRecFN.scala 213:12]
    node _CDom_mainSig_T = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 218:24]
    node CDom_mainSig = bits(_CDom_mainSig_T, 107, 50) @[MulAddRecFN.scala 218:56]
    node _CDom_reduced4SigExtra_T = bits(CDom_absSigSum, 52, 0) @[MulAddRecFN.scala 221:36]
    node _CDom_reduced4SigExtra_T_1 = shl(_CDom_reduced4SigExtra_T, 2) @[MulAddRecFN.scala 221:53]
    wire CDom_reduced4SigExtra_reducedVec : UInt<1>[14] @[primitives.scala 119:30]
    CDom_reduced4SigExtra_reducedVec is invalid @[primitives.scala 119:30]
    node _CDom_reduced4SigExtra_reducedVec_0_T = bits(_CDom_reduced4SigExtra_T_1, 3, 0) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_0_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[0] <= _CDom_reduced4SigExtra_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_1_T = bits(_CDom_reduced4SigExtra_T_1, 7, 4) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_1_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[1] <= _CDom_reduced4SigExtra_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_2_T = bits(_CDom_reduced4SigExtra_T_1, 11, 8) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_2_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[2] <= _CDom_reduced4SigExtra_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_3_T = bits(_CDom_reduced4SigExtra_T_1, 15, 12) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_3_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[3] <= _CDom_reduced4SigExtra_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_4_T = bits(_CDom_reduced4SigExtra_T_1, 19, 16) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_4_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[4] <= _CDom_reduced4SigExtra_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_5_T = bits(_CDom_reduced4SigExtra_T_1, 23, 20) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_5_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[5] <= _CDom_reduced4SigExtra_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_6_T = bits(_CDom_reduced4SigExtra_T_1, 27, 24) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_6_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[6] <= _CDom_reduced4SigExtra_reducedVec_6_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_7_T = bits(_CDom_reduced4SigExtra_T_1, 31, 28) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_7_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_7_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[7] <= _CDom_reduced4SigExtra_reducedVec_7_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_8_T = bits(_CDom_reduced4SigExtra_T_1, 35, 32) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_8_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_8_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[8] <= _CDom_reduced4SigExtra_reducedVec_8_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_9_T = bits(_CDom_reduced4SigExtra_T_1, 39, 36) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_9_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_9_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[9] <= _CDom_reduced4SigExtra_reducedVec_9_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_10_T = bits(_CDom_reduced4SigExtra_T_1, 43, 40) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_10_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_10_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[10] <= _CDom_reduced4SigExtra_reducedVec_10_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_11_T = bits(_CDom_reduced4SigExtra_T_1, 47, 44) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_11_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_11_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[11] <= _CDom_reduced4SigExtra_reducedVec_11_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_12_T = bits(_CDom_reduced4SigExtra_T_1, 51, 48) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_12_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_12_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[12] <= _CDom_reduced4SigExtra_reducedVec_12_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_13_T = bits(_CDom_reduced4SigExtra_T_1, 54, 52) @[primitives.scala 124:15]
    node _CDom_reduced4SigExtra_reducedVec_13_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_13_T) @[primitives.scala 124:57]
    CDom_reduced4SigExtra_reducedVec[13] <= _CDom_reduced4SigExtra_reducedVec_13_T_1 @[primitives.scala 123:38]
    node CDom_reduced4SigExtra_lo_lo_hi = cat(CDom_reduced4SigExtra_reducedVec[2], CDom_reduced4SigExtra_reducedVec[1]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo_lo = cat(CDom_reduced4SigExtra_lo_lo_hi, CDom_reduced4SigExtra_reducedVec[0]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo_hi_lo = cat(CDom_reduced4SigExtra_reducedVec[4], CDom_reduced4SigExtra_reducedVec[3]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo_hi_hi = cat(CDom_reduced4SigExtra_reducedVec[6], CDom_reduced4SigExtra_reducedVec[5]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo_hi = cat(CDom_reduced4SigExtra_lo_hi_hi, CDom_reduced4SigExtra_lo_hi_lo) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo = cat(CDom_reduced4SigExtra_lo_hi, CDom_reduced4SigExtra_lo_lo) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_lo_hi = cat(CDom_reduced4SigExtra_reducedVec[9], CDom_reduced4SigExtra_reducedVec[8]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_lo = cat(CDom_reduced4SigExtra_hi_lo_hi, CDom_reduced4SigExtra_reducedVec[7]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_hi_lo = cat(CDom_reduced4SigExtra_reducedVec[11], CDom_reduced4SigExtra_reducedVec[10]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_hi_hi = cat(CDom_reduced4SigExtra_reducedVec[13], CDom_reduced4SigExtra_reducedVec[12]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_hi = cat(CDom_reduced4SigExtra_hi_hi_hi, CDom_reduced4SigExtra_hi_hi_lo) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi = cat(CDom_reduced4SigExtra_hi_hi, CDom_reduced4SigExtra_hi_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_2 = cat(CDom_reduced4SigExtra_hi, CDom_reduced4SigExtra_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_3 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 222:51]
    node _CDom_reduced4SigExtra_T_4 = not(_CDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node CDom_reduced4SigExtra_shift = dshr(asSInt(UInt<17>("h10000")), _CDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _CDom_reduced4SigExtra_T_5 = bits(CDom_reduced4SigExtra_shift, 13, 1) @[primitives.scala 79:22]
    node _CDom_reduced4SigExtra_T_6 = bits(_CDom_reduced4SigExtra_T_5, 7, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_7 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _CDom_reduced4SigExtra_T_8 = xor(UInt<8>("hff"), _CDom_reduced4SigExtra_T_7) @[Bitwise.scala 107:21]
    node _CDom_reduced4SigExtra_T_9 = shr(_CDom_reduced4SigExtra_T_6, 4) @[Bitwise.scala 108:21]
    node _CDom_reduced4SigExtra_T_10 = and(_CDom_reduced4SigExtra_T_9, _CDom_reduced4SigExtra_T_8) @[Bitwise.scala 108:31]
    node _CDom_reduced4SigExtra_T_11 = bits(_CDom_reduced4SigExtra_T_6, 3, 0) @[Bitwise.scala 108:46]
    node _CDom_reduced4SigExtra_T_12 = shl(_CDom_reduced4SigExtra_T_11, 4) @[Bitwise.scala 108:70]
    node _CDom_reduced4SigExtra_T_13 = not(_CDom_reduced4SigExtra_T_8) @[Bitwise.scala 108:82]
    node _CDom_reduced4SigExtra_T_14 = and(_CDom_reduced4SigExtra_T_12, _CDom_reduced4SigExtra_T_13) @[Bitwise.scala 108:80]
    node _CDom_reduced4SigExtra_T_15 = or(_CDom_reduced4SigExtra_T_10, _CDom_reduced4SigExtra_T_14) @[Bitwise.scala 108:39]
    node _CDom_reduced4SigExtra_T_16 = bits(_CDom_reduced4SigExtra_T_8, 5, 0) @[Bitwise.scala 107:28]
    node _CDom_reduced4SigExtra_T_17 = shl(_CDom_reduced4SigExtra_T_16, 2) @[Bitwise.scala 107:52]
    node _CDom_reduced4SigExtra_T_18 = xor(_CDom_reduced4SigExtra_T_8, _CDom_reduced4SigExtra_T_17) @[Bitwise.scala 107:21]
    node _CDom_reduced4SigExtra_T_19 = shr(_CDom_reduced4SigExtra_T_15, 2) @[Bitwise.scala 108:21]
    node _CDom_reduced4SigExtra_T_20 = and(_CDom_reduced4SigExtra_T_19, _CDom_reduced4SigExtra_T_18) @[Bitwise.scala 108:31]
    node _CDom_reduced4SigExtra_T_21 = bits(_CDom_reduced4SigExtra_T_15, 5, 0) @[Bitwise.scala 108:46]
    node _CDom_reduced4SigExtra_T_22 = shl(_CDom_reduced4SigExtra_T_21, 2) @[Bitwise.scala 108:70]
    node _CDom_reduced4SigExtra_T_23 = not(_CDom_reduced4SigExtra_T_18) @[Bitwise.scala 108:82]
    node _CDom_reduced4SigExtra_T_24 = and(_CDom_reduced4SigExtra_T_22, _CDom_reduced4SigExtra_T_23) @[Bitwise.scala 108:80]
    node _CDom_reduced4SigExtra_T_25 = or(_CDom_reduced4SigExtra_T_20, _CDom_reduced4SigExtra_T_24) @[Bitwise.scala 108:39]
    node _CDom_reduced4SigExtra_T_26 = bits(_CDom_reduced4SigExtra_T_18, 6, 0) @[Bitwise.scala 107:28]
    node _CDom_reduced4SigExtra_T_27 = shl(_CDom_reduced4SigExtra_T_26, 1) @[Bitwise.scala 107:52]
    node _CDom_reduced4SigExtra_T_28 = xor(_CDom_reduced4SigExtra_T_18, _CDom_reduced4SigExtra_T_27) @[Bitwise.scala 107:21]
    node _CDom_reduced4SigExtra_T_29 = shr(_CDom_reduced4SigExtra_T_25, 1) @[Bitwise.scala 108:21]
    node _CDom_reduced4SigExtra_T_30 = and(_CDom_reduced4SigExtra_T_29, _CDom_reduced4SigExtra_T_28) @[Bitwise.scala 108:31]
    node _CDom_reduced4SigExtra_T_31 = bits(_CDom_reduced4SigExtra_T_25, 6, 0) @[Bitwise.scala 108:46]
    node _CDom_reduced4SigExtra_T_32 = shl(_CDom_reduced4SigExtra_T_31, 1) @[Bitwise.scala 108:70]
    node _CDom_reduced4SigExtra_T_33 = not(_CDom_reduced4SigExtra_T_28) @[Bitwise.scala 108:82]
    node _CDom_reduced4SigExtra_T_34 = and(_CDom_reduced4SigExtra_T_32, _CDom_reduced4SigExtra_T_33) @[Bitwise.scala 108:80]
    node _CDom_reduced4SigExtra_T_35 = or(_CDom_reduced4SigExtra_T_30, _CDom_reduced4SigExtra_T_34) @[Bitwise.scala 108:39]
    node _CDom_reduced4SigExtra_T_36 = bits(_CDom_reduced4SigExtra_T_5, 12, 8) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_37 = bits(_CDom_reduced4SigExtra_T_36, 3, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_38 = bits(_CDom_reduced4SigExtra_T_37, 1, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_39 = bits(_CDom_reduced4SigExtra_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_40 = bits(_CDom_reduced4SigExtra_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_41 = cat(_CDom_reduced4SigExtra_T_39, _CDom_reduced4SigExtra_T_40) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_42 = bits(_CDom_reduced4SigExtra_T_37, 3, 2) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_43 = bits(_CDom_reduced4SigExtra_T_42, 0, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_44 = bits(_CDom_reduced4SigExtra_T_42, 1, 1) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_45 = cat(_CDom_reduced4SigExtra_T_43, _CDom_reduced4SigExtra_T_44) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_46 = cat(_CDom_reduced4SigExtra_T_41, _CDom_reduced4SigExtra_T_45) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_47 = bits(_CDom_reduced4SigExtra_T_36, 4, 4) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_48 = cat(_CDom_reduced4SigExtra_T_46, _CDom_reduced4SigExtra_T_47) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_49 = cat(_CDom_reduced4SigExtra_T_35, _CDom_reduced4SigExtra_T_48) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_50 = and(_CDom_reduced4SigExtra_T_2, _CDom_reduced4SigExtra_T_49) @[MulAddRecFN.scala 221:72]
    node CDom_reduced4SigExtra = orr(_CDom_reduced4SigExtra_T_50) @[MulAddRecFN.scala 222:73]
    node _CDom_sig_T = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 224:25]
    node _CDom_sig_T_1 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 225:25]
    node _CDom_sig_T_2 = orr(_CDom_sig_T_1) @[MulAddRecFN.scala 225:32]
    node _CDom_sig_T_3 = or(_CDom_sig_T_2, CDom_reduced4SigExtra) @[MulAddRecFN.scala 225:36]
    node _CDom_sig_T_4 = or(_CDom_sig_T_3, CDom_absSigSumExtra) @[MulAddRecFN.scala 225:61]
    node CDom_sig = cat(_CDom_sig_T, _CDom_sig_T_4) @[Cat.scala 33:92]
    node notCDom_signSigSum = bits(sigSum, 109, 109) @[MulAddRecFN.scala 231:36]
    node _notCDom_absSigSum_T = bits(sigSum, 108, 0) @[MulAddRecFN.scala 234:20]
    node _notCDom_absSigSum_T_1 = not(_notCDom_absSigSum_T) @[MulAddRecFN.scala 234:13]
    node _notCDom_absSigSum_T_2 = bits(sigSum, 108, 0) @[MulAddRecFN.scala 235:19]
    node _notCDom_absSigSum_T_3 = add(_notCDom_absSigSum_T_2, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 235:41]
    node _notCDom_absSigSum_T_4 = tail(_notCDom_absSigSum_T_3, 1) @[MulAddRecFN.scala 235:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _notCDom_absSigSum_T_1, _notCDom_absSigSum_T_4) @[MulAddRecFN.scala 233:12]
    wire notCDom_reduced2AbsSigSum_reducedVec : UInt<1>[55] @[primitives.scala 102:30]
    notCDom_reduced2AbsSigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _notCDom_reduced2AbsSigSum_reducedVec_0_T = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_0_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_0_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[0] <= _notCDom_reduced2AbsSigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_1_T = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_1_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_1_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[1] <= _notCDom_reduced2AbsSigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_2_T = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_2_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_2_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[2] <= _notCDom_reduced2AbsSigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_3_T = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_3_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_3_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[3] <= _notCDom_reduced2AbsSigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_4_T = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_4_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_4_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[4] <= _notCDom_reduced2AbsSigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_5_T = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_5_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_5_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[5] <= _notCDom_reduced2AbsSigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_6_T = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_6_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_6_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[6] <= _notCDom_reduced2AbsSigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_7_T = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_7_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_7_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[7] <= _notCDom_reduced2AbsSigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_8_T = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_8_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_8_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[8] <= _notCDom_reduced2AbsSigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_9_T = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_9_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_9_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[9] <= _notCDom_reduced2AbsSigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_10_T = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_10_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_10_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[10] <= _notCDom_reduced2AbsSigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_11_T = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_11_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_11_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[11] <= _notCDom_reduced2AbsSigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_12_T = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_12_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_12_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[12] <= _notCDom_reduced2AbsSigSum_reducedVec_12_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_13_T = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_13_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_13_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[13] <= _notCDom_reduced2AbsSigSum_reducedVec_13_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_14_T = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_14_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_14_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[14] <= _notCDom_reduced2AbsSigSum_reducedVec_14_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_15_T = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_15_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_15_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[15] <= _notCDom_reduced2AbsSigSum_reducedVec_15_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_16_T = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_16_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_16_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[16] <= _notCDom_reduced2AbsSigSum_reducedVec_16_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_17_T = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_17_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_17_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[17] <= _notCDom_reduced2AbsSigSum_reducedVec_17_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_18_T = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_18_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_18_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[18] <= _notCDom_reduced2AbsSigSum_reducedVec_18_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_19_T = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_19_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_19_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[19] <= _notCDom_reduced2AbsSigSum_reducedVec_19_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_20_T = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_20_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_20_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[20] <= _notCDom_reduced2AbsSigSum_reducedVec_20_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_21_T = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_21_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_21_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[21] <= _notCDom_reduced2AbsSigSum_reducedVec_21_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_22_T = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_22_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_22_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[22] <= _notCDom_reduced2AbsSigSum_reducedVec_22_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_23_T = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_23_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_23_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[23] <= _notCDom_reduced2AbsSigSum_reducedVec_23_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_24_T = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_24_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_24_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[24] <= _notCDom_reduced2AbsSigSum_reducedVec_24_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_25_T = bits(notCDom_absSigSum, 51, 50) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_25_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_25_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[25] <= _notCDom_reduced2AbsSigSum_reducedVec_25_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_26_T = bits(notCDom_absSigSum, 53, 52) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_26_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_26_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[26] <= _notCDom_reduced2AbsSigSum_reducedVec_26_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_27_T = bits(notCDom_absSigSum, 55, 54) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_27_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_27_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[27] <= _notCDom_reduced2AbsSigSum_reducedVec_27_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_28_T = bits(notCDom_absSigSum, 57, 56) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_28_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_28_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[28] <= _notCDom_reduced2AbsSigSum_reducedVec_28_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_29_T = bits(notCDom_absSigSum, 59, 58) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_29_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_29_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[29] <= _notCDom_reduced2AbsSigSum_reducedVec_29_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_30_T = bits(notCDom_absSigSum, 61, 60) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_30_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_30_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[30] <= _notCDom_reduced2AbsSigSum_reducedVec_30_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_31_T = bits(notCDom_absSigSum, 63, 62) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_31_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_31_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[31] <= _notCDom_reduced2AbsSigSum_reducedVec_31_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_32_T = bits(notCDom_absSigSum, 65, 64) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_32_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_32_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[32] <= _notCDom_reduced2AbsSigSum_reducedVec_32_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_33_T = bits(notCDom_absSigSum, 67, 66) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_33_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_33_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[33] <= _notCDom_reduced2AbsSigSum_reducedVec_33_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_34_T = bits(notCDom_absSigSum, 69, 68) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_34_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_34_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[34] <= _notCDom_reduced2AbsSigSum_reducedVec_34_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_35_T = bits(notCDom_absSigSum, 71, 70) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_35_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_35_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[35] <= _notCDom_reduced2AbsSigSum_reducedVec_35_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_36_T = bits(notCDom_absSigSum, 73, 72) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_36_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_36_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[36] <= _notCDom_reduced2AbsSigSum_reducedVec_36_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_37_T = bits(notCDom_absSigSum, 75, 74) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_37_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_37_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[37] <= _notCDom_reduced2AbsSigSum_reducedVec_37_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_38_T = bits(notCDom_absSigSum, 77, 76) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_38_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_38_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[38] <= _notCDom_reduced2AbsSigSum_reducedVec_38_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_39_T = bits(notCDom_absSigSum, 79, 78) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_39_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_39_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[39] <= _notCDom_reduced2AbsSigSum_reducedVec_39_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_40_T = bits(notCDom_absSigSum, 81, 80) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_40_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_40_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[40] <= _notCDom_reduced2AbsSigSum_reducedVec_40_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_41_T = bits(notCDom_absSigSum, 83, 82) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_41_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_41_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[41] <= _notCDom_reduced2AbsSigSum_reducedVec_41_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_42_T = bits(notCDom_absSigSum, 85, 84) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_42_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_42_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[42] <= _notCDom_reduced2AbsSigSum_reducedVec_42_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_43_T = bits(notCDom_absSigSum, 87, 86) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_43_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_43_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[43] <= _notCDom_reduced2AbsSigSum_reducedVec_43_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_44_T = bits(notCDom_absSigSum, 89, 88) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_44_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_44_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[44] <= _notCDom_reduced2AbsSigSum_reducedVec_44_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_45_T = bits(notCDom_absSigSum, 91, 90) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_45_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_45_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[45] <= _notCDom_reduced2AbsSigSum_reducedVec_45_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_46_T = bits(notCDom_absSigSum, 93, 92) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_46_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_46_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[46] <= _notCDom_reduced2AbsSigSum_reducedVec_46_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_47_T = bits(notCDom_absSigSum, 95, 94) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_47_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_47_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[47] <= _notCDom_reduced2AbsSigSum_reducedVec_47_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_48_T = bits(notCDom_absSigSum, 97, 96) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_48_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_48_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[48] <= _notCDom_reduced2AbsSigSum_reducedVec_48_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_49_T = bits(notCDom_absSigSum, 99, 98) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_49_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_49_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[49] <= _notCDom_reduced2AbsSigSum_reducedVec_49_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_50_T = bits(notCDom_absSigSum, 101, 100) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_50_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_50_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[50] <= _notCDom_reduced2AbsSigSum_reducedVec_50_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_51_T = bits(notCDom_absSigSum, 103, 102) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_51_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_51_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[51] <= _notCDom_reduced2AbsSigSum_reducedVec_51_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_52_T = bits(notCDom_absSigSum, 105, 104) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_52_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_52_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[52] <= _notCDom_reduced2AbsSigSum_reducedVec_52_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_53_T = bits(notCDom_absSigSum, 107, 106) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_53_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_53_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[53] <= _notCDom_reduced2AbsSigSum_reducedVec_53_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_54_T = bits(notCDom_absSigSum, 108, 108) @[primitives.scala 107:15]
    node _notCDom_reduced2AbsSigSum_reducedVec_54_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_54_T) @[primitives.scala 107:57]
    notCDom_reduced2AbsSigSum_reducedVec[54] <= _notCDom_reduced2AbsSigSum_reducedVec_54_T_1 @[primitives.scala 106:38]
    node notCDom_reduced2AbsSigSum_lo_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[2], notCDom_reduced2AbsSigSum_reducedVec[1]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[0]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[5], notCDom_reduced2AbsSigSum_reducedVec[4]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_reducedVec[3]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_lo_lo_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[8], notCDom_reduced2AbsSigSum_reducedVec[7]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[6]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[10], notCDom_reduced2AbsSigSum_reducedVec[9]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[12], notCDom_reduced2AbsSigSum_reducedVec[11]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_hi, notCDom_reduced2AbsSigSum_lo_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[15], notCDom_reduced2AbsSigSum_reducedVec[14]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[13]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[17], notCDom_reduced2AbsSigSum_reducedVec[16]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[19], notCDom_reduced2AbsSigSum_reducedVec[18]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_lo_hi_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[22], notCDom_reduced2AbsSigSum_reducedVec[21]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[20]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[24], notCDom_reduced2AbsSigSum_reducedVec[23]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[26], notCDom_reduced2AbsSigSum_reducedVec[25]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo = cat(notCDom_reduced2AbsSigSum_lo_hi, notCDom_reduced2AbsSigSum_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[29], notCDom_reduced2AbsSigSum_reducedVec[28]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[27]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[31], notCDom_reduced2AbsSigSum_reducedVec[30]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[33], notCDom_reduced2AbsSigSum_reducedVec[32]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_hi_lo_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_hi_lo_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[36], notCDom_reduced2AbsSigSum_reducedVec[35]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[34]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[38], notCDom_reduced2AbsSigSum_reducedVec[37]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[40], notCDom_reduced2AbsSigSum_reducedVec[39]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_hi_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_hi, notCDom_reduced2AbsSigSum_hi_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[43], notCDom_reduced2AbsSigSum_reducedVec[42]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[41]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[45], notCDom_reduced2AbsSigSum_reducedVec[44]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[47], notCDom_reduced2AbsSigSum_reducedVec[46]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_hi_hi_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[50], notCDom_reduced2AbsSigSum_reducedVec[49]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[48]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[52], notCDom_reduced2AbsSigSum_reducedVec[51]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[54], notCDom_reduced2AbsSigSum_reducedVec[53]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi = cat(notCDom_reduced2AbsSigSum_hi_hi, notCDom_reduced2AbsSigSum_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(notCDom_reduced2AbsSigSum_hi, notCDom_reduced2AbsSigSum_lo) @[primitives.scala 108:20]
    node _notCDom_normDistReduced2_T = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_1 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_2 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_3 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_4 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_5 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_6 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_7 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_8 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_9 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_10 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_11 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_12 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_13 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_14 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_15 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_16 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_17 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_18 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_19 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_20 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_21 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_22 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_23 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_24 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_25 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_26 = bits(notCDom_reduced2AbsSigSum, 26, 26) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_27 = bits(notCDom_reduced2AbsSigSum, 27, 27) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_28 = bits(notCDom_reduced2AbsSigSum, 28, 28) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_29 = bits(notCDom_reduced2AbsSigSum, 29, 29) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_30 = bits(notCDom_reduced2AbsSigSum, 30, 30) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_31 = bits(notCDom_reduced2AbsSigSum, 31, 31) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_32 = bits(notCDom_reduced2AbsSigSum, 32, 32) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_33 = bits(notCDom_reduced2AbsSigSum, 33, 33) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_34 = bits(notCDom_reduced2AbsSigSum, 34, 34) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_35 = bits(notCDom_reduced2AbsSigSum, 35, 35) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_36 = bits(notCDom_reduced2AbsSigSum, 36, 36) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_37 = bits(notCDom_reduced2AbsSigSum, 37, 37) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_38 = bits(notCDom_reduced2AbsSigSum, 38, 38) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_39 = bits(notCDom_reduced2AbsSigSum, 39, 39) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_40 = bits(notCDom_reduced2AbsSigSum, 40, 40) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_41 = bits(notCDom_reduced2AbsSigSum, 41, 41) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_42 = bits(notCDom_reduced2AbsSigSum, 42, 42) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_43 = bits(notCDom_reduced2AbsSigSum, 43, 43) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_44 = bits(notCDom_reduced2AbsSigSum, 44, 44) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_45 = bits(notCDom_reduced2AbsSigSum, 45, 45) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_46 = bits(notCDom_reduced2AbsSigSum, 46, 46) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_47 = bits(notCDom_reduced2AbsSigSum, 47, 47) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_48 = bits(notCDom_reduced2AbsSigSum, 48, 48) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_49 = bits(notCDom_reduced2AbsSigSum, 49, 49) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_50 = bits(notCDom_reduced2AbsSigSum, 50, 50) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_51 = bits(notCDom_reduced2AbsSigSum, 51, 51) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_52 = bits(notCDom_reduced2AbsSigSum, 52, 52) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_53 = bits(notCDom_reduced2AbsSigSum, 53, 53) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_54 = bits(notCDom_reduced2AbsSigSum, 54, 54) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_55 = mux(_notCDom_normDistReduced2_T_1, UInt<6>("h35"), UInt<6>("h36")) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_56 = mux(_notCDom_normDistReduced2_T_2, UInt<6>("h34"), _notCDom_normDistReduced2_T_55) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_57 = mux(_notCDom_normDistReduced2_T_3, UInt<6>("h33"), _notCDom_normDistReduced2_T_56) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_58 = mux(_notCDom_normDistReduced2_T_4, UInt<6>("h32"), _notCDom_normDistReduced2_T_57) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_59 = mux(_notCDom_normDistReduced2_T_5, UInt<6>("h31"), _notCDom_normDistReduced2_T_58) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_60 = mux(_notCDom_normDistReduced2_T_6, UInt<6>("h30"), _notCDom_normDistReduced2_T_59) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_61 = mux(_notCDom_normDistReduced2_T_7, UInt<6>("h2f"), _notCDom_normDistReduced2_T_60) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_62 = mux(_notCDom_normDistReduced2_T_8, UInt<6>("h2e"), _notCDom_normDistReduced2_T_61) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_63 = mux(_notCDom_normDistReduced2_T_9, UInt<6>("h2d"), _notCDom_normDistReduced2_T_62) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_64 = mux(_notCDom_normDistReduced2_T_10, UInt<6>("h2c"), _notCDom_normDistReduced2_T_63) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_65 = mux(_notCDom_normDistReduced2_T_11, UInt<6>("h2b"), _notCDom_normDistReduced2_T_64) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_66 = mux(_notCDom_normDistReduced2_T_12, UInt<6>("h2a"), _notCDom_normDistReduced2_T_65) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_67 = mux(_notCDom_normDistReduced2_T_13, UInt<6>("h29"), _notCDom_normDistReduced2_T_66) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_68 = mux(_notCDom_normDistReduced2_T_14, UInt<6>("h28"), _notCDom_normDistReduced2_T_67) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_69 = mux(_notCDom_normDistReduced2_T_15, UInt<6>("h27"), _notCDom_normDistReduced2_T_68) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_70 = mux(_notCDom_normDistReduced2_T_16, UInt<6>("h26"), _notCDom_normDistReduced2_T_69) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_71 = mux(_notCDom_normDistReduced2_T_17, UInt<6>("h25"), _notCDom_normDistReduced2_T_70) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_72 = mux(_notCDom_normDistReduced2_T_18, UInt<6>("h24"), _notCDom_normDistReduced2_T_71) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_73 = mux(_notCDom_normDistReduced2_T_19, UInt<6>("h23"), _notCDom_normDistReduced2_T_72) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_74 = mux(_notCDom_normDistReduced2_T_20, UInt<6>("h22"), _notCDom_normDistReduced2_T_73) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_75 = mux(_notCDom_normDistReduced2_T_21, UInt<6>("h21"), _notCDom_normDistReduced2_T_74) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_76 = mux(_notCDom_normDistReduced2_T_22, UInt<6>("h20"), _notCDom_normDistReduced2_T_75) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_77 = mux(_notCDom_normDistReduced2_T_23, UInt<5>("h1f"), _notCDom_normDistReduced2_T_76) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_78 = mux(_notCDom_normDistReduced2_T_24, UInt<5>("h1e"), _notCDom_normDistReduced2_T_77) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_79 = mux(_notCDom_normDistReduced2_T_25, UInt<5>("h1d"), _notCDom_normDistReduced2_T_78) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_80 = mux(_notCDom_normDistReduced2_T_26, UInt<5>("h1c"), _notCDom_normDistReduced2_T_79) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_81 = mux(_notCDom_normDistReduced2_T_27, UInt<5>("h1b"), _notCDom_normDistReduced2_T_80) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_82 = mux(_notCDom_normDistReduced2_T_28, UInt<5>("h1a"), _notCDom_normDistReduced2_T_81) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_83 = mux(_notCDom_normDistReduced2_T_29, UInt<5>("h19"), _notCDom_normDistReduced2_T_82) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_84 = mux(_notCDom_normDistReduced2_T_30, UInt<5>("h18"), _notCDom_normDistReduced2_T_83) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_85 = mux(_notCDom_normDistReduced2_T_31, UInt<5>("h17"), _notCDom_normDistReduced2_T_84) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_86 = mux(_notCDom_normDistReduced2_T_32, UInt<5>("h16"), _notCDom_normDistReduced2_T_85) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_87 = mux(_notCDom_normDistReduced2_T_33, UInt<5>("h15"), _notCDom_normDistReduced2_T_86) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_88 = mux(_notCDom_normDistReduced2_T_34, UInt<5>("h14"), _notCDom_normDistReduced2_T_87) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_89 = mux(_notCDom_normDistReduced2_T_35, UInt<5>("h13"), _notCDom_normDistReduced2_T_88) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_90 = mux(_notCDom_normDistReduced2_T_36, UInt<5>("h12"), _notCDom_normDistReduced2_T_89) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_91 = mux(_notCDom_normDistReduced2_T_37, UInt<5>("h11"), _notCDom_normDistReduced2_T_90) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_92 = mux(_notCDom_normDistReduced2_T_38, UInt<5>("h10"), _notCDom_normDistReduced2_T_91) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_93 = mux(_notCDom_normDistReduced2_T_39, UInt<4>("hf"), _notCDom_normDistReduced2_T_92) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_94 = mux(_notCDom_normDistReduced2_T_40, UInt<4>("he"), _notCDom_normDistReduced2_T_93) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_95 = mux(_notCDom_normDistReduced2_T_41, UInt<4>("hd"), _notCDom_normDistReduced2_T_94) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_96 = mux(_notCDom_normDistReduced2_T_42, UInt<4>("hc"), _notCDom_normDistReduced2_T_95) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_97 = mux(_notCDom_normDistReduced2_T_43, UInt<4>("hb"), _notCDom_normDistReduced2_T_96) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_98 = mux(_notCDom_normDistReduced2_T_44, UInt<4>("ha"), _notCDom_normDistReduced2_T_97) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_99 = mux(_notCDom_normDistReduced2_T_45, UInt<4>("h9"), _notCDom_normDistReduced2_T_98) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_100 = mux(_notCDom_normDistReduced2_T_46, UInt<4>("h8"), _notCDom_normDistReduced2_T_99) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_101 = mux(_notCDom_normDistReduced2_T_47, UInt<3>("h7"), _notCDom_normDistReduced2_T_100) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_102 = mux(_notCDom_normDistReduced2_T_48, UInt<3>("h6"), _notCDom_normDistReduced2_T_101) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_103 = mux(_notCDom_normDistReduced2_T_49, UInt<3>("h5"), _notCDom_normDistReduced2_T_102) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_104 = mux(_notCDom_normDistReduced2_T_50, UInt<3>("h4"), _notCDom_normDistReduced2_T_103) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_105 = mux(_notCDom_normDistReduced2_T_51, UInt<2>("h3"), _notCDom_normDistReduced2_T_104) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_106 = mux(_notCDom_normDistReduced2_T_52, UInt<2>("h2"), _notCDom_normDistReduced2_T_105) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_107 = mux(_notCDom_normDistReduced2_T_53, UInt<1>("h1"), _notCDom_normDistReduced2_T_106) @[Mux.scala 47:70]
    node notCDom_normDistReduced2 = mux(_notCDom_normDistReduced2_T_54, UInt<1>("h0"), _notCDom_normDistReduced2_T_107) @[Mux.scala 47:70]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 239:56]
    node _notCDom_sExp_T = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 240:69]
    node _notCDom_sExp_T_1 = sub(io.fromPreMul.sExpSum, _notCDom_sExp_T) @[MulAddRecFN.scala 240:46]
    node _notCDom_sExp_T_2 = tail(_notCDom_sExp_T_1, 1) @[MulAddRecFN.scala 240:46]
    node notCDom_sExp = asSInt(_notCDom_sExp_T_2) @[MulAddRecFN.scala 240:46]
    node _notCDom_mainSig_T = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 242:27]
    node notCDom_mainSig = bits(_notCDom_mainSig_T, 109, 52) @[MulAddRecFN.scala 242:50]
    node _notCDom_reduced4SigExtra_T = bits(notCDom_reduced2AbsSigSum, 26, 0) @[MulAddRecFN.scala 246:39]
    node _notCDom_reduced4SigExtra_T_1 = shl(_notCDom_reduced4SigExtra_T, 0) @[MulAddRecFN.scala 246:55]
    wire notCDom_reduced4SigExtra_reducedVec : UInt<1>[14] @[primitives.scala 102:30]
    notCDom_reduced4SigExtra_reducedVec is invalid @[primitives.scala 102:30]
    node _notCDom_reduced4SigExtra_reducedVec_0_T = bits(_notCDom_reduced4SigExtra_T_1, 1, 0) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_0_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[0] <= _notCDom_reduced4SigExtra_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_1_T = bits(_notCDom_reduced4SigExtra_T_1, 3, 2) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_1_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[1] <= _notCDom_reduced4SigExtra_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_2_T = bits(_notCDom_reduced4SigExtra_T_1, 5, 4) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_2_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[2] <= _notCDom_reduced4SigExtra_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_3_T = bits(_notCDom_reduced4SigExtra_T_1, 7, 6) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_3_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[3] <= _notCDom_reduced4SigExtra_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_4_T = bits(_notCDom_reduced4SigExtra_T_1, 9, 8) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_4_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[4] <= _notCDom_reduced4SigExtra_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_5_T = bits(_notCDom_reduced4SigExtra_T_1, 11, 10) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_5_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[5] <= _notCDom_reduced4SigExtra_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_6_T = bits(_notCDom_reduced4SigExtra_T_1, 13, 12) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_6_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[6] <= _notCDom_reduced4SigExtra_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_7_T = bits(_notCDom_reduced4SigExtra_T_1, 15, 14) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_7_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_7_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[7] <= _notCDom_reduced4SigExtra_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_8_T = bits(_notCDom_reduced4SigExtra_T_1, 17, 16) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_8_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_8_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[8] <= _notCDom_reduced4SigExtra_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_9_T = bits(_notCDom_reduced4SigExtra_T_1, 19, 18) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_9_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_9_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[9] <= _notCDom_reduced4SigExtra_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_10_T = bits(_notCDom_reduced4SigExtra_T_1, 21, 20) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_10_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_10_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[10] <= _notCDom_reduced4SigExtra_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_11_T = bits(_notCDom_reduced4SigExtra_T_1, 23, 22) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_11_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_11_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[11] <= _notCDom_reduced4SigExtra_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_12_T = bits(_notCDom_reduced4SigExtra_T_1, 25, 24) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_12_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_12_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[12] <= _notCDom_reduced4SigExtra_reducedVec_12_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_13_T = bits(_notCDom_reduced4SigExtra_T_1, 26, 26) @[primitives.scala 107:15]
    node _notCDom_reduced4SigExtra_reducedVec_13_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_13_T) @[primitives.scala 107:57]
    notCDom_reduced4SigExtra_reducedVec[13] <= _notCDom_reduced4SigExtra_reducedVec_13_T_1 @[primitives.scala 106:38]
    node notCDom_reduced4SigExtra_lo_lo_hi = cat(notCDom_reduced4SigExtra_reducedVec[2], notCDom_reduced4SigExtra_reducedVec[1]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo_lo = cat(notCDom_reduced4SigExtra_lo_lo_hi, notCDom_reduced4SigExtra_reducedVec[0]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo_hi_lo = cat(notCDom_reduced4SigExtra_reducedVec[4], notCDom_reduced4SigExtra_reducedVec[3]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo_hi_hi = cat(notCDom_reduced4SigExtra_reducedVec[6], notCDom_reduced4SigExtra_reducedVec[5]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo_hi = cat(notCDom_reduced4SigExtra_lo_hi_hi, notCDom_reduced4SigExtra_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo = cat(notCDom_reduced4SigExtra_lo_hi, notCDom_reduced4SigExtra_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_lo_hi = cat(notCDom_reduced4SigExtra_reducedVec[9], notCDom_reduced4SigExtra_reducedVec[8]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_lo = cat(notCDom_reduced4SigExtra_hi_lo_hi, notCDom_reduced4SigExtra_reducedVec[7]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_hi_lo = cat(notCDom_reduced4SigExtra_reducedVec[11], notCDom_reduced4SigExtra_reducedVec[10]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_hi_hi = cat(notCDom_reduced4SigExtra_reducedVec[13], notCDom_reduced4SigExtra_reducedVec[12]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_hi = cat(notCDom_reduced4SigExtra_hi_hi_hi, notCDom_reduced4SigExtra_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi = cat(notCDom_reduced4SigExtra_hi_hi, notCDom_reduced4SigExtra_hi_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_2 = cat(notCDom_reduced4SigExtra_hi, notCDom_reduced4SigExtra_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_3 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 247:46]
    node _notCDom_reduced4SigExtra_T_4 = not(_notCDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node notCDom_reduced4SigExtra_shift = dshr(asSInt(UInt<33>("h100000000")), _notCDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _notCDom_reduced4SigExtra_T_5 = bits(notCDom_reduced4SigExtra_shift, 13, 1) @[primitives.scala 79:22]
    node _notCDom_reduced4SigExtra_T_6 = bits(_notCDom_reduced4SigExtra_T_5, 7, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_7 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _notCDom_reduced4SigExtra_T_8 = xor(UInt<8>("hff"), _notCDom_reduced4SigExtra_T_7) @[Bitwise.scala 107:21]
    node _notCDom_reduced4SigExtra_T_9 = shr(_notCDom_reduced4SigExtra_T_6, 4) @[Bitwise.scala 108:21]
    node _notCDom_reduced4SigExtra_T_10 = and(_notCDom_reduced4SigExtra_T_9, _notCDom_reduced4SigExtra_T_8) @[Bitwise.scala 108:31]
    node _notCDom_reduced4SigExtra_T_11 = bits(_notCDom_reduced4SigExtra_T_6, 3, 0) @[Bitwise.scala 108:46]
    node _notCDom_reduced4SigExtra_T_12 = shl(_notCDom_reduced4SigExtra_T_11, 4) @[Bitwise.scala 108:70]
    node _notCDom_reduced4SigExtra_T_13 = not(_notCDom_reduced4SigExtra_T_8) @[Bitwise.scala 108:82]
    node _notCDom_reduced4SigExtra_T_14 = and(_notCDom_reduced4SigExtra_T_12, _notCDom_reduced4SigExtra_T_13) @[Bitwise.scala 108:80]
    node _notCDom_reduced4SigExtra_T_15 = or(_notCDom_reduced4SigExtra_T_10, _notCDom_reduced4SigExtra_T_14) @[Bitwise.scala 108:39]
    node _notCDom_reduced4SigExtra_T_16 = bits(_notCDom_reduced4SigExtra_T_8, 5, 0) @[Bitwise.scala 107:28]
    node _notCDom_reduced4SigExtra_T_17 = shl(_notCDom_reduced4SigExtra_T_16, 2) @[Bitwise.scala 107:52]
    node _notCDom_reduced4SigExtra_T_18 = xor(_notCDom_reduced4SigExtra_T_8, _notCDom_reduced4SigExtra_T_17) @[Bitwise.scala 107:21]
    node _notCDom_reduced4SigExtra_T_19 = shr(_notCDom_reduced4SigExtra_T_15, 2) @[Bitwise.scala 108:21]
    node _notCDom_reduced4SigExtra_T_20 = and(_notCDom_reduced4SigExtra_T_19, _notCDom_reduced4SigExtra_T_18) @[Bitwise.scala 108:31]
    node _notCDom_reduced4SigExtra_T_21 = bits(_notCDom_reduced4SigExtra_T_15, 5, 0) @[Bitwise.scala 108:46]
    node _notCDom_reduced4SigExtra_T_22 = shl(_notCDom_reduced4SigExtra_T_21, 2) @[Bitwise.scala 108:70]
    node _notCDom_reduced4SigExtra_T_23 = not(_notCDom_reduced4SigExtra_T_18) @[Bitwise.scala 108:82]
    node _notCDom_reduced4SigExtra_T_24 = and(_notCDom_reduced4SigExtra_T_22, _notCDom_reduced4SigExtra_T_23) @[Bitwise.scala 108:80]
    node _notCDom_reduced4SigExtra_T_25 = or(_notCDom_reduced4SigExtra_T_20, _notCDom_reduced4SigExtra_T_24) @[Bitwise.scala 108:39]
    node _notCDom_reduced4SigExtra_T_26 = bits(_notCDom_reduced4SigExtra_T_18, 6, 0) @[Bitwise.scala 107:28]
    node _notCDom_reduced4SigExtra_T_27 = shl(_notCDom_reduced4SigExtra_T_26, 1) @[Bitwise.scala 107:52]
    node _notCDom_reduced4SigExtra_T_28 = xor(_notCDom_reduced4SigExtra_T_18, _notCDom_reduced4SigExtra_T_27) @[Bitwise.scala 107:21]
    node _notCDom_reduced4SigExtra_T_29 = shr(_notCDom_reduced4SigExtra_T_25, 1) @[Bitwise.scala 108:21]
    node _notCDom_reduced4SigExtra_T_30 = and(_notCDom_reduced4SigExtra_T_29, _notCDom_reduced4SigExtra_T_28) @[Bitwise.scala 108:31]
    node _notCDom_reduced4SigExtra_T_31 = bits(_notCDom_reduced4SigExtra_T_25, 6, 0) @[Bitwise.scala 108:46]
    node _notCDom_reduced4SigExtra_T_32 = shl(_notCDom_reduced4SigExtra_T_31, 1) @[Bitwise.scala 108:70]
    node _notCDom_reduced4SigExtra_T_33 = not(_notCDom_reduced4SigExtra_T_28) @[Bitwise.scala 108:82]
    node _notCDom_reduced4SigExtra_T_34 = and(_notCDom_reduced4SigExtra_T_32, _notCDom_reduced4SigExtra_T_33) @[Bitwise.scala 108:80]
    node _notCDom_reduced4SigExtra_T_35 = or(_notCDom_reduced4SigExtra_T_30, _notCDom_reduced4SigExtra_T_34) @[Bitwise.scala 108:39]
    node _notCDom_reduced4SigExtra_T_36 = bits(_notCDom_reduced4SigExtra_T_5, 12, 8) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_37 = bits(_notCDom_reduced4SigExtra_T_36, 3, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_38 = bits(_notCDom_reduced4SigExtra_T_37, 1, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_39 = bits(_notCDom_reduced4SigExtra_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_40 = bits(_notCDom_reduced4SigExtra_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_41 = cat(_notCDom_reduced4SigExtra_T_39, _notCDom_reduced4SigExtra_T_40) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_42 = bits(_notCDom_reduced4SigExtra_T_37, 3, 2) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_43 = bits(_notCDom_reduced4SigExtra_T_42, 0, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_44 = bits(_notCDom_reduced4SigExtra_T_42, 1, 1) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_45 = cat(_notCDom_reduced4SigExtra_T_43, _notCDom_reduced4SigExtra_T_44) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_46 = cat(_notCDom_reduced4SigExtra_T_41, _notCDom_reduced4SigExtra_T_45) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_47 = bits(_notCDom_reduced4SigExtra_T_36, 4, 4) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_48 = cat(_notCDom_reduced4SigExtra_T_46, _notCDom_reduced4SigExtra_T_47) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_49 = cat(_notCDom_reduced4SigExtra_T_35, _notCDom_reduced4SigExtra_T_48) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_50 = and(_notCDom_reduced4SigExtra_T_2, _notCDom_reduced4SigExtra_T_49) @[MulAddRecFN.scala 246:78]
    node notCDom_reduced4SigExtra = orr(_notCDom_reduced4SigExtra_T_50) @[MulAddRecFN.scala 248:11]
    node _notCDom_sig_T = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 250:28]
    node _notCDom_sig_T_1 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 251:28]
    node _notCDom_sig_T_2 = orr(_notCDom_sig_T_1) @[MulAddRecFN.scala 251:35]
    node _notCDom_sig_T_3 = or(_notCDom_sig_T_2, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 251:39]
    node notCDom_sig = cat(_notCDom_sig_T, _notCDom_sig_T_3) @[Cat.scala 33:92]
    node _notCDom_completeCancellation_T = bits(notCDom_sig, 55, 54) @[MulAddRecFN.scala 254:21]
    node notCDom_completeCancellation = eq(_notCDom_completeCancellation_T, UInt<1>("h0")) @[MulAddRecFN.scala 254:50]
    node _notCDom_sign_T = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 258:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _notCDom_sign_T) @[MulAddRecFN.scala 256:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 263:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 264:44]
    node _notNaN_addZeros_T = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 266:32]
    node notNaN_addZeros = and(_notNaN_addZeros_T, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 266:58]
    node _io_invalidExc_T = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 271:31]
    node _io_invalidExc_T_1 = or(io.fromPreMul.isSigNaNAny, _io_invalidExc_T) @[MulAddRecFN.scala 270:35]
    node _io_invalidExc_T_2 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 272:32]
    node _io_invalidExc_T_3 = or(_io_invalidExc_T_1, _io_invalidExc_T_2) @[MulAddRecFN.scala 271:57]
    node _io_invalidExc_T_4 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h0")) @[MulAddRecFN.scala 273:10]
    node _io_invalidExc_T_5 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 274:36]
    node _io_invalidExc_T_6 = and(_io_invalidExc_T_4, _io_invalidExc_T_5) @[MulAddRecFN.scala 273:36]
    node _io_invalidExc_T_7 = and(_io_invalidExc_T_6, io.fromPreMul.isInfC) @[MulAddRecFN.scala 274:61]
    node _io_invalidExc_T_8 = and(_io_invalidExc_T_7, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 275:35]
    node _io_invalidExc_T_9 = or(_io_invalidExc_T_3, _io_invalidExc_T_8) @[MulAddRecFN.scala 272:57]
    io.invalidExc <= _io_invalidExc_T_9 @[MulAddRecFN.scala 269:19]
    node _io_rawOut_isNaN_T = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 277:48]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulAddRecFN.scala 277:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 278:21]
    node _io_rawOut_isZero_T = eq(io.fromPreMul.CIsDominant, UInt<1>("h0")) @[MulAddRecFN.scala 282:14]
    node _io_rawOut_isZero_T_1 = and(_io_rawOut_isZero_T, notCDom_completeCancellation) @[MulAddRecFN.scala 282:42]
    node _io_rawOut_isZero_T_2 = or(notNaN_addZeros, _io_rawOut_isZero_T_1) @[MulAddRecFN.scala 281:25]
    io.rawOut.isZero <= _io_rawOut_isZero_T_2 @[MulAddRecFN.scala 280:22]
    node _io_rawOut_sign_T = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 284:27]
    node _io_rawOut_sign_T_1 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 285:31]
    node _io_rawOut_sign_T_2 = or(_io_rawOut_sign_T, _io_rawOut_sign_T_1) @[MulAddRecFN.scala 284:54]
    node _io_rawOut_sign_T_3 = eq(roundingMode_min, UInt<1>("h0")) @[MulAddRecFN.scala 286:29]
    node _io_rawOut_sign_T_4 = and(notNaN_addZeros, _io_rawOut_sign_T_3) @[MulAddRecFN.scala 286:26]
    node _io_rawOut_sign_T_5 = and(_io_rawOut_sign_T_4, io.fromPreMul.signProd) @[MulAddRecFN.scala 286:48]
    node _io_rawOut_sign_T_6 = and(_io_rawOut_sign_T_5, CDom_sign) @[MulAddRecFN.scala 287:36]
    node _io_rawOut_sign_T_7 = or(_io_rawOut_sign_T_2, _io_rawOut_sign_T_6) @[MulAddRecFN.scala 285:43]
    node _io_rawOut_sign_T_8 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 288:26]
    node _io_rawOut_sign_T_9 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 289:37]
    node _io_rawOut_sign_T_10 = and(_io_rawOut_sign_T_8, _io_rawOut_sign_T_9) @[MulAddRecFN.scala 288:46]
    node _io_rawOut_sign_T_11 = or(_io_rawOut_sign_T_7, _io_rawOut_sign_T_10) @[MulAddRecFN.scala 287:48]
    node _io_rawOut_sign_T_12 = eq(notNaN_isInfOut, UInt<1>("h0")) @[MulAddRecFN.scala 290:10]
    node _io_rawOut_sign_T_13 = eq(notNaN_addZeros, UInt<1>("h0")) @[MulAddRecFN.scala 290:31]
    node _io_rawOut_sign_T_14 = and(_io_rawOut_sign_T_12, _io_rawOut_sign_T_13) @[MulAddRecFN.scala 290:28]
    node _io_rawOut_sign_T_15 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 291:17]
    node _io_rawOut_sign_T_16 = and(_io_rawOut_sign_T_14, _io_rawOut_sign_T_15) @[MulAddRecFN.scala 290:49]
    node _io_rawOut_sign_T_17 = or(_io_rawOut_sign_T_11, _io_rawOut_sign_T_16) @[MulAddRecFN.scala 289:50]
    io.rawOut.sign <= _io_rawOut_sign_T_17 @[MulAddRecFN.scala 283:20]
    node _io_rawOut_sExp_T = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 292:26]
    io.rawOut.sExp <= _io_rawOut_sExp_T @[MulAddRecFN.scala 292:20]
    node _io_rawOut_sig_T = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 293:25]
    io.rawOut.sig <= _io_rawOut_sig_T @[MulAddRecFN.scala 293:19]

  module FPToFP :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : { valid : UInt<1>, bits : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}}, out : { valid : UInt<1>, bits : { data : UInt<65>, exc : UInt<5>}}, flip lt : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    reg inPipe_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    inPipe_valid <= io.in.valid @[Valid.scala 130:22]
    reg inPipe_bits : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, clock with :
      reset => (UInt<1>("h0"), inPipe_bits) @[Reg.scala 19:16]
    when io.in.valid : @[Reg.scala 20:18]
      inPipe_bits <= io.in.bits @[Reg.scala 20:22]
    wire in : { valid : UInt<1>, bits : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}} @[Valid.scala 125:21]
    in is invalid @[Valid.scala 125:21]
    in.valid <= inPipe_valid @[Valid.scala 126:17]
    in.bits <- inPipe_bits @[Valid.scala 127:16]
    node _signNum_T = bits(in.bits.rm, 1, 1) @[FPU.scala 576:31]
    node _signNum_T_1 = xor(in.bits.in1, in.bits.in2) @[FPU.scala 576:48]
    node _signNum_T_2 = bits(in.bits.rm, 0, 0) @[FPU.scala 576:77]
    node _signNum_T_3 = not(in.bits.in2) @[FPU.scala 576:82]
    node _signNum_T_4 = mux(_signNum_T_2, _signNum_T_3, in.bits.in2) @[FPU.scala 576:66]
    node signNum = mux(_signNum_T, _signNum_T_1, _signNum_T_4) @[FPU.scala 576:20]
    node _fsgnj_T = bits(signNum, 64, 64) @[FPU.scala 577:26]
    node _fsgnj_T_1 = bits(in.bits.in1, 63, 0) @[FPU.scala 577:45]
    node fsgnj = cat(_fsgnj_T, _fsgnj_T_1) @[Cat.scala 33:92]
    wire fsgnjMux : { data : UInt<65>, exc : UInt<5>} @[FPU.scala 579:22]
    fsgnjMux is invalid @[FPU.scala 579:22]
    fsgnjMux.exc <= UInt<1>("h0") @[FPU.scala 580:16]
    fsgnjMux.data <= fsgnj @[FPU.scala 581:17]
    when in.bits.wflags : @[FPU.scala 583:25]
      node _isnan1_T = bits(in.bits.in1, 63, 61) @[FPU.scala 244:25]
      node isnan1 = andr(_isnan1_T) @[FPU.scala 244:56]
      node _isnan2_T = bits(in.bits.in2, 63, 61) @[FPU.scala 244:25]
      node isnan2 = andr(_isnan2_T) @[FPU.scala 244:56]
      node _isInvalid_T = bits(in.bits.in1, 63, 61) @[FPU.scala 244:25]
      node _isInvalid_T_1 = andr(_isInvalid_T) @[FPU.scala 244:56]
      node _isInvalid_T_2 = bits(in.bits.in1, 51, 51) @[FPU.scala 245:39]
      node _isInvalid_T_3 = eq(_isInvalid_T_2, UInt<1>("h0")) @[FPU.scala 245:37]
      node _isInvalid_T_4 = and(_isInvalid_T_1, _isInvalid_T_3) @[FPU.scala 245:34]
      node _isInvalid_T_5 = bits(in.bits.in2, 63, 61) @[FPU.scala 244:25]
      node _isInvalid_T_6 = andr(_isInvalid_T_5) @[FPU.scala 244:56]
      node _isInvalid_T_7 = bits(in.bits.in2, 51, 51) @[FPU.scala 245:39]
      node _isInvalid_T_8 = eq(_isInvalid_T_7, UInt<1>("h0")) @[FPU.scala 245:37]
      node _isInvalid_T_9 = and(_isInvalid_T_6, _isInvalid_T_8) @[FPU.scala 245:34]
      node isInvalid = or(_isInvalid_T_4, _isInvalid_T_9) @[FPU.scala 586:49]
      node isNaNOut = and(isnan1, isnan2) @[FPU.scala 587:27]
      node _isLHS_T = bits(in.bits.rm, 0, 0) @[FPU.scala 588:37]
      node _isLHS_T_1 = neq(_isLHS_T, io.lt) @[FPU.scala 588:41]
      node _isLHS_T_2 = eq(isnan1, UInt<1>("h0")) @[FPU.scala 588:54]
      node _isLHS_T_3 = and(_isLHS_T_1, _isLHS_T_2) @[FPU.scala 588:51]
      node isLHS = or(isnan2, _isLHS_T_3) @[FPU.scala 588:24]
      node _fsgnjMux_exc_T = shl(isInvalid, 4) @[FPU.scala 589:31]
      fsgnjMux.exc <= _fsgnjMux_exc_T @[FPU.scala 589:18]
      node _fsgnjMux_data_T = mux(isLHS, in.bits.in1, in.bits.in2) @[FPU.scala 590:53]
      node _fsgnjMux_data_T_1 = mux(isNaNOut, UInt<65>("he008000000000000"), _fsgnjMux_data_T) @[FPU.scala 590:25]
      fsgnjMux.data <= _fsgnjMux_data_T_1 @[FPU.scala 590:19]
    wire mux : { data : UInt<65>, exc : UInt<5>} @[compatibility.scala 76:26]
    mux is invalid @[compatibility.scala 76:26]
    mux <- fsgnjMux @[compatibility.scala 76:26]
    node _T = eq(in.bits.typeTagOut, UInt<1>("h0")) @[FPU.scala 597:18]
    when _T : @[FPU.scala 597:34]
      node _mux_data_T = shr(fsgnjMux.data, 33) @[FPU.scala 598:37]
      node mux_data_sign = bits(fsgnjMux.data, 64, 64) @[FPU.scala 269:17]
      node mux_data_fractIn = bits(fsgnjMux.data, 51, 0) @[FPU.scala 270:20]
      node mux_data_expIn = bits(fsgnjMux.data, 63, 52) @[FPU.scala 271:18]
      node _mux_data_fractOut_T = shl(mux_data_fractIn, 24) @[FPU.scala 272:28]
      node mux_data_fractOut = shr(_mux_data_fractOut_T, 53) @[FPU.scala 272:38]
      node mux_data_expOut_expCode = bits(mux_data_expIn, 11, 9) @[FPU.scala 274:26]
      node _mux_data_expOut_commonCase_T = add(mux_data_expIn, UInt<9>("h100")) @[FPU.scala 275:31]
      node _mux_data_expOut_commonCase_T_1 = tail(_mux_data_expOut_commonCase_T, 1) @[FPU.scala 275:31]
      node _mux_data_expOut_commonCase_T_2 = sub(_mux_data_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 275:48]
      node mux_data_expOut_commonCase = tail(_mux_data_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
      node _mux_data_expOut_T = eq(mux_data_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
      node _mux_data_expOut_T_1 = geq(mux_data_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
      node _mux_data_expOut_T_2 = or(_mux_data_expOut_T, _mux_data_expOut_T_1) @[FPU.scala 276:25]
      node _mux_data_expOut_T_3 = bits(mux_data_expOut_commonCase, 5, 0) @[FPU.scala 276:65]
      node _mux_data_expOut_T_4 = cat(mux_data_expOut_expCode, _mux_data_expOut_T_3) @[Cat.scala 33:92]
      node _mux_data_expOut_T_5 = bits(mux_data_expOut_commonCase, 8, 0) @[FPU.scala 276:93]
      node mux_data_expOut = mux(_mux_data_expOut_T_2, _mux_data_expOut_T_4, _mux_data_expOut_T_5) @[FPU.scala 276:10]
      node mux_data_hi = cat(mux_data_sign, mux_data_expOut) @[Cat.scala 33:92]
      node _mux_data_T_1 = cat(mux_data_hi, mux_data_fractOut) @[Cat.scala 33:92]
      node _mux_data_T_2 = cat(_mux_data_T, _mux_data_T_1) @[Cat.scala 33:92]
      mux.data <= _mux_data_T_2 @[FPU.scala 598:16]
    node _T_1 = eq(in.bits.ren2, UInt<1>("h0")) @[FPU.scala 602:27]
    node _T_2 = and(in.bits.wflags, _T_1) @[FPU.scala 602:24]
    when _T_2 : @[FPU.scala 602:42]
      node _widened_T = bits(in.bits.in1, 63, 61) @[FPU.scala 244:25]
      node _widened_T_1 = andr(_widened_T) @[FPU.scala 244:56]
      node widened = mux(_widened_T_1, UInt<65>("he008000000000000"), in.bits.in1) @[FPU.scala 605:24]
      fsgnjMux.data <= widened @[FPU.scala 606:21]
      node _fsgnjMux_exc_T_1 = bits(in.bits.in1, 63, 61) @[FPU.scala 244:25]
      node _fsgnjMux_exc_T_2 = andr(_fsgnjMux_exc_T_1) @[FPU.scala 244:56]
      node _fsgnjMux_exc_T_3 = bits(in.bits.in1, 51, 51) @[FPU.scala 245:39]
      node _fsgnjMux_exc_T_4 = eq(_fsgnjMux_exc_T_3, UInt<1>("h0")) @[FPU.scala 245:37]
      node _fsgnjMux_exc_T_5 = and(_fsgnjMux_exc_T_2, _fsgnjMux_exc_T_4) @[FPU.scala 245:34]
      node _fsgnjMux_exc_T_6 = shl(_fsgnjMux_exc_T_5, 4) @[FPU.scala 607:51]
      fsgnjMux.exc <= _fsgnjMux_exc_T_6 @[FPU.scala 607:20]
      node _T_3 = eq(in.bits.typeTagOut, UInt<1>("h0")) @[FPU.scala 612:53]
      node _T_4 = lt(in.bits.typeTagOut, in.bits.typeTagIn) @[FPU.scala 612:110]
      node _T_5 = or(UInt<1>("h1"), _T_4) @[FPU.scala 612:100]
      node _T_6 = and(_T_3, _T_5) @[FPU.scala 612:74]
      when _T_6 : @[FPU.scala 612:120]
        inst narrower of RecFNToRecFN @[FPU.scala 613:30]
        narrower.io is invalid
        narrower.io.in <= in.bits.in1 @[FPU.scala 614:24]
        narrower.io.roundingMode <= in.bits.rm @[FPU.scala 615:34]
        narrower.io.detectTininess <= UInt<1>("h1") @[FPU.scala 616:36]
        node _mux_data_T_3 = shr(fsgnjMux.data, 33) @[FPU.scala 618:39]
        node _mux_data_T_4 = cat(_mux_data_T_3, narrower.io.out) @[Cat.scala 33:92]
        mux.data <= _mux_data_T_4 @[FPU.scala 618:18]
        mux.exc <= narrower.io.exceptionFlags @[FPU.scala 619:17]
    reg io_out_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_out_v <= in.valid @[Valid.scala 130:22]
    reg io_out_b : { data : UInt<65>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), io_out_b) @[Reg.scala 19:16]
    when in.valid : @[Reg.scala 20:18]
      io_out_b <= mux @[Reg.scala 20:22]
    reg io_out_outPipe_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_out_outPipe_valid <= io_out_v @[Valid.scala 130:22]
    reg io_out_outPipe_bits : { data : UInt<65>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), io_out_outPipe_bits) @[Reg.scala 19:16]
    when io_out_v : @[Reg.scala 20:18]
      io_out_outPipe_bits <= io_out_b @[Reg.scala 20:22]
    reg io_out_outPipe_valid_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_out_outPipe_valid_1 <= io_out_outPipe_valid @[Valid.scala 130:22]
    reg io_out_outPipe_bits_1 : { data : UInt<65>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), io_out_outPipe_bits_1) @[Reg.scala 19:16]
    when io_out_outPipe_valid : @[Reg.scala 20:18]
      io_out_outPipe_bits_1 <= io_out_outPipe_bits @[Reg.scala 20:22]
    wire io_out_out : { valid : UInt<1>, bits : { data : UInt<65>, exc : UInt<5>}} @[Valid.scala 125:21]
    io_out_out is invalid @[Valid.scala 125:21]
    io_out_out.valid <= io_out_outPipe_valid_1 @[Valid.scala 126:17]
    io_out_out.bits <- io_out_outPipe_bits_1 @[Valid.scala 127:16]
    io.out <- io_out_out @[FPU.scala 624:10]

  module MulAddRecFNPipe :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip validin : UInt<1>, flip op : UInt<2>, flip a : UInt<65>, flip b : UInt<65>, flip c : UInt<65>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<65>, exceptionFlags : UInt<5>, validout : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul @[FPU.scala 647:41]
    mulAddRecFNToRaw_preMul.io is invalid
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul @[FPU.scala 648:42]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_preMul.io.op <= io.op @[FPU.scala 650:35]
    mulAddRecFNToRaw_preMul.io.a <= io.a @[FPU.scala 651:35]
    mulAddRecFNToRaw_preMul.io.b <= io.b @[FPU.scala 652:35]
    mulAddRecFNToRaw_preMul.io.c <= io.c @[FPU.scala 653:35]
    node _mulAddResult_T = mul(mulAddRecFNToRaw_preMul.io.mulAddA, mulAddRecFNToRaw_preMul.io.mulAddB) @[FPU.scala 656:45]
    node mulAddResult = add(_mulAddResult_T, mulAddRecFNToRaw_preMul.io.mulAddC) @[FPU.scala 657:50]
    wire valid_stage0 : UInt<1> @[FPU.scala 660:28]
    valid_stage0 is invalid @[FPU.scala 660:28]
    wire roundingMode_stage0 : UInt<3> @[FPU.scala 661:35]
    roundingMode_stage0 is invalid @[FPU.scala 661:35]
    wire detectTininess_stage0 : UInt<1> @[FPU.scala 662:37]
    detectTininess_stage0 is invalid @[FPU.scala 662:37]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    mulAddRecFNToRaw_postMul_io_fromPreMul_v <= io.validin @[Valid.scala 130:22]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<13>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<6>, highAlignedSigC : UInt<55>, bit0AlignedSigC : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      mulAddRecFNToRaw_postMul_io_fromPreMul_b <= mulAddRecFNToRaw_preMul.io.toPostMul @[Reg.scala 20:22]
    wire mulAddRecFNToRaw_postMul_io_fromPreMul_out : { valid : UInt<1>, bits : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<13>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<6>, highAlignedSigC : UInt<55>, bit0AlignedSigC : UInt<1>}} @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_fromPreMul_out is invalid @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_fromPreMul_out.valid <= mulAddRecFNToRaw_postMul_io_fromPreMul_v @[Valid.scala 126:17]
    mulAddRecFNToRaw_postMul_io_fromPreMul_out.bits <- mulAddRecFNToRaw_postMul_io_fromPreMul_b @[Valid.scala 127:16]
    mulAddRecFNToRaw_postMul.io.fromPreMul <- mulAddRecFNToRaw_postMul_io_fromPreMul_out.bits @[FPU.scala 665:46]
    reg mulAddRecFNToRaw_postMul_io_mulAddResult_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    mulAddRecFNToRaw_postMul_io_mulAddResult_v <= io.validin @[Valid.scala 130:22]
    reg mulAddRecFNToRaw_postMul_io_mulAddResult_b : UInt<107>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_mulAddResult_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      mulAddRecFNToRaw_postMul_io_mulAddResult_b <= mulAddResult @[Reg.scala 20:22]
    wire mulAddRecFNToRaw_postMul_io_mulAddResult_out : { valid : UInt<1>, bits : UInt<107>} @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_mulAddResult_out is invalid @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_mulAddResult_out.valid <= mulAddRecFNToRaw_postMul_io_mulAddResult_v @[Valid.scala 126:17]
    mulAddRecFNToRaw_postMul_io_mulAddResult_out.bits <= mulAddRecFNToRaw_postMul_io_mulAddResult_b @[Valid.scala 127:16]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddRecFNToRaw_postMul_io_mulAddResult_out.bits @[FPU.scala 666:46]
    reg mulAddRecFNToRaw_postMul_io_roundingMode_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    mulAddRecFNToRaw_postMul_io_roundingMode_v <= io.validin @[Valid.scala 130:22]
    reg mulAddRecFNToRaw_postMul_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_roundingMode_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      mulAddRecFNToRaw_postMul_io_roundingMode_b <= io.roundingMode @[Reg.scala 20:22]
    wire mulAddRecFNToRaw_postMul_io_roundingMode_out : { valid : UInt<1>, bits : UInt<3>} @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_roundingMode_out is invalid @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_roundingMode_out.valid <= mulAddRecFNToRaw_postMul_io_roundingMode_v @[Valid.scala 126:17]
    mulAddRecFNToRaw_postMul_io_roundingMode_out.bits <= mulAddRecFNToRaw_postMul_io_roundingMode_b @[Valid.scala 127:16]
    mulAddRecFNToRaw_postMul.io.roundingMode <= mulAddRecFNToRaw_postMul_io_roundingMode_out.bits @[FPU.scala 667:46]
    reg roundingMode_stage0_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundingMode_stage0_v <= io.validin @[Valid.scala 130:22]
    reg roundingMode_stage0_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundingMode_stage0_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      roundingMode_stage0_b <= io.roundingMode @[Reg.scala 20:22]
    wire roundingMode_stage0_out : { valid : UInt<1>, bits : UInt<3>} @[Valid.scala 125:21]
    roundingMode_stage0_out is invalid @[Valid.scala 125:21]
    roundingMode_stage0_out.valid <= roundingMode_stage0_v @[Valid.scala 126:17]
    roundingMode_stage0_out.bits <= roundingMode_stage0_b @[Valid.scala 127:16]
    roundingMode_stage0 <= roundingMode_stage0_out.bits @[FPU.scala 668:46]
    reg detectTininess_stage0_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    detectTininess_stage0_v <= io.validin @[Valid.scala 130:22]
    reg detectTininess_stage0_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), detectTininess_stage0_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      detectTininess_stage0_b <= io.detectTininess @[Reg.scala 20:22]
    wire detectTininess_stage0_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    detectTininess_stage0_out is invalid @[Valid.scala 125:21]
    detectTininess_stage0_out.valid <= detectTininess_stage0_v @[Valid.scala 126:17]
    detectTininess_stage0_out.bits <= detectTininess_stage0_b @[Valid.scala 127:16]
    detectTininess_stage0 <= detectTininess_stage0_out.bits @[FPU.scala 669:46]
    reg valid_stage0_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    valid_stage0_v <= io.validin @[Valid.scala 130:22]
    reg valid_stage0_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_stage0_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      valid_stage0_b <= UInt<1>("h0") @[Reg.scala 20:22]
    wire valid_stage0_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    valid_stage0_out is invalid @[Valid.scala 125:21]
    valid_stage0_out.valid <= valid_stage0_v @[Valid.scala 126:17]
    valid_stage0_out.bits <= valid_stage0_b @[Valid.scala 127:16]
    valid_stage0 <= valid_stage0_out.valid @[FPU.scala 670:46]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[FPU.scala 675:35]
    roundRawFNToRecFN.io is invalid
    reg roundRawFNToRecFN_io_invalidExc_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_invalidExc_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_invalidExc_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_invalidExc_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_invalidExc_b <= mulAddRecFNToRaw_postMul.io.invalidExc @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_invalidExc_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_invalidExc_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_invalidExc_out.valid <= roundRawFNToRecFN_io_invalidExc_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_invalidExc_out.bits <= roundRawFNToRecFN_io_invalidExc_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.invalidExc <= roundRawFNToRecFN_io_invalidExc_out.bits @[FPU.scala 678:45]
    reg roundRawFNToRecFN_io_in_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_in_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_in_b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<56>}, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_in_b <= mulAddRecFNToRaw_postMul.io.rawOut @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_in_out : { valid : UInt<1>, bits : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<56>}} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_in_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_in_out.valid <= roundRawFNToRecFN_io_in_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_in_out.bits <- roundRawFNToRecFN_io_in_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.in <- roundRawFNToRecFN_io_in_out.bits @[FPU.scala 679:45]
    reg roundRawFNToRecFN_io_roundingMode_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_roundingMode_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_roundingMode_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_roundingMode_b <= roundingMode_stage0 @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_roundingMode_out : { valid : UInt<1>, bits : UInt<3>} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_roundingMode_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_roundingMode_out.valid <= roundRawFNToRecFN_io_roundingMode_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_roundingMode_out.bits <= roundRawFNToRecFN_io_roundingMode_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.roundingMode <= roundRawFNToRecFN_io_roundingMode_out.bits @[FPU.scala 680:45]
    reg roundRawFNToRecFN_io_detectTininess_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_detectTininess_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_detectTininess_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_detectTininess_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_detectTininess_b <= detectTininess_stage0 @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_detectTininess_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_detectTininess_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_detectTininess_out.valid <= roundRawFNToRecFN_io_detectTininess_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_detectTininess_out.bits <= roundRawFNToRecFN_io_detectTininess_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.detectTininess <= roundRawFNToRecFN_io_detectTininess_out.bits @[FPU.scala 681:45]
    reg io_validout_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_validout_v <= valid_stage0 @[Valid.scala 130:22]
    reg io_validout_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_validout_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      io_validout_b <= UInt<1>("h0") @[Reg.scala 20:22]
    wire io_validout_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    io_validout_out is invalid @[Valid.scala 125:21]
    io_validout_out.valid <= io_validout_v @[Valid.scala 126:17]
    io_validout_out.bits <= io_validout_b @[Valid.scala 127:16]
    io.validout <= io_validout_out.valid @[FPU.scala 682:45]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[FPU.scala 684:38]
    io.out <= roundRawFNToRecFN.io.out @[FPU.scala 686:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[FPU.scala 687:23]

  module RoundRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<56>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<65>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_2 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module RoundRawFNToRecFN_1 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_3 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module RoundAnyRawFNToRecFN_2 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<56>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<65>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 55, 55) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<12> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<52> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 11, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 11, 11) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 10, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 10, 10) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 9, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 9, 9) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 8, 0) @[primitives.scala 58:26]
    node roundMask_msb_3 = bits(roundMask_lsbs_2, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_2, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_4 = bits(roundMask_lsbs_3, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_4 = bits(roundMask_lsbs_3, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_5 = bits(roundMask_lsbs_4, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_5 = bits(roundMask_lsbs_4, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_5) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 13) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 31, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<16>("hffff"), 16) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<32>("hffffffff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 16) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 15, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 16) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 23, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 8) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 8) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 23, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 8) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 27, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 4) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 27, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 29, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 107:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 108:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 29, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 108:82]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 108:80]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 108:39]
    node _roundMask_T_43 = bits(_roundMask_T_35, 30, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_44 = shl(_roundMask_T_43, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_45 = xor(_roundMask_T_35, _roundMask_T_44) @[Bitwise.scala 107:21]
    node _roundMask_T_46 = shr(_roundMask_T_42, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_47 = and(_roundMask_T_46, _roundMask_T_45) @[Bitwise.scala 108:31]
    node _roundMask_T_48 = bits(_roundMask_T_42, 30, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_49 = shl(_roundMask_T_48, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_50 = not(_roundMask_T_45) @[Bitwise.scala 108:82]
    node _roundMask_T_51 = and(_roundMask_T_49, _roundMask_T_50) @[Bitwise.scala 108:80]
    node _roundMask_T_52 = or(_roundMask_T_47, _roundMask_T_51) @[Bitwise.scala 108:39]
    node _roundMask_T_53 = bits(_roundMask_T_2, 50, 32) @[Bitwise.scala 114:47]
    node _roundMask_T_54 = bits(_roundMask_T_53, 15, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_55 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 107:52]
    node _roundMask_T_56 = xor(UInt<16>("hffff"), _roundMask_T_55) @[Bitwise.scala 107:21]
    node _roundMask_T_57 = shr(_roundMask_T_54, 8) @[Bitwise.scala 108:21]
    node _roundMask_T_58 = and(_roundMask_T_57, _roundMask_T_56) @[Bitwise.scala 108:31]
    node _roundMask_T_59 = bits(_roundMask_T_54, 7, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_60 = shl(_roundMask_T_59, 8) @[Bitwise.scala 108:70]
    node _roundMask_T_61 = not(_roundMask_T_56) @[Bitwise.scala 108:82]
    node _roundMask_T_62 = and(_roundMask_T_60, _roundMask_T_61) @[Bitwise.scala 108:80]
    node _roundMask_T_63 = or(_roundMask_T_58, _roundMask_T_62) @[Bitwise.scala 108:39]
    node _roundMask_T_64 = bits(_roundMask_T_56, 11, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_65 = shl(_roundMask_T_64, 4) @[Bitwise.scala 107:52]
    node _roundMask_T_66 = xor(_roundMask_T_56, _roundMask_T_65) @[Bitwise.scala 107:21]
    node _roundMask_T_67 = shr(_roundMask_T_63, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_68 = and(_roundMask_T_67, _roundMask_T_66) @[Bitwise.scala 108:31]
    node _roundMask_T_69 = bits(_roundMask_T_63, 11, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_70 = shl(_roundMask_T_69, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_71 = not(_roundMask_T_66) @[Bitwise.scala 108:82]
    node _roundMask_T_72 = and(_roundMask_T_70, _roundMask_T_71) @[Bitwise.scala 108:80]
    node _roundMask_T_73 = or(_roundMask_T_68, _roundMask_T_72) @[Bitwise.scala 108:39]
    node _roundMask_T_74 = bits(_roundMask_T_66, 13, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_75 = shl(_roundMask_T_74, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_76 = xor(_roundMask_T_66, _roundMask_T_75) @[Bitwise.scala 107:21]
    node _roundMask_T_77 = shr(_roundMask_T_73, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_78 = and(_roundMask_T_77, _roundMask_T_76) @[Bitwise.scala 108:31]
    node _roundMask_T_79 = bits(_roundMask_T_73, 13, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_80 = shl(_roundMask_T_79, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_81 = not(_roundMask_T_76) @[Bitwise.scala 108:82]
    node _roundMask_T_82 = and(_roundMask_T_80, _roundMask_T_81) @[Bitwise.scala 108:80]
    node _roundMask_T_83 = or(_roundMask_T_78, _roundMask_T_82) @[Bitwise.scala 108:39]
    node _roundMask_T_84 = bits(_roundMask_T_76, 14, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_85 = shl(_roundMask_T_84, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_86 = xor(_roundMask_T_76, _roundMask_T_85) @[Bitwise.scala 107:21]
    node _roundMask_T_87 = shr(_roundMask_T_83, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_88 = and(_roundMask_T_87, _roundMask_T_86) @[Bitwise.scala 108:31]
    node _roundMask_T_89 = bits(_roundMask_T_83, 14, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_90 = shl(_roundMask_T_89, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_91 = not(_roundMask_T_86) @[Bitwise.scala 108:82]
    node _roundMask_T_92 = and(_roundMask_T_90, _roundMask_T_91) @[Bitwise.scala 108:80]
    node _roundMask_T_93 = or(_roundMask_T_88, _roundMask_T_92) @[Bitwise.scala 108:39]
    node _roundMask_T_94 = bits(_roundMask_T_53, 18, 16) @[Bitwise.scala 114:47]
    node _roundMask_T_95 = bits(_roundMask_T_94, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_96 = bits(_roundMask_T_95, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_97 = bits(_roundMask_T_95, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_98 = cat(_roundMask_T_96, _roundMask_T_97) @[Cat.scala 33:92]
    node _roundMask_T_99 = bits(_roundMask_T_94, 2, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_100 = cat(_roundMask_T_98, _roundMask_T_99) @[Cat.scala 33:92]
    node _roundMask_T_101 = cat(_roundMask_T_93, _roundMask_T_100) @[Cat.scala 33:92]
    node _roundMask_T_102 = cat(_roundMask_T_52, _roundMask_T_101) @[Cat.scala 33:92]
    node _roundMask_T_103 = not(_roundMask_T_102) @[primitives.scala 74:36]
    node _roundMask_T_104 = mux(roundMask_msb_5, UInt<1>("h0"), _roundMask_T_103) @[primitives.scala 74:21]
    node _roundMask_T_105 = not(_roundMask_T_104) @[primitives.scala 74:17]
    node _roundMask_T_106 = not(_roundMask_T_105) @[primitives.scala 74:36]
    node _roundMask_T_107 = mux(roundMask_msb_4, UInt<1>("h0"), _roundMask_T_106) @[primitives.scala 74:21]
    node _roundMask_T_108 = not(_roundMask_T_107) @[primitives.scala 74:17]
    node _roundMask_T_109 = not(_roundMask_T_108) @[primitives.scala 74:36]
    node _roundMask_T_110 = mux(roundMask_msb_3, UInt<1>("h0"), _roundMask_T_109) @[primitives.scala 74:21]
    node _roundMask_T_111 = not(_roundMask_T_110) @[primitives.scala 74:17]
    node _roundMask_T_112 = not(_roundMask_T_111) @[primitives.scala 74:36]
    node _roundMask_T_113 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_112) @[primitives.scala 74:21]
    node _roundMask_T_114 = not(_roundMask_T_113) @[primitives.scala 74:17]
    node _roundMask_T_115 = cat(_roundMask_T_114, UInt<3>("h7")) @[Cat.scala 33:92]
    node roundMask_msb_6 = bits(roundMask_lsbs_1, 9, 9) @[primitives.scala 57:25]
    node roundMask_lsbs_6 = bits(roundMask_lsbs_1, 8, 0) @[primitives.scala 58:26]
    node roundMask_msb_7 = bits(roundMask_lsbs_6, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs_7 = bits(roundMask_lsbs_6, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_8 = bits(roundMask_lsbs_7, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_8 = bits(roundMask_lsbs_7, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_9 = bits(roundMask_lsbs_8, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_9 = bits(roundMask_lsbs_8, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_9) @[primitives.scala 77:58]
    node _roundMask_T_116 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_117 = bits(_roundMask_T_116, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_118 = bits(_roundMask_T_117, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_119 = bits(_roundMask_T_117, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_120 = cat(_roundMask_T_118, _roundMask_T_119) @[Cat.scala 33:92]
    node _roundMask_T_121 = bits(_roundMask_T_116, 2, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_122 = cat(_roundMask_T_120, _roundMask_T_121) @[Cat.scala 33:92]
    node _roundMask_T_123 = mux(roundMask_msb_9, _roundMask_T_122, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_124 = mux(roundMask_msb_8, _roundMask_T_123, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_125 = mux(roundMask_msb_7, _roundMask_T_124, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_126 = mux(roundMask_msb_6, _roundMask_T_125, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_127 = mux(roundMask_msb_1, _roundMask_T_115, _roundMask_T_126) @[primitives.scala 66:24]
    node _roundMask_T_128 = mux(roundMask_msb, _roundMask_T_127, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_129 = or(_roundMask_T_128, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_129, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<55>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 53) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 11, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 52, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 51, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 10) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<11>("h3ce"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 54, 54) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 53, 53) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 11) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<12>("he00"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<12>("h3ce")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<12>("h400"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<12>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<12>("h3ce"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<12>("hbff"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<12>("hc00"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<12>("he00"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<52>("h8000000000000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundAnyRawFNToRecFN_4 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node sAdjustedExp = add(io.in.sExp, asSInt(UInt<12>("h900"))) @[RoundAnyRawFNToRecFN.scala 108:24]
    node _adjustedSig_T = bits(io.in.sig, 53, 28) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _adjustedSig_T_1 = bits(io.in.sig, 27, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node _adjustedSig_T_2 = orr(_adjustedSig_T_1) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(_adjustedSig_T, _adjustedSig_T_2) @[Cat.scala 33:92]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(sAdjustedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 107:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 108:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 108:82]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 108:80]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 108:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 114:47]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 33:92]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 33:92]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 33:92]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 114:47]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 33:92]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 33:92]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 33:92]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 33:92]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 33:92]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 33:92]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(sAdjustedExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(UInt<1>("h0"), _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(UInt<1>("h0"), _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(UInt<1>("h0"), _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(UInt<1>("h0"), _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(sAdjustedExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(UInt<1>("h0"), _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(UInt<1>("h0"), _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module UOPCodeFPUDecoder :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip uopc : UInt<7>, sigs : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>}}

    clock is invalid
    reset is invalid
    io is invalid
    wire decoder_decoded_plaInput : UInt<7> @[pla.scala 77:22]
    node decoder_decoded_invInputs = not(decoder_decoded_plaInput) @[pla.scala 78:21]
    wire decoder_decoded : UInt<16> @[pla.scala 81:23]
    node decoder_decoded_andMatrixInput_0 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi = cat(decoder_decoded_andMatrixInput_3, decoder_decoded_andMatrixInput_4) @[Cat.scala 33:92]
    node decoder_decoded_lo = cat(decoder_decoded_lo_hi, decoder_decoded_andMatrixInput_5) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi = cat(decoder_decoded_andMatrixInput_0, decoder_decoded_andMatrixInput_1) @[Cat.scala 33:92]
    node decoder_decoded_hi = cat(decoder_decoded_hi_hi, decoder_decoded_andMatrixInput_2) @[Cat.scala 33:92]
    node _decoder_decoded_T = cat(decoder_decoded_hi, decoder_decoded_lo) @[Cat.scala 33:92]
    node _decoder_decoded_T_1 = andr(_decoder_decoded_T) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_1 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_1 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_1 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_1 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_1 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_1 = cat(decoder_decoded_andMatrixInput_3_1, decoder_decoded_andMatrixInput_4_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_1 = cat(decoder_decoded_andMatrixInput_0_1, decoder_decoded_andMatrixInput_1_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_1 = cat(decoder_decoded_hi_hi_1, decoder_decoded_andMatrixInput_2_1) @[Cat.scala 33:92]
    node _decoder_decoded_T_2 = cat(decoder_decoded_hi_1, decoder_decoded_lo_1) @[Cat.scala 33:92]
    node _decoder_decoded_T_3 = andr(_decoder_decoded_T_2) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_2 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_2 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_2 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_2 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_2 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_1 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_1 = cat(decoder_decoded_andMatrixInput_3_2, decoder_decoded_andMatrixInput_4_2) @[Cat.scala 33:92]
    node decoder_decoded_lo_2 = cat(decoder_decoded_lo_hi_1, decoder_decoded_andMatrixInput_5_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_2 = cat(decoder_decoded_andMatrixInput_0_2, decoder_decoded_andMatrixInput_1_2) @[Cat.scala 33:92]
    node decoder_decoded_hi_2 = cat(decoder_decoded_hi_hi_2, decoder_decoded_andMatrixInput_2_2) @[Cat.scala 33:92]
    node _decoder_decoded_T_4 = cat(decoder_decoded_hi_2, decoder_decoded_lo_2) @[Cat.scala 33:92]
    node _decoder_decoded_T_5 = andr(_decoder_decoded_T_4) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_3 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_3 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_3 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_3 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_3 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_3 = cat(decoder_decoded_andMatrixInput_3_3, decoder_decoded_andMatrixInput_4_3) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_3 = cat(decoder_decoded_andMatrixInput_0_3, decoder_decoded_andMatrixInput_1_3) @[Cat.scala 33:92]
    node decoder_decoded_hi_3 = cat(decoder_decoded_hi_hi_3, decoder_decoded_andMatrixInput_2_3) @[Cat.scala 33:92]
    node _decoder_decoded_T_6 = cat(decoder_decoded_hi_3, decoder_decoded_lo_3) @[Cat.scala 33:92]
    node _decoder_decoded_T_7 = andr(_decoder_decoded_T_6) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_4 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_4 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_4 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_4 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_4 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_4 = cat(decoder_decoded_andMatrixInput_3_4, decoder_decoded_andMatrixInput_4_4) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_4 = cat(decoder_decoded_andMatrixInput_0_4, decoder_decoded_andMatrixInput_1_4) @[Cat.scala 33:92]
    node decoder_decoded_hi_4 = cat(decoder_decoded_hi_hi_4, decoder_decoded_andMatrixInput_2_4) @[Cat.scala 33:92]
    node _decoder_decoded_T_8 = cat(decoder_decoded_hi_4, decoder_decoded_lo_4) @[Cat.scala 33:92]
    node _decoder_decoded_T_9 = andr(_decoder_decoded_T_8) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_5 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_5 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_5 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_5 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_5 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_2 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_2 = cat(decoder_decoded_andMatrixInput_3_5, decoder_decoded_andMatrixInput_4_5) @[Cat.scala 33:92]
    node decoder_decoded_lo_5 = cat(decoder_decoded_lo_hi_2, decoder_decoded_andMatrixInput_5_2) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_5 = cat(decoder_decoded_andMatrixInput_0_5, decoder_decoded_andMatrixInput_1_5) @[Cat.scala 33:92]
    node decoder_decoded_hi_5 = cat(decoder_decoded_hi_hi_5, decoder_decoded_andMatrixInput_2_5) @[Cat.scala 33:92]
    node _decoder_decoded_T_10 = cat(decoder_decoded_hi_5, decoder_decoded_lo_5) @[Cat.scala 33:92]
    node _decoder_decoded_T_11 = andr(_decoder_decoded_T_10) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_6 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_6 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_6 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_6 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_6 = cat(decoder_decoded_andMatrixInput_2_6, decoder_decoded_andMatrixInput_3_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_6 = cat(decoder_decoded_andMatrixInput_0_6, decoder_decoded_andMatrixInput_1_6) @[Cat.scala 33:92]
    node _decoder_decoded_T_12 = cat(decoder_decoded_hi_6, decoder_decoded_lo_6) @[Cat.scala 33:92]
    node _decoder_decoded_T_13 = andr(_decoder_decoded_T_12) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_7 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_7 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_7 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_7 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_6 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_7 = cat(decoder_decoded_andMatrixInput_3_7, decoder_decoded_andMatrixInput_4_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_6 = cat(decoder_decoded_andMatrixInput_0_7, decoder_decoded_andMatrixInput_1_7) @[Cat.scala 33:92]
    node decoder_decoded_hi_7 = cat(decoder_decoded_hi_hi_6, decoder_decoded_andMatrixInput_2_7) @[Cat.scala 33:92]
    node _decoder_decoded_T_14 = cat(decoder_decoded_hi_7, decoder_decoded_lo_7) @[Cat.scala 33:92]
    node _decoder_decoded_T_15 = andr(_decoder_decoded_T_14) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_8 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_8 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_8 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_8 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_7 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_8 = cat(decoder_decoded_andMatrixInput_3_8, decoder_decoded_andMatrixInput_4_7) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_7 = cat(decoder_decoded_andMatrixInput_0_8, decoder_decoded_andMatrixInput_1_8) @[Cat.scala 33:92]
    node decoder_decoded_hi_8 = cat(decoder_decoded_hi_hi_7, decoder_decoded_andMatrixInput_2_8) @[Cat.scala 33:92]
    node _decoder_decoded_T_16 = cat(decoder_decoded_hi_8, decoder_decoded_lo_8) @[Cat.scala 33:92]
    node _decoder_decoded_T_17 = andr(_decoder_decoded_T_16) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_9 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_9 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_9 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_9 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_8 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_9 = cat(decoder_decoded_andMatrixInput_3_9, decoder_decoded_andMatrixInput_4_8) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_8 = cat(decoder_decoded_andMatrixInput_0_9, decoder_decoded_andMatrixInput_1_9) @[Cat.scala 33:92]
    node decoder_decoded_hi_9 = cat(decoder_decoded_hi_hi_8, decoder_decoded_andMatrixInput_2_9) @[Cat.scala 33:92]
    node _decoder_decoded_T_18 = cat(decoder_decoded_hi_9, decoder_decoded_lo_9) @[Cat.scala 33:92]
    node _decoder_decoded_T_19 = andr(_decoder_decoded_T_18) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_10 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_10 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_10 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_10 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_9 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_3 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_3 = cat(decoder_decoded_andMatrixInput_3_10, decoder_decoded_andMatrixInput_4_9) @[Cat.scala 33:92]
    node decoder_decoded_lo_10 = cat(decoder_decoded_lo_hi_3, decoder_decoded_andMatrixInput_5_3) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_9 = cat(decoder_decoded_andMatrixInput_0_10, decoder_decoded_andMatrixInput_1_10) @[Cat.scala 33:92]
    node decoder_decoded_hi_10 = cat(decoder_decoded_hi_hi_9, decoder_decoded_andMatrixInput_2_10) @[Cat.scala 33:92]
    node _decoder_decoded_T_20 = cat(decoder_decoded_hi_10, decoder_decoded_lo_10) @[Cat.scala 33:92]
    node _decoder_decoded_T_21 = andr(_decoder_decoded_T_20) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_11 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_11 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_11 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_11 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_11 = cat(decoder_decoded_andMatrixInput_2_11, decoder_decoded_andMatrixInput_3_11) @[Cat.scala 33:92]
    node decoder_decoded_hi_11 = cat(decoder_decoded_andMatrixInput_0_11, decoder_decoded_andMatrixInput_1_11) @[Cat.scala 33:92]
    node _decoder_decoded_T_22 = cat(decoder_decoded_hi_11, decoder_decoded_lo_11) @[Cat.scala 33:92]
    node _decoder_decoded_T_23 = andr(_decoder_decoded_T_22) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_12 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_12 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_12 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_12 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_10 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_4 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_4 = cat(decoder_decoded_andMatrixInput_3_12, decoder_decoded_andMatrixInput_4_10) @[Cat.scala 33:92]
    node decoder_decoded_lo_12 = cat(decoder_decoded_lo_hi_4, decoder_decoded_andMatrixInput_5_4) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_10 = cat(decoder_decoded_andMatrixInput_0_12, decoder_decoded_andMatrixInput_1_12) @[Cat.scala 33:92]
    node decoder_decoded_hi_12 = cat(decoder_decoded_hi_hi_10, decoder_decoded_andMatrixInput_2_12) @[Cat.scala 33:92]
    node _decoder_decoded_T_24 = cat(decoder_decoded_hi_12, decoder_decoded_lo_12) @[Cat.scala 33:92]
    node _decoder_decoded_T_25 = andr(_decoder_decoded_T_24) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_13 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_13 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_13 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_13 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_13 = cat(decoder_decoded_andMatrixInput_2_13, decoder_decoded_andMatrixInput_3_13) @[Cat.scala 33:92]
    node decoder_decoded_hi_13 = cat(decoder_decoded_andMatrixInput_0_13, decoder_decoded_andMatrixInput_1_13) @[Cat.scala 33:92]
    node _decoder_decoded_T_26 = cat(decoder_decoded_hi_13, decoder_decoded_lo_13) @[Cat.scala 33:92]
    node _decoder_decoded_T_27 = andr(_decoder_decoded_T_26) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_14 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_14 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_14 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_14 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_14 = cat(decoder_decoded_andMatrixInput_2_14, decoder_decoded_andMatrixInput_3_14) @[Cat.scala 33:92]
    node decoder_decoded_hi_14 = cat(decoder_decoded_andMatrixInput_0_14, decoder_decoded_andMatrixInput_1_14) @[Cat.scala 33:92]
    node _decoder_decoded_T_28 = cat(decoder_decoded_hi_14, decoder_decoded_lo_14) @[Cat.scala 33:92]
    node _decoder_decoded_T_29 = andr(_decoder_decoded_T_28) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_15 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_15 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_15 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_15 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_15 = cat(decoder_decoded_andMatrixInput_2_15, decoder_decoded_andMatrixInput_3_15) @[Cat.scala 33:92]
    node decoder_decoded_hi_15 = cat(decoder_decoded_andMatrixInput_0_15, decoder_decoded_andMatrixInput_1_15) @[Cat.scala 33:92]
    node _decoder_decoded_T_30 = cat(decoder_decoded_hi_15, decoder_decoded_lo_15) @[Cat.scala 33:92]
    node _decoder_decoded_T_31 = andr(_decoder_decoded_T_30) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_16 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_16 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_16 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_16 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_11 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_16 = cat(decoder_decoded_andMatrixInput_3_16, decoder_decoded_andMatrixInput_4_11) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_11 = cat(decoder_decoded_andMatrixInput_0_16, decoder_decoded_andMatrixInput_1_16) @[Cat.scala 33:92]
    node decoder_decoded_hi_16 = cat(decoder_decoded_hi_hi_11, decoder_decoded_andMatrixInput_2_16) @[Cat.scala 33:92]
    node _decoder_decoded_T_32 = cat(decoder_decoded_hi_16, decoder_decoded_lo_16) @[Cat.scala 33:92]
    node _decoder_decoded_T_33 = andr(_decoder_decoded_T_32) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_17 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_17 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_17 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_17 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_17 = cat(decoder_decoded_andMatrixInput_2_17, decoder_decoded_andMatrixInput_3_17) @[Cat.scala 33:92]
    node decoder_decoded_hi_17 = cat(decoder_decoded_andMatrixInput_0_17, decoder_decoded_andMatrixInput_1_17) @[Cat.scala 33:92]
    node _decoder_decoded_T_34 = cat(decoder_decoded_hi_17, decoder_decoded_lo_17) @[Cat.scala 33:92]
    node _decoder_decoded_T_35 = andr(_decoder_decoded_T_34) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_18 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_18 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_18 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_18 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_12 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_5 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_5 = cat(decoder_decoded_andMatrixInput_3_18, decoder_decoded_andMatrixInput_4_12) @[Cat.scala 33:92]
    node decoder_decoded_lo_18 = cat(decoder_decoded_lo_hi_5, decoder_decoded_andMatrixInput_5_5) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_12 = cat(decoder_decoded_andMatrixInput_0_18, decoder_decoded_andMatrixInput_1_18) @[Cat.scala 33:92]
    node decoder_decoded_hi_18 = cat(decoder_decoded_hi_hi_12, decoder_decoded_andMatrixInput_2_18) @[Cat.scala 33:92]
    node _decoder_decoded_T_36 = cat(decoder_decoded_hi_18, decoder_decoded_lo_18) @[Cat.scala 33:92]
    node _decoder_decoded_T_37 = andr(_decoder_decoded_T_36) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_19 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_19 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_19 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_19 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_13 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_6 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_6 = cat(decoder_decoded_andMatrixInput_3_19, decoder_decoded_andMatrixInput_4_13) @[Cat.scala 33:92]
    node decoder_decoded_lo_19 = cat(decoder_decoded_lo_hi_6, decoder_decoded_andMatrixInput_5_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_13 = cat(decoder_decoded_andMatrixInput_0_19, decoder_decoded_andMatrixInput_1_19) @[Cat.scala 33:92]
    node decoder_decoded_hi_19 = cat(decoder_decoded_hi_hi_13, decoder_decoded_andMatrixInput_2_19) @[Cat.scala 33:92]
    node _decoder_decoded_T_38 = cat(decoder_decoded_hi_19, decoder_decoded_lo_19) @[Cat.scala 33:92]
    node _decoder_decoded_T_39 = andr(_decoder_decoded_T_38) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_20 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_20 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_20 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_20 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_14 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_7 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_7 = cat(decoder_decoded_andMatrixInput_3_20, decoder_decoded_andMatrixInput_4_14) @[Cat.scala 33:92]
    node decoder_decoded_lo_20 = cat(decoder_decoded_lo_hi_7, decoder_decoded_andMatrixInput_5_7) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_14 = cat(decoder_decoded_andMatrixInput_0_20, decoder_decoded_andMatrixInput_1_20) @[Cat.scala 33:92]
    node decoder_decoded_hi_20 = cat(decoder_decoded_hi_hi_14, decoder_decoded_andMatrixInput_2_20) @[Cat.scala 33:92]
    node _decoder_decoded_T_40 = cat(decoder_decoded_hi_20, decoder_decoded_lo_20) @[Cat.scala 33:92]
    node _decoder_decoded_T_41 = andr(_decoder_decoded_T_40) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_21 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_21 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_21 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_21 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_15 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_8 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_8 = cat(decoder_decoded_andMatrixInput_3_21, decoder_decoded_andMatrixInput_4_15) @[Cat.scala 33:92]
    node decoder_decoded_lo_21 = cat(decoder_decoded_lo_hi_8, decoder_decoded_andMatrixInput_5_8) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_15 = cat(decoder_decoded_andMatrixInput_0_21, decoder_decoded_andMatrixInput_1_21) @[Cat.scala 33:92]
    node decoder_decoded_hi_21 = cat(decoder_decoded_hi_hi_15, decoder_decoded_andMatrixInput_2_21) @[Cat.scala 33:92]
    node _decoder_decoded_T_42 = cat(decoder_decoded_hi_21, decoder_decoded_lo_21) @[Cat.scala 33:92]
    node _decoder_decoded_T_43 = andr(_decoder_decoded_T_42) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_22 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_22 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_22 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_22 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_16 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_22 = cat(decoder_decoded_andMatrixInput_3_22, decoder_decoded_andMatrixInput_4_16) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_16 = cat(decoder_decoded_andMatrixInput_0_22, decoder_decoded_andMatrixInput_1_22) @[Cat.scala 33:92]
    node decoder_decoded_hi_22 = cat(decoder_decoded_hi_hi_16, decoder_decoded_andMatrixInput_2_22) @[Cat.scala 33:92]
    node _decoder_decoded_T_44 = cat(decoder_decoded_hi_22, decoder_decoded_lo_22) @[Cat.scala 33:92]
    node _decoder_decoded_T_45 = andr(_decoder_decoded_T_44) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_23 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_23 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_23 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_23 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_17 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_9 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_9 = cat(decoder_decoded_andMatrixInput_3_23, decoder_decoded_andMatrixInput_4_17) @[Cat.scala 33:92]
    node decoder_decoded_lo_23 = cat(decoder_decoded_lo_hi_9, decoder_decoded_andMatrixInput_5_9) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_17 = cat(decoder_decoded_andMatrixInput_0_23, decoder_decoded_andMatrixInput_1_23) @[Cat.scala 33:92]
    node decoder_decoded_hi_23 = cat(decoder_decoded_hi_hi_17, decoder_decoded_andMatrixInput_2_23) @[Cat.scala 33:92]
    node _decoder_decoded_T_46 = cat(decoder_decoded_hi_23, decoder_decoded_lo_23) @[Cat.scala 33:92]
    node _decoder_decoded_T_47 = andr(_decoder_decoded_T_46) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_24 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_24 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_24 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_24 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_18 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_10 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_6 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_10 = cat(decoder_decoded_andMatrixInput_4_18, decoder_decoded_andMatrixInput_5_10) @[Cat.scala 33:92]
    node decoder_decoded_lo_24 = cat(decoder_decoded_lo_hi_10, decoder_decoded_andMatrixInput_6) @[Cat.scala 33:92]
    node decoder_decoded_hi_lo = cat(decoder_decoded_andMatrixInput_2_24, decoder_decoded_andMatrixInput_3_24) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_18 = cat(decoder_decoded_andMatrixInput_0_24, decoder_decoded_andMatrixInput_1_24) @[Cat.scala 33:92]
    node decoder_decoded_hi_24 = cat(decoder_decoded_hi_hi_18, decoder_decoded_hi_lo) @[Cat.scala 33:92]
    node _decoder_decoded_T_48 = cat(decoder_decoded_hi_24, decoder_decoded_lo_24) @[Cat.scala 33:92]
    node _decoder_decoded_T_49 = andr(_decoder_decoded_T_48) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_25 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_25 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_25 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_25 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_25 = cat(decoder_decoded_andMatrixInput_2_25, decoder_decoded_andMatrixInput_3_25) @[Cat.scala 33:92]
    node decoder_decoded_hi_25 = cat(decoder_decoded_andMatrixInput_0_25, decoder_decoded_andMatrixInput_1_25) @[Cat.scala 33:92]
    node _decoder_decoded_T_50 = cat(decoder_decoded_hi_25, decoder_decoded_lo_25) @[Cat.scala 33:92]
    node _decoder_decoded_T_51 = andr(_decoder_decoded_T_50) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_26 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_26 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_26 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_26 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_19 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_11 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_11 = cat(decoder_decoded_andMatrixInput_3_26, decoder_decoded_andMatrixInput_4_19) @[Cat.scala 33:92]
    node decoder_decoded_lo_26 = cat(decoder_decoded_lo_hi_11, decoder_decoded_andMatrixInput_5_11) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_19 = cat(decoder_decoded_andMatrixInput_0_26, decoder_decoded_andMatrixInput_1_26) @[Cat.scala 33:92]
    node decoder_decoded_hi_26 = cat(decoder_decoded_hi_hi_19, decoder_decoded_andMatrixInput_2_26) @[Cat.scala 33:92]
    node _decoder_decoded_T_52 = cat(decoder_decoded_hi_26, decoder_decoded_lo_26) @[Cat.scala 33:92]
    node _decoder_decoded_T_53 = andr(_decoder_decoded_T_52) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_27 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_27 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_27 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_27 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_20 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_12 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_12 = cat(decoder_decoded_andMatrixInput_3_27, decoder_decoded_andMatrixInput_4_20) @[Cat.scala 33:92]
    node decoder_decoded_lo_27 = cat(decoder_decoded_lo_hi_12, decoder_decoded_andMatrixInput_5_12) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_20 = cat(decoder_decoded_andMatrixInput_0_27, decoder_decoded_andMatrixInput_1_27) @[Cat.scala 33:92]
    node decoder_decoded_hi_27 = cat(decoder_decoded_hi_hi_20, decoder_decoded_andMatrixInput_2_27) @[Cat.scala 33:92]
    node _decoder_decoded_T_54 = cat(decoder_decoded_hi_27, decoder_decoded_lo_27) @[Cat.scala 33:92]
    node _decoder_decoded_T_55 = andr(_decoder_decoded_T_54) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_28 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_28 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_28 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_28 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_21 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_13 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_6_1 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_13 = cat(decoder_decoded_andMatrixInput_4_21, decoder_decoded_andMatrixInput_5_13) @[Cat.scala 33:92]
    node decoder_decoded_lo_28 = cat(decoder_decoded_lo_hi_13, decoder_decoded_andMatrixInput_6_1) @[Cat.scala 33:92]
    node decoder_decoded_hi_lo_1 = cat(decoder_decoded_andMatrixInput_2_28, decoder_decoded_andMatrixInput_3_28) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_21 = cat(decoder_decoded_andMatrixInput_0_28, decoder_decoded_andMatrixInput_1_28) @[Cat.scala 33:92]
    node decoder_decoded_hi_28 = cat(decoder_decoded_hi_hi_21, decoder_decoded_hi_lo_1) @[Cat.scala 33:92]
    node _decoder_decoded_T_56 = cat(decoder_decoded_hi_28, decoder_decoded_lo_28) @[Cat.scala 33:92]
    node _decoder_decoded_T_57 = andr(_decoder_decoded_T_56) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_29 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_29 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_29 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_29 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_22 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_14 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_14 = cat(decoder_decoded_andMatrixInput_3_29, decoder_decoded_andMatrixInput_4_22) @[Cat.scala 33:92]
    node decoder_decoded_lo_29 = cat(decoder_decoded_lo_hi_14, decoder_decoded_andMatrixInput_5_14) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_22 = cat(decoder_decoded_andMatrixInput_0_29, decoder_decoded_andMatrixInput_1_29) @[Cat.scala 33:92]
    node decoder_decoded_hi_29 = cat(decoder_decoded_hi_hi_22, decoder_decoded_andMatrixInput_2_29) @[Cat.scala 33:92]
    node _decoder_decoded_T_58 = cat(decoder_decoded_hi_29, decoder_decoded_lo_29) @[Cat.scala 33:92]
    node _decoder_decoded_T_59 = andr(_decoder_decoded_T_58) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_30 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_30 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_2_30 = bits(decoder_decoded_plaInput, 3, 3) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_30 = bits(decoder_decoded_plaInput, 4, 4) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_23 = bits(decoder_decoded_invInputs, 5, 5) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_15 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_15 = cat(decoder_decoded_andMatrixInput_3_30, decoder_decoded_andMatrixInput_4_23) @[Cat.scala 33:92]
    node decoder_decoded_lo_30 = cat(decoder_decoded_lo_hi_15, decoder_decoded_andMatrixInput_5_15) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_23 = cat(decoder_decoded_andMatrixInput_0_30, decoder_decoded_andMatrixInput_1_30) @[Cat.scala 33:92]
    node decoder_decoded_hi_30 = cat(decoder_decoded_hi_hi_23, decoder_decoded_andMatrixInput_2_30) @[Cat.scala 33:92]
    node _decoder_decoded_T_60 = cat(decoder_decoded_hi_30, decoder_decoded_lo_30) @[Cat.scala 33:92]
    node _decoder_decoded_T_61 = andr(_decoder_decoded_T_60) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_31 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_31 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_31 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_31 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_24 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_16 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_16 = cat(decoder_decoded_andMatrixInput_3_31, decoder_decoded_andMatrixInput_4_24) @[Cat.scala 33:92]
    node decoder_decoded_lo_31 = cat(decoder_decoded_lo_hi_16, decoder_decoded_andMatrixInput_5_16) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_24 = cat(decoder_decoded_andMatrixInput_0_31, decoder_decoded_andMatrixInput_1_31) @[Cat.scala 33:92]
    node decoder_decoded_hi_31 = cat(decoder_decoded_hi_hi_24, decoder_decoded_andMatrixInput_2_31) @[Cat.scala 33:92]
    node _decoder_decoded_T_62 = cat(decoder_decoded_hi_31, decoder_decoded_lo_31) @[Cat.scala 33:92]
    node _decoder_decoded_T_63 = andr(_decoder_decoded_T_62) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_32 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_32 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_32 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_32 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_4_25 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_32 = cat(decoder_decoded_andMatrixInput_3_32, decoder_decoded_andMatrixInput_4_25) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_25 = cat(decoder_decoded_andMatrixInput_0_32, decoder_decoded_andMatrixInput_1_32) @[Cat.scala 33:92]
    node decoder_decoded_hi_32 = cat(decoder_decoded_hi_hi_25, decoder_decoded_andMatrixInput_2_32) @[Cat.scala 33:92]
    node _decoder_decoded_T_64 = cat(decoder_decoded_hi_32, decoder_decoded_lo_32) @[Cat.scala 33:92]
    node _decoder_decoded_T_65 = andr(_decoder_decoded_T_64) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_33 = bits(decoder_decoded_plaInput, 0, 0) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_33 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_33 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_33 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_26 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_17 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_17 = cat(decoder_decoded_andMatrixInput_3_33, decoder_decoded_andMatrixInput_4_26) @[Cat.scala 33:92]
    node decoder_decoded_lo_33 = cat(decoder_decoded_lo_hi_17, decoder_decoded_andMatrixInput_5_17) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_26 = cat(decoder_decoded_andMatrixInput_0_33, decoder_decoded_andMatrixInput_1_33) @[Cat.scala 33:92]
    node decoder_decoded_hi_33 = cat(decoder_decoded_hi_hi_26, decoder_decoded_andMatrixInput_2_33) @[Cat.scala 33:92]
    node _decoder_decoded_T_66 = cat(decoder_decoded_hi_33, decoder_decoded_lo_33) @[Cat.scala 33:92]
    node _decoder_decoded_T_67 = andr(_decoder_decoded_T_66) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_34 = bits(decoder_decoded_plaInput, 1, 1) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_1_34 = bits(decoder_decoded_invInputs, 2, 2) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_34 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_3_34 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_27 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_5_18 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_18 = cat(decoder_decoded_andMatrixInput_3_34, decoder_decoded_andMatrixInput_4_27) @[Cat.scala 33:92]
    node decoder_decoded_lo_34 = cat(decoder_decoded_lo_hi_18, decoder_decoded_andMatrixInput_5_18) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_27 = cat(decoder_decoded_andMatrixInput_0_34, decoder_decoded_andMatrixInput_1_34) @[Cat.scala 33:92]
    node decoder_decoded_hi_34 = cat(decoder_decoded_hi_hi_27, decoder_decoded_andMatrixInput_2_34) @[Cat.scala 33:92]
    node _decoder_decoded_T_68 = cat(decoder_decoded_hi_34, decoder_decoded_lo_34) @[Cat.scala 33:92]
    node _decoder_decoded_T_69 = andr(_decoder_decoded_T_68) @[pla.scala 98:74]
    node decoder_decoded_andMatrixInput_0_35 = bits(decoder_decoded_invInputs, 0, 0) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_1_35 = bits(decoder_decoded_invInputs, 1, 1) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_2_35 = bits(decoder_decoded_plaInput, 2, 2) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_3_35 = bits(decoder_decoded_invInputs, 3, 3) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_4_28 = bits(decoder_decoded_invInputs, 4, 4) @[pla.scala 91:29]
    node decoder_decoded_andMatrixInput_5_19 = bits(decoder_decoded_plaInput, 5, 5) @[pla.scala 90:45]
    node decoder_decoded_andMatrixInput_6_2 = bits(decoder_decoded_plaInput, 6, 6) @[pla.scala 90:45]
    node decoder_decoded_lo_hi_19 = cat(decoder_decoded_andMatrixInput_4_28, decoder_decoded_andMatrixInput_5_19) @[Cat.scala 33:92]
    node decoder_decoded_lo_35 = cat(decoder_decoded_lo_hi_19, decoder_decoded_andMatrixInput_6_2) @[Cat.scala 33:92]
    node decoder_decoded_hi_lo_2 = cat(decoder_decoded_andMatrixInput_2_35, decoder_decoded_andMatrixInput_3_35) @[Cat.scala 33:92]
    node decoder_decoded_hi_hi_28 = cat(decoder_decoded_andMatrixInput_0_35, decoder_decoded_andMatrixInput_1_35) @[Cat.scala 33:92]
    node decoder_decoded_hi_35 = cat(decoder_decoded_hi_hi_28, decoder_decoded_hi_lo_2) @[Cat.scala 33:92]
    node _decoder_decoded_T_70 = cat(decoder_decoded_hi_35, decoder_decoded_lo_35) @[Cat.scala 33:92]
    node _decoder_decoded_T_71 = andr(_decoder_decoded_T_70) @[pla.scala 98:74]
    node decoder_decoded_orMatrixOutputs_lo_hi = cat(_decoder_decoded_T_45, _decoder_decoded_T_63) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo = cat(decoder_decoded_orMatrixOutputs_lo_hi, _decoder_decoded_T_65) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi = cat(_decoder_decoded_T_23, _decoder_decoded_T_27) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi = cat(decoder_decoded_orMatrixOutputs_hi_hi, _decoder_decoded_T_29) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T = cat(decoder_decoded_orMatrixOutputs_hi, decoder_decoded_orMatrixOutputs_lo) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_1 = orr(_decoder_decoded_orMatrixOutputs_T) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_1 = cat(_decoder_decoded_T_63, _decoder_decoded_T_65) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_1 = cat(_decoder_decoded_T_47, _decoder_decoded_T_51) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_2 = cat(decoder_decoded_orMatrixOutputs_hi_1, decoder_decoded_orMatrixOutputs_lo_1) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_3 = orr(_decoder_decoded_orMatrixOutputs_T_2) @[pla.scala 114:39]
    node _decoder_decoded_orMatrixOutputs_T_4 = cat(_decoder_decoded_T_17, _decoder_decoded_T_43) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_5 = orr(_decoder_decoded_orMatrixOutputs_T_4) @[pla.scala 114:39]
    node _decoder_decoded_orMatrixOutputs_T_6 = cat(_decoder_decoded_T_9, _decoder_decoded_T_33) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_7 = orr(_decoder_decoded_orMatrixOutputs_T_6) @[pla.scala 114:39]
    node _decoder_decoded_orMatrixOutputs_T_8 = orr(_decoder_decoded_T_3) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_lo = cat(_decoder_decoded_T_67, _decoder_decoded_T_69) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_1 = cat(_decoder_decoded_T_55, _decoder_decoded_T_57) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_2 = cat(decoder_decoded_orMatrixOutputs_lo_hi_1, decoder_decoded_orMatrixOutputs_lo_lo) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_lo = cat(_decoder_decoded_T_19, _decoder_decoded_T_39) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_hi = cat(_decoder_decoded_T_1, _decoder_decoded_T_5) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_1 = cat(decoder_decoded_orMatrixOutputs_hi_hi_hi, _decoder_decoded_T_7) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_2 = cat(decoder_decoded_orMatrixOutputs_hi_hi_1, decoder_decoded_orMatrixOutputs_hi_lo) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_9 = cat(decoder_decoded_orMatrixOutputs_hi_2, decoder_decoded_orMatrixOutputs_lo_2) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_10 = orr(_decoder_decoded_orMatrixOutputs_T_9) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_lo_1 = cat(_decoder_decoded_T_69, _decoder_decoded_T_71) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_hi = cat(_decoder_decoded_T_41, _decoder_decoded_T_57) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_2 = cat(decoder_decoded_orMatrixOutputs_lo_hi_hi, _decoder_decoded_T_67) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_3 = cat(decoder_decoded_orMatrixOutputs_lo_hi_2, decoder_decoded_orMatrixOutputs_lo_lo_1) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_lo_1 = cat(_decoder_decoded_T_25, _decoder_decoded_T_37) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_hi_1 = cat(_decoder_decoded_T_7, _decoder_decoded_T_11) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_2 = cat(decoder_decoded_orMatrixOutputs_hi_hi_hi_1, _decoder_decoded_T_21) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_3 = cat(decoder_decoded_orMatrixOutputs_hi_hi_2, decoder_decoded_orMatrixOutputs_hi_lo_1) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_11 = cat(decoder_decoded_orMatrixOutputs_hi_3, decoder_decoded_orMatrixOutputs_lo_3) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_12 = orr(_decoder_decoded_orMatrixOutputs_T_11) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_hi_4 = cat(_decoder_decoded_T_49, _decoder_decoded_T_53) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_13 = cat(decoder_decoded_orMatrixOutputs_hi_4, _decoder_decoded_T_55) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_14 = orr(_decoder_decoded_orMatrixOutputs_T_13) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_4 = cat(_decoder_decoded_T_63, _decoder_decoded_T_65) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_5 = cat(_decoder_decoded_T_59, _decoder_decoded_T_61) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_15 = cat(decoder_decoded_orMatrixOutputs_hi_5, decoder_decoded_orMatrixOutputs_lo_4) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_16 = orr(_decoder_decoded_orMatrixOutputs_T_15) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_hi_3 = cat(_decoder_decoded_T_51, _decoder_decoded_T_63) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_5 = cat(decoder_decoded_orMatrixOutputs_lo_hi_3, _decoder_decoded_T_65) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_3 = cat(_decoder_decoded_T_15, _decoder_decoded_T_29) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_6 = cat(decoder_decoded_orMatrixOutputs_hi_hi_3, _decoder_decoded_T_45) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_17 = cat(decoder_decoded_orMatrixOutputs_hi_6, decoder_decoded_orMatrixOutputs_lo_5) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_18 = orr(_decoder_decoded_orMatrixOutputs_T_17) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_lo_2 = cat(_decoder_decoded_T_63, _decoder_decoded_T_65) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_4 = cat(_decoder_decoded_T_31, _decoder_decoded_T_35) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_6 = cat(decoder_decoded_orMatrixOutputs_lo_hi_4, decoder_decoded_orMatrixOutputs_lo_lo_2) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_lo_2 = cat(_decoder_decoded_T_23, _decoder_decoded_T_29) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_4 = cat(_decoder_decoded_T_9, _decoder_decoded_T_13) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_7 = cat(decoder_decoded_orMatrixOutputs_hi_hi_4, decoder_decoded_orMatrixOutputs_hi_lo_2) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_19 = cat(decoder_decoded_orMatrixOutputs_hi_7, decoder_decoded_orMatrixOutputs_lo_6) @[Cat.scala 33:92]
    node _decoder_decoded_orMatrixOutputs_T_20 = orr(_decoder_decoded_orMatrixOutputs_T_19) @[pla.scala 114:39]
    node decoder_decoded_orMatrixOutputs_lo_lo_lo = cat(UInt<1>("h0"), _decoder_decoded_orMatrixOutputs_T_1) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_lo_hi = cat(_decoder_decoded_orMatrixOutputs_T_3, UInt<1>("h0")) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_lo_3 = cat(decoder_decoded_orMatrixOutputs_lo_lo_hi, decoder_decoded_orMatrixOutputs_lo_lo_lo) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_lo = cat(_decoder_decoded_orMatrixOutputs_T_7, _decoder_decoded_orMatrixOutputs_T_5) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_hi_1 = cat(_decoder_decoded_orMatrixOutputs_T_10, _decoder_decoded_orMatrixOutputs_T_8) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_hi_5 = cat(decoder_decoded_orMatrixOutputs_lo_hi_hi_1, decoder_decoded_orMatrixOutputs_lo_hi_lo) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_lo_7 = cat(decoder_decoded_orMatrixOutputs_lo_hi_5, decoder_decoded_orMatrixOutputs_lo_lo_3) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_lo_lo = cat(_decoder_decoded_orMatrixOutputs_T_14, _decoder_decoded_orMatrixOutputs_T_12) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_lo_hi = cat(_decoder_decoded_orMatrixOutputs_T_16, UInt<1>("h0")) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_lo_3 = cat(decoder_decoded_orMatrixOutputs_hi_lo_hi, decoder_decoded_orMatrixOutputs_hi_lo_lo) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_lo = cat(_decoder_decoded_orMatrixOutputs_T_20, _decoder_decoded_orMatrixOutputs_T_18) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_hi_2 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_hi_5 = cat(decoder_decoded_orMatrixOutputs_hi_hi_hi_2, decoder_decoded_orMatrixOutputs_hi_hi_lo) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs_hi_8 = cat(decoder_decoded_orMatrixOutputs_hi_hi_5, decoder_decoded_orMatrixOutputs_hi_lo_3) @[Cat.scala 33:92]
    node decoder_decoded_orMatrixOutputs = cat(decoder_decoded_orMatrixOutputs_hi_8, decoder_decoded_orMatrixOutputs_lo_7) @[Cat.scala 33:92]
    node _decoder_decoded_invMatrixOutputs_T = bits(decoder_decoded_orMatrixOutputs, 0, 0) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_1 = bits(decoder_decoded_orMatrixOutputs, 1, 1) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_2 = bits(decoder_decoded_orMatrixOutputs, 2, 2) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_3 = bits(decoder_decoded_orMatrixOutputs, 3, 3) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_4 = bits(decoder_decoded_orMatrixOutputs, 4, 4) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_5 = bits(decoder_decoded_orMatrixOutputs, 5, 5) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_6 = bits(decoder_decoded_orMatrixOutputs, 6, 6) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_7 = bits(decoder_decoded_orMatrixOutputs, 7, 7) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_8 = bits(decoder_decoded_orMatrixOutputs, 8, 8) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_9 = bits(decoder_decoded_orMatrixOutputs, 9, 9) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_10 = bits(decoder_decoded_orMatrixOutputs, 10, 10) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_11 = bits(decoder_decoded_orMatrixOutputs, 11, 11) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_12 = bits(decoder_decoded_orMatrixOutputs, 12, 12) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_13 = bits(decoder_decoded_orMatrixOutputs, 13, 13) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_14 = bits(decoder_decoded_orMatrixOutputs, 14, 14) @[pla.scala 124:31]
    node _decoder_decoded_invMatrixOutputs_T_15 = bits(decoder_decoded_orMatrixOutputs, 15, 15) @[pla.scala 124:31]
    node decoder_decoded_invMatrixOutputs_lo_lo_lo = cat(_decoder_decoded_invMatrixOutputs_T_1, _decoder_decoded_invMatrixOutputs_T) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_lo_lo_hi = cat(_decoder_decoded_invMatrixOutputs_T_3, _decoder_decoded_invMatrixOutputs_T_2) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_lo_lo = cat(decoder_decoded_invMatrixOutputs_lo_lo_hi, decoder_decoded_invMatrixOutputs_lo_lo_lo) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_lo_hi_lo = cat(_decoder_decoded_invMatrixOutputs_T_5, _decoder_decoded_invMatrixOutputs_T_4) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_lo_hi_hi = cat(_decoder_decoded_invMatrixOutputs_T_7, _decoder_decoded_invMatrixOutputs_T_6) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_lo_hi = cat(decoder_decoded_invMatrixOutputs_lo_hi_hi, decoder_decoded_invMatrixOutputs_lo_hi_lo) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_lo = cat(decoder_decoded_invMatrixOutputs_lo_hi, decoder_decoded_invMatrixOutputs_lo_lo) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi_lo_lo = cat(_decoder_decoded_invMatrixOutputs_T_9, _decoder_decoded_invMatrixOutputs_T_8) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi_lo_hi = cat(_decoder_decoded_invMatrixOutputs_T_11, _decoder_decoded_invMatrixOutputs_T_10) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi_lo = cat(decoder_decoded_invMatrixOutputs_hi_lo_hi, decoder_decoded_invMatrixOutputs_hi_lo_lo) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi_hi_lo = cat(_decoder_decoded_invMatrixOutputs_T_13, _decoder_decoded_invMatrixOutputs_T_12) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi_hi_hi = cat(_decoder_decoded_invMatrixOutputs_T_15, _decoder_decoded_invMatrixOutputs_T_14) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi_hi = cat(decoder_decoded_invMatrixOutputs_hi_hi_hi, decoder_decoded_invMatrixOutputs_hi_hi_lo) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs_hi = cat(decoder_decoded_invMatrixOutputs_hi_hi, decoder_decoded_invMatrixOutputs_hi_lo) @[Cat.scala 33:92]
    node decoder_decoded_invMatrixOutputs = cat(decoder_decoded_invMatrixOutputs_hi, decoder_decoded_invMatrixOutputs_lo) @[Cat.scala 33:92]
    decoder_decoded <= decoder_decoded_invMatrixOutputs @[pla.scala 129:13]
    decoder_decoded_plaInput <= io.uopc @[decoder.scala 40:16]
    node decoder_0 = bits(decoder_decoded, 15, 15) @[Decode.scala 50:77]
    node decoder_1 = bits(decoder_decoded, 14, 14) @[Decode.scala 50:77]
    node decoder_2 = bits(decoder_decoded, 13, 13) @[Decode.scala 50:77]
    node decoder_3 = bits(decoder_decoded, 12, 12) @[Decode.scala 50:77]
    node decoder_4 = bits(decoder_decoded, 11, 11) @[Decode.scala 50:77]
    node decoder_5 = bits(decoder_decoded, 10, 10) @[Decode.scala 50:77]
    node decoder_6 = bits(decoder_decoded, 9, 9) @[Decode.scala 50:77]
    node decoder_7 = bits(decoder_decoded, 8, 8) @[Decode.scala 50:77]
    node decoder_8 = bits(decoder_decoded, 7, 7) @[Decode.scala 50:77]
    node decoder_9 = bits(decoder_decoded, 6, 6) @[Decode.scala 50:77]
    node decoder_10 = bits(decoder_decoded, 5, 5) @[Decode.scala 50:77]
    node decoder_11 = bits(decoder_decoded, 4, 4) @[Decode.scala 50:77]
    node decoder_12 = bits(decoder_decoded, 3, 3) @[Decode.scala 50:77]
    node decoder_13 = bits(decoder_decoded, 2, 2) @[Decode.scala 50:77]
    node decoder_14 = bits(decoder_decoded, 1, 1) @[Decode.scala 50:77]
    node decoder_15 = bits(decoder_decoded, 0, 0) @[Decode.scala 50:77]
    io.sigs.ldst <= decoder_0 @[fpu.scala 115:40]
    io.sigs.wen <= decoder_1 @[fpu.scala 115:40]
    io.sigs.ren1 <= decoder_2 @[fpu.scala 115:40]
    io.sigs.ren2 <= decoder_3 @[fpu.scala 115:40]
    io.sigs.ren3 <= decoder_4 @[fpu.scala 115:40]
    io.sigs.swap12 <= decoder_5 @[fpu.scala 115:40]
    io.sigs.swap23 <= decoder_6 @[fpu.scala 115:40]
    io.sigs.typeTagIn <= decoder_7 @[fpu.scala 115:40]
    io.sigs.typeTagOut <= decoder_8 @[fpu.scala 115:40]
    io.sigs.fromint <= decoder_9 @[fpu.scala 115:40]
    io.sigs.toint <= decoder_10 @[fpu.scala 115:40]
    io.sigs.fastpipe <= decoder_11 @[fpu.scala 115:40]
    io.sigs.fma <= decoder_12 @[fpu.scala 115:40]
    io.sigs.div <= decoder_13 @[fpu.scala 115:40]
    io.sigs.sqrt <= decoder_14 @[fpu.scala 115:40]
    io.sigs.wflags <= decoder_15 @[fpu.scala 115:40]

  module CompareRecFN :
    output io : { flip a : UInt<65>, flip b : UInt<65>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}

    io is invalid
    node rawA_exp = bits(io.a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawA_isZero_T = bits(rawA_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawA_isZero = eq(_rawA_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawA_isSpecial_T = bits(rawA_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawA_isSpecial = eq(_rawA_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawA_out_isNaN_T = bits(rawA_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawA_out_isNaN_T_1 = and(rawA_isSpecial, _rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _rawA_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawA_out_isInf_T = bits(rawA_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawA_out_isInf_T_1 = eq(_rawA_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawA_out_isInf_T_2 = and(rawA_isSpecial, _rawA_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _rawA_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= rawA_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawA_out_sign_T = bits(io.a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _rawA_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawA_out_sExp_T = cvt(rawA_exp) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _rawA_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawA_out_sig_T = eq(rawA_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawA_out_sig_T_1 = bits(io.a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawA_out_sig_hi = cat(UInt<1>("h0"), _rawA_out_sig_T) @[Cat.scala 33:92]
    node _rawA_out_sig_T_2 = cat(rawA_out_sig_hi, _rawA_out_sig_T_1) @[Cat.scala 33:92]
    rawA.sig <= _rawA_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node rawB_exp = bits(io.b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawB_isZero_T = bits(rawB_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawB_isZero = eq(_rawB_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawB_isSpecial_T = bits(rawB_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawB_isSpecial = eq(_rawB_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawB_out_isNaN_T = bits(rawB_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawB_out_isNaN_T_1 = and(rawB_isSpecial, _rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _rawB_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawB_out_isInf_T = bits(rawB_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawB_out_isInf_T_1 = eq(_rawB_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawB_out_isInf_T_2 = and(rawB_isSpecial, _rawB_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _rawB_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= rawB_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawB_out_sign_T = bits(io.b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _rawB_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawB_out_sExp_T = cvt(rawB_exp) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _rawB_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawB_out_sig_T = eq(rawB_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawB_out_sig_T_1 = bits(io.b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawB_out_sig_hi = cat(UInt<1>("h0"), _rawB_out_sig_T) @[Cat.scala 33:92]
    node _rawB_out_sig_T_2 = cat(rawB_out_sig_hi, _rawB_out_sig_T_1) @[Cat.scala 33:92]
    rawB.sig <= _rawB_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node _ordered_T = eq(rawA.isNaN, UInt<1>("h0")) @[CompareRecFN.scala 57:19]
    node _ordered_T_1 = eq(rawB.isNaN, UInt<1>("h0")) @[CompareRecFN.scala 57:35]
    node ordered = and(_ordered_T, _ordered_T_1) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _common_ltMags_T = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _common_ltMags_T_1 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _common_ltMags_T_2 = and(eqExps, _common_ltMags_T_1) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_common_ltMags_T, _common_ltMags_T_2) @[CompareRecFN.scala 62:33]
    node _common_eqMags_T = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _common_eqMags_T) @[CompareRecFN.scala 63:32]
    node _ordered_lt_T = eq(bothZeros, UInt<1>("h0")) @[CompareRecFN.scala 66:9]
    node _ordered_lt_T_1 = eq(rawB.sign, UInt<1>("h0")) @[CompareRecFN.scala 67:28]
    node _ordered_lt_T_2 = and(rawA.sign, _ordered_lt_T_1) @[CompareRecFN.scala 67:25]
    node _ordered_lt_T_3 = eq(bothInfs, UInt<1>("h0")) @[CompareRecFN.scala 68:19]
    node _ordered_lt_T_4 = eq(common_ltMags, UInt<1>("h0")) @[CompareRecFN.scala 69:38]
    node _ordered_lt_T_5 = and(rawA.sign, _ordered_lt_T_4) @[CompareRecFN.scala 69:35]
    node _ordered_lt_T_6 = eq(common_eqMags, UInt<1>("h0")) @[CompareRecFN.scala 69:57]
    node _ordered_lt_T_7 = and(_ordered_lt_T_5, _ordered_lt_T_6) @[CompareRecFN.scala 69:54]
    node _ordered_lt_T_8 = eq(rawB.sign, UInt<1>("h0")) @[CompareRecFN.scala 70:29]
    node _ordered_lt_T_9 = and(_ordered_lt_T_8, common_ltMags) @[CompareRecFN.scala 70:41]
    node _ordered_lt_T_10 = or(_ordered_lt_T_7, _ordered_lt_T_9) @[CompareRecFN.scala 69:74]
    node _ordered_lt_T_11 = and(_ordered_lt_T_3, _ordered_lt_T_10) @[CompareRecFN.scala 68:30]
    node _ordered_lt_T_12 = or(_ordered_lt_T_2, _ordered_lt_T_11) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_ordered_lt_T, _ordered_lt_T_12) @[CompareRecFN.scala 66:21]
    node _ordered_eq_T = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _ordered_eq_T_1 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _ordered_eq_T_2 = and(_ordered_eq_T, _ordered_eq_T_1) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _ordered_eq_T_2) @[CompareRecFN.scala 72:19]
    node _invalid_T = bits(rawA.sig, 51, 51) @[common.scala 82:56]
    node _invalid_T_1 = eq(_invalid_T, UInt<1>("h0")) @[common.scala 82:49]
    node _invalid_T_2 = and(rawA.isNaN, _invalid_T_1) @[common.scala 82:46]
    node _invalid_T_3 = bits(rawB.sig, 51, 51) @[common.scala 82:56]
    node _invalid_T_4 = eq(_invalid_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _invalid_T_5 = and(rawB.isNaN, _invalid_T_4) @[common.scala 82:46]
    node _invalid_T_6 = or(_invalid_T_2, _invalid_T_5) @[CompareRecFN.scala 75:32]
    node _invalid_T_7 = eq(ordered, UInt<1>("h0")) @[CompareRecFN.scala 76:30]
    node _invalid_T_8 = and(io.signaling, _invalid_T_7) @[CompareRecFN.scala 76:27]
    node invalid = or(_invalid_T_6, _invalid_T_8) @[CompareRecFN.scala 75:58]
    node _io_lt_T = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _io_lt_T @[CompareRecFN.scala 78:11]
    node _io_eq_T = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _io_eq_T @[CompareRecFN.scala 79:11]
    node _io_gt_T = eq(ordered_lt, UInt<1>("h0")) @[CompareRecFN.scala 80:25]
    node _io_gt_T_1 = and(ordered, _io_gt_T) @[CompareRecFN.scala 80:22]
    node _io_gt_T_2 = eq(ordered_eq, UInt<1>("h0")) @[CompareRecFN.scala 80:41]
    node _io_gt_T_3 = and(_io_gt_T_1, _io_gt_T_2) @[CompareRecFN.scala 80:38]
    io.gt <= _io_gt_T_3 @[CompareRecFN.scala 80:11]
    node _io_exceptionFlags_T = cat(invalid, UInt<4>("h0")) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[CompareRecFN.scala 81:23]

  module MulAddRecFNToRaw_preMul :
    output io : { flip op : UInt<2>, flip a : UInt<65>, flip b : UInt<65>, flip c : UInt<65>, mulAddA : UInt<53>, mulAddB : UInt<53>, mulAddC : UInt<106>, toPostMul : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<13>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<6>, highAlignedSigC : UInt<55>, bit0AlignedSigC : UInt<1>}}

    io is invalid
    node rawA_exp = bits(io.a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawA_isZero_T = bits(rawA_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawA_isZero = eq(_rawA_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawA_isSpecial_T = bits(rawA_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawA_isSpecial = eq(_rawA_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawA_out_isNaN_T = bits(rawA_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawA_out_isNaN_T_1 = and(rawA_isSpecial, _rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _rawA_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawA_out_isInf_T = bits(rawA_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawA_out_isInf_T_1 = eq(_rawA_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawA_out_isInf_T_2 = and(rawA_isSpecial, _rawA_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _rawA_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= rawA_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawA_out_sign_T = bits(io.a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _rawA_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawA_out_sExp_T = cvt(rawA_exp) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _rawA_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawA_out_sig_T = eq(rawA_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawA_out_sig_T_1 = bits(io.a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawA_out_sig_hi = cat(UInt<1>("h0"), _rawA_out_sig_T) @[Cat.scala 33:92]
    node _rawA_out_sig_T_2 = cat(rawA_out_sig_hi, _rawA_out_sig_T_1) @[Cat.scala 33:92]
    rawA.sig <= _rawA_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node rawB_exp = bits(io.b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawB_isZero_T = bits(rawB_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawB_isZero = eq(_rawB_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawB_isSpecial_T = bits(rawB_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawB_isSpecial = eq(_rawB_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawB_out_isNaN_T = bits(rawB_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawB_out_isNaN_T_1 = and(rawB_isSpecial, _rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _rawB_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawB_out_isInf_T = bits(rawB_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawB_out_isInf_T_1 = eq(_rawB_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawB_out_isInf_T_2 = and(rawB_isSpecial, _rawB_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _rawB_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= rawB_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawB_out_sign_T = bits(io.b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _rawB_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawB_out_sExp_T = cvt(rawB_exp) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _rawB_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawB_out_sig_T = eq(rawB_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawB_out_sig_T_1 = bits(io.b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawB_out_sig_hi = cat(UInt<1>("h0"), _rawB_out_sig_T) @[Cat.scala 33:92]
    node _rawB_out_sig_T_2 = cat(rawB_out_sig_hi, _rawB_out_sig_T_1) @[Cat.scala 33:92]
    rawB.sig <= _rawB_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node rawC_exp = bits(io.c, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawC_isZero_T = bits(rawC_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawC_isZero = eq(_rawC_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawC_isSpecial_T = bits(rawC_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawC_isSpecial = eq(_rawC_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawC_out_isNaN_T = bits(rawC_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawC_out_isNaN_T_1 = and(rawC_isSpecial, _rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _rawC_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawC_out_isInf_T = bits(rawC_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawC_out_isInf_T_1 = eq(_rawC_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawC_out_isInf_T_2 = and(rawC_isSpecial, _rawC_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _rawC_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= rawC_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawC_out_sign_T = bits(io.c, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _rawC_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawC_out_sExp_T = cvt(rawC_exp) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _rawC_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawC_out_sig_T = eq(rawC_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawC_out_sig_T_1 = bits(io.c, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawC_out_sig_hi = cat(UInt<1>("h0"), _rawC_out_sig_T) @[Cat.scala 33:92]
    node _rawC_out_sig_T_2 = cat(rawC_out_sig_hi, _rawC_out_sig_T_1) @[Cat.scala 33:92]
    rawC.sig <= _rawC_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node _signProd_T = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 95:30]
    node _signProd_T_1 = bits(io.op, 1, 1) @[MulAddRecFN.scala 95:49]
    node signProd = xor(_signProd_T, _signProd_T_1) @[MulAddRecFN.scala 95:42]
    node _sExpAlignedProd_T = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 98:19]
    node _sExpAlignedProd_T_1 = add(_sExpAlignedProd_T, asSInt(UInt<12>("h838"))) @[MulAddRecFN.scala 98:32]
    node _sExpAlignedProd_T_2 = tail(_sExpAlignedProd_T_1, 1) @[MulAddRecFN.scala 98:32]
    node sExpAlignedProd = asSInt(_sExpAlignedProd_T_2) @[MulAddRecFN.scala 98:32]
    node _doSubMags_T = xor(signProd, rawC.sign) @[MulAddRecFN.scala 100:30]
    node _doSubMags_T_1 = bits(io.op, 0, 0) @[MulAddRecFN.scala 100:49]
    node doSubMags = xor(_doSubMags_T, _doSubMags_T_1) @[MulAddRecFN.scala 100:42]
    node _sNatCAlignDist_T = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 104:42]
    node _sNatCAlignDist_T_1 = tail(_sNatCAlignDist_T, 1) @[MulAddRecFN.scala 104:42]
    node sNatCAlignDist = asSInt(_sNatCAlignDist_T_1) @[MulAddRecFN.scala 104:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 12, 0) @[MulAddRecFN.scala 105:42]
    node _isMinCAlign_T = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 106:35]
    node _isMinCAlign_T_1 = lt(sNatCAlignDist, asSInt(UInt<1>("h0"))) @[MulAddRecFN.scala 106:69]
    node isMinCAlign = or(_isMinCAlign_T, _isMinCAlign_T_1) @[MulAddRecFN.scala 106:50]
    node _CIsDominant_T = eq(rawC.isZero, UInt<1>("h0")) @[MulAddRecFN.scala 108:9]
    node _CIsDominant_T_1 = leq(posNatCAlignDist, UInt<6>("h35")) @[MulAddRecFN.scala 108:60]
    node _CIsDominant_T_2 = or(isMinCAlign, _CIsDominant_T_1) @[MulAddRecFN.scala 108:39]
    node CIsDominant = and(_CIsDominant_T, _CIsDominant_T_2) @[MulAddRecFN.scala 108:23]
    node _CAlignDist_T = lt(posNatCAlignDist, UInt<8>("ha1")) @[MulAddRecFN.scala 112:34]
    node _CAlignDist_T_1 = bits(posNatCAlignDist, 7, 0) @[MulAddRecFN.scala 113:33]
    node _CAlignDist_T_2 = mux(_CAlignDist_T, _CAlignDist_T_1, UInt<8>("ha1")) @[MulAddRecFN.scala 112:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h0"), _CAlignDist_T_2) @[MulAddRecFN.scala 110:12]
    node _mainAlignedSigC_T = not(rawC.sig) @[MulAddRecFN.scala 118:28]
    node _mainAlignedSigC_T_1 = mux(doSubMags, _mainAlignedSigC_T, rawC.sig) @[MulAddRecFN.scala 118:16]
    node _mainAlignedSigC_T_2 = bits(doSubMags, 0, 0) @[Bitwise.scala 77:15]
    node _mainAlignedSigC_T_3 = mux(_mainAlignedSigC_T_2, UInt<111>("h7fffffffffffffffffffffffffff"), UInt<111>("h0")) @[Bitwise.scala 77:12]
    node _mainAlignedSigC_T_4 = cat(_mainAlignedSigC_T_1, _mainAlignedSigC_T_3) @[Cat.scala 33:92]
    node _mainAlignedSigC_T_5 = asSInt(_mainAlignedSigC_T_4) @[MulAddRecFN.scala 120:11]
    node mainAlignedSigC = dshr(_mainAlignedSigC_T_5, CAlignDist) @[MulAddRecFN.scala 120:17]
    node _reduced4CExtra_T = shl(rawC.sig, 0) @[MulAddRecFN.scala 122:30]
    wire reduced4CExtra_reducedVec : UInt<1>[14] @[primitives.scala 119:30]
    reduced4CExtra_reducedVec is invalid @[primitives.scala 119:30]
    node _reduced4CExtra_reducedVec_0_T = bits(_reduced4CExtra_T, 3, 0) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_0_T_1 = orr(_reduced4CExtra_reducedVec_0_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[0] <= _reduced4CExtra_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_1_T = bits(_reduced4CExtra_T, 7, 4) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_1_T_1 = orr(_reduced4CExtra_reducedVec_1_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[1] <= _reduced4CExtra_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_2_T = bits(_reduced4CExtra_T, 11, 8) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_2_T_1 = orr(_reduced4CExtra_reducedVec_2_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[2] <= _reduced4CExtra_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_3_T = bits(_reduced4CExtra_T, 15, 12) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_3_T_1 = orr(_reduced4CExtra_reducedVec_3_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[3] <= _reduced4CExtra_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_4_T = bits(_reduced4CExtra_T, 19, 16) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_4_T_1 = orr(_reduced4CExtra_reducedVec_4_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[4] <= _reduced4CExtra_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_5_T = bits(_reduced4CExtra_T, 23, 20) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_5_T_1 = orr(_reduced4CExtra_reducedVec_5_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[5] <= _reduced4CExtra_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_6_T = bits(_reduced4CExtra_T, 27, 24) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_6_T_1 = orr(_reduced4CExtra_reducedVec_6_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[6] <= _reduced4CExtra_reducedVec_6_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_7_T = bits(_reduced4CExtra_T, 31, 28) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_7_T_1 = orr(_reduced4CExtra_reducedVec_7_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[7] <= _reduced4CExtra_reducedVec_7_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_8_T = bits(_reduced4CExtra_T, 35, 32) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_8_T_1 = orr(_reduced4CExtra_reducedVec_8_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[8] <= _reduced4CExtra_reducedVec_8_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_9_T = bits(_reduced4CExtra_T, 39, 36) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_9_T_1 = orr(_reduced4CExtra_reducedVec_9_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[9] <= _reduced4CExtra_reducedVec_9_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_10_T = bits(_reduced4CExtra_T, 43, 40) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_10_T_1 = orr(_reduced4CExtra_reducedVec_10_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[10] <= _reduced4CExtra_reducedVec_10_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_11_T = bits(_reduced4CExtra_T, 47, 44) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_11_T_1 = orr(_reduced4CExtra_reducedVec_11_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[11] <= _reduced4CExtra_reducedVec_11_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_12_T = bits(_reduced4CExtra_T, 51, 48) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_12_T_1 = orr(_reduced4CExtra_reducedVec_12_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[12] <= _reduced4CExtra_reducedVec_12_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_13_T = bits(_reduced4CExtra_T, 53, 52) @[primitives.scala 124:15]
    node _reduced4CExtra_reducedVec_13_T_1 = orr(_reduced4CExtra_reducedVec_13_T) @[primitives.scala 124:57]
    reduced4CExtra_reducedVec[13] <= _reduced4CExtra_reducedVec_13_T_1 @[primitives.scala 123:38]
    node reduced4CExtra_lo_lo_hi = cat(reduced4CExtra_reducedVec[2], reduced4CExtra_reducedVec[1]) @[primitives.scala 125:20]
    node reduced4CExtra_lo_lo = cat(reduced4CExtra_lo_lo_hi, reduced4CExtra_reducedVec[0]) @[primitives.scala 125:20]
    node reduced4CExtra_lo_hi_lo = cat(reduced4CExtra_reducedVec[4], reduced4CExtra_reducedVec[3]) @[primitives.scala 125:20]
    node reduced4CExtra_lo_hi_hi = cat(reduced4CExtra_reducedVec[6], reduced4CExtra_reducedVec[5]) @[primitives.scala 125:20]
    node reduced4CExtra_lo_hi = cat(reduced4CExtra_lo_hi_hi, reduced4CExtra_lo_hi_lo) @[primitives.scala 125:20]
    node reduced4CExtra_lo = cat(reduced4CExtra_lo_hi, reduced4CExtra_lo_lo) @[primitives.scala 125:20]
    node reduced4CExtra_hi_lo_hi = cat(reduced4CExtra_reducedVec[9], reduced4CExtra_reducedVec[8]) @[primitives.scala 125:20]
    node reduced4CExtra_hi_lo = cat(reduced4CExtra_hi_lo_hi, reduced4CExtra_reducedVec[7]) @[primitives.scala 125:20]
    node reduced4CExtra_hi_hi_lo = cat(reduced4CExtra_reducedVec[11], reduced4CExtra_reducedVec[10]) @[primitives.scala 125:20]
    node reduced4CExtra_hi_hi_hi = cat(reduced4CExtra_reducedVec[13], reduced4CExtra_reducedVec[12]) @[primitives.scala 125:20]
    node reduced4CExtra_hi_hi = cat(reduced4CExtra_hi_hi_hi, reduced4CExtra_hi_hi_lo) @[primitives.scala 125:20]
    node reduced4CExtra_hi = cat(reduced4CExtra_hi_hi, reduced4CExtra_hi_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_1 = cat(reduced4CExtra_hi, reduced4CExtra_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_2 = shr(CAlignDist, 2) @[MulAddRecFN.scala 124:28]
    node reduced4CExtra_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _reduced4CExtra_T_2) @[primitives.scala 77:58]
    node _reduced4CExtra_T_3 = bits(reduced4CExtra_shift, 36, 24) @[primitives.scala 79:22]
    node _reduced4CExtra_T_4 = bits(_reduced4CExtra_T_3, 7, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_5 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _reduced4CExtra_T_6 = xor(UInt<8>("hff"), _reduced4CExtra_T_5) @[Bitwise.scala 107:21]
    node _reduced4CExtra_T_7 = shr(_reduced4CExtra_T_4, 4) @[Bitwise.scala 108:21]
    node _reduced4CExtra_T_8 = and(_reduced4CExtra_T_7, _reduced4CExtra_T_6) @[Bitwise.scala 108:31]
    node _reduced4CExtra_T_9 = bits(_reduced4CExtra_T_4, 3, 0) @[Bitwise.scala 108:46]
    node _reduced4CExtra_T_10 = shl(_reduced4CExtra_T_9, 4) @[Bitwise.scala 108:70]
    node _reduced4CExtra_T_11 = not(_reduced4CExtra_T_6) @[Bitwise.scala 108:82]
    node _reduced4CExtra_T_12 = and(_reduced4CExtra_T_10, _reduced4CExtra_T_11) @[Bitwise.scala 108:80]
    node _reduced4CExtra_T_13 = or(_reduced4CExtra_T_8, _reduced4CExtra_T_12) @[Bitwise.scala 108:39]
    node _reduced4CExtra_T_14 = bits(_reduced4CExtra_T_6, 5, 0) @[Bitwise.scala 107:28]
    node _reduced4CExtra_T_15 = shl(_reduced4CExtra_T_14, 2) @[Bitwise.scala 107:52]
    node _reduced4CExtra_T_16 = xor(_reduced4CExtra_T_6, _reduced4CExtra_T_15) @[Bitwise.scala 107:21]
    node _reduced4CExtra_T_17 = shr(_reduced4CExtra_T_13, 2) @[Bitwise.scala 108:21]
    node _reduced4CExtra_T_18 = and(_reduced4CExtra_T_17, _reduced4CExtra_T_16) @[Bitwise.scala 108:31]
    node _reduced4CExtra_T_19 = bits(_reduced4CExtra_T_13, 5, 0) @[Bitwise.scala 108:46]
    node _reduced4CExtra_T_20 = shl(_reduced4CExtra_T_19, 2) @[Bitwise.scala 108:70]
    node _reduced4CExtra_T_21 = not(_reduced4CExtra_T_16) @[Bitwise.scala 108:82]
    node _reduced4CExtra_T_22 = and(_reduced4CExtra_T_20, _reduced4CExtra_T_21) @[Bitwise.scala 108:80]
    node _reduced4CExtra_T_23 = or(_reduced4CExtra_T_18, _reduced4CExtra_T_22) @[Bitwise.scala 108:39]
    node _reduced4CExtra_T_24 = bits(_reduced4CExtra_T_16, 6, 0) @[Bitwise.scala 107:28]
    node _reduced4CExtra_T_25 = shl(_reduced4CExtra_T_24, 1) @[Bitwise.scala 107:52]
    node _reduced4CExtra_T_26 = xor(_reduced4CExtra_T_16, _reduced4CExtra_T_25) @[Bitwise.scala 107:21]
    node _reduced4CExtra_T_27 = shr(_reduced4CExtra_T_23, 1) @[Bitwise.scala 108:21]
    node _reduced4CExtra_T_28 = and(_reduced4CExtra_T_27, _reduced4CExtra_T_26) @[Bitwise.scala 108:31]
    node _reduced4CExtra_T_29 = bits(_reduced4CExtra_T_23, 6, 0) @[Bitwise.scala 108:46]
    node _reduced4CExtra_T_30 = shl(_reduced4CExtra_T_29, 1) @[Bitwise.scala 108:70]
    node _reduced4CExtra_T_31 = not(_reduced4CExtra_T_26) @[Bitwise.scala 108:82]
    node _reduced4CExtra_T_32 = and(_reduced4CExtra_T_30, _reduced4CExtra_T_31) @[Bitwise.scala 108:80]
    node _reduced4CExtra_T_33 = or(_reduced4CExtra_T_28, _reduced4CExtra_T_32) @[Bitwise.scala 108:39]
    node _reduced4CExtra_T_34 = bits(_reduced4CExtra_T_3, 12, 8) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_35 = bits(_reduced4CExtra_T_34, 3, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_36 = bits(_reduced4CExtra_T_35, 1, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_37 = bits(_reduced4CExtra_T_36, 0, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_38 = bits(_reduced4CExtra_T_36, 1, 1) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_39 = cat(_reduced4CExtra_T_37, _reduced4CExtra_T_38) @[Cat.scala 33:92]
    node _reduced4CExtra_T_40 = bits(_reduced4CExtra_T_35, 3, 2) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_41 = bits(_reduced4CExtra_T_40, 0, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_42 = bits(_reduced4CExtra_T_40, 1, 1) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_43 = cat(_reduced4CExtra_T_41, _reduced4CExtra_T_42) @[Cat.scala 33:92]
    node _reduced4CExtra_T_44 = cat(_reduced4CExtra_T_39, _reduced4CExtra_T_43) @[Cat.scala 33:92]
    node _reduced4CExtra_T_45 = bits(_reduced4CExtra_T_34, 4, 4) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_46 = cat(_reduced4CExtra_T_44, _reduced4CExtra_T_45) @[Cat.scala 33:92]
    node _reduced4CExtra_T_47 = cat(_reduced4CExtra_T_33, _reduced4CExtra_T_46) @[Cat.scala 33:92]
    node _reduced4CExtra_T_48 = and(_reduced4CExtra_T_1, _reduced4CExtra_T_47) @[MulAddRecFN.scala 122:68]
    node reduced4CExtra = orr(_reduced4CExtra_T_48) @[MulAddRecFN.scala 130:11]
    node _alignedSigC_T = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 132:28]
    node _alignedSigC_T_1 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 134:32]
    node _alignedSigC_T_2 = andr(_alignedSigC_T_1) @[MulAddRecFN.scala 134:39]
    node _alignedSigC_T_3 = eq(reduced4CExtra, UInt<1>("h0")) @[MulAddRecFN.scala 134:47]
    node _alignedSigC_T_4 = and(_alignedSigC_T_2, _alignedSigC_T_3) @[MulAddRecFN.scala 134:44]
    node _alignedSigC_T_5 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 135:32]
    node _alignedSigC_T_6 = orr(_alignedSigC_T_5) @[MulAddRecFN.scala 135:39]
    node _alignedSigC_T_7 = or(_alignedSigC_T_6, reduced4CExtra) @[MulAddRecFN.scala 135:44]
    node _alignedSigC_T_8 = mux(doSubMags, _alignedSigC_T_4, _alignedSigC_T_7) @[MulAddRecFN.scala 133:16]
    node alignedSigC_hi = asUInt(_alignedSigC_T) @[Cat.scala 33:92]
    node alignedSigC = cat(alignedSigC_hi, _alignedSigC_T_8) @[Cat.scala 33:92]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 141:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 142:16]
    node _io_mulAddC_T = bits(alignedSigC, 106, 1) @[MulAddRecFN.scala 143:30]
    io.mulAddC <= _io_mulAddC_T @[MulAddRecFN.scala 143:16]
    node _io_toPostMul_isSigNaNAny_T = bits(rawA.sig, 51, 51) @[common.scala 82:56]
    node _io_toPostMul_isSigNaNAny_T_1 = eq(_io_toPostMul_isSigNaNAny_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_toPostMul_isSigNaNAny_T_2 = and(rawA.isNaN, _io_toPostMul_isSigNaNAny_T_1) @[common.scala 82:46]
    node _io_toPostMul_isSigNaNAny_T_3 = bits(rawB.sig, 51, 51) @[common.scala 82:56]
    node _io_toPostMul_isSigNaNAny_T_4 = eq(_io_toPostMul_isSigNaNAny_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_toPostMul_isSigNaNAny_T_5 = and(rawB.isNaN, _io_toPostMul_isSigNaNAny_T_4) @[common.scala 82:46]
    node _io_toPostMul_isSigNaNAny_T_6 = or(_io_toPostMul_isSigNaNAny_T_2, _io_toPostMul_isSigNaNAny_T_5) @[MulAddRecFN.scala 146:32]
    node _io_toPostMul_isSigNaNAny_T_7 = bits(rawC.sig, 51, 51) @[common.scala 82:56]
    node _io_toPostMul_isSigNaNAny_T_8 = eq(_io_toPostMul_isSigNaNAny_T_7, UInt<1>("h0")) @[common.scala 82:49]
    node _io_toPostMul_isSigNaNAny_T_9 = and(rawC.isNaN, _io_toPostMul_isSigNaNAny_T_8) @[common.scala 82:46]
    node _io_toPostMul_isSigNaNAny_T_10 = or(_io_toPostMul_isSigNaNAny_T_6, _io_toPostMul_isSigNaNAny_T_9) @[MulAddRecFN.scala 146:58]
    io.toPostMul.isSigNaNAny <= _io_toPostMul_isSigNaNAny_T_10 @[MulAddRecFN.scala 145:30]
    node _io_toPostMul_isNaNAOrB_T = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 148:42]
    io.toPostMul.isNaNAOrB <= _io_toPostMul_isNaNAOrB_T @[MulAddRecFN.scala 148:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 149:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 150:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 151:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 152:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 153:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 154:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 155:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 156:28]
    node _io_toPostMul_sExpSum_T = sub(sExpAlignedProd, asSInt(UInt<7>("h35"))) @[MulAddRecFN.scala 158:53]
    node _io_toPostMul_sExpSum_T_1 = tail(_io_toPostMul_sExpSum_T, 1) @[MulAddRecFN.scala 158:53]
    node _io_toPostMul_sExpSum_T_2 = asSInt(_io_toPostMul_sExpSum_T_1) @[MulAddRecFN.scala 158:53]
    node _io_toPostMul_sExpSum_T_3 = mux(CIsDominant, rawC.sExp, _io_toPostMul_sExpSum_T_2) @[MulAddRecFN.scala 158:12]
    io.toPostMul.sExpSum <= _io_toPostMul_sExpSum_T_3 @[MulAddRecFN.scala 157:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 159:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 160:30]
    node _io_toPostMul_CDom_CAlignDist_T = bits(CAlignDist, 5, 0) @[MulAddRecFN.scala 161:47]
    io.toPostMul.CDom_CAlignDist <= _io_toPostMul_CDom_CAlignDist_T @[MulAddRecFN.scala 161:34]
    node _io_toPostMul_highAlignedSigC_T = bits(alignedSigC, 161, 107) @[MulAddRecFN.scala 163:20]
    io.toPostMul.highAlignedSigC <= _io_toPostMul_highAlignedSigC_T @[MulAddRecFN.scala 162:34]
    node _io_toPostMul_bit0AlignedSigC_T = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 164:48]
    io.toPostMul.bit0AlignedSigC <= _io_toPostMul_bit0AlignedSigC_T @[MulAddRecFN.scala 164:34]

  module FPToInt :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : { valid : UInt<1>, bits : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}}, out : { valid : UInt<1>, bits : { in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, lt : UInt<1>, store : UInt<64>, toint : UInt<64>, exc : UInt<5>}}}

    clock is invalid
    reset is invalid
    io is invalid
    reg in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, clock with :
      reset => (UInt<1>("h0"), in) @[Reg.scala 19:16]
    when io.in.valid : @[Reg.scala 20:18]
      in <= io.in.bits @[Reg.scala 20:22]
    reg valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid) @[FPU.scala 462:18]
    valid <= io.in.valid @[FPU.scala 462:18]
    inst dcmp of CompareRecFN @[FPU.scala 464:20]
    dcmp.io is invalid
    dcmp.io.a <= in.in1 @[FPU.scala 465:13]
    dcmp.io.b <= in.in2 @[FPU.scala 466:13]
    node _dcmp_io_signaling_T = bits(in.rm, 1, 1) @[FPU.scala 467:30]
    node _dcmp_io_signaling_T_1 = eq(_dcmp_io_signaling_T, UInt<1>("h0")) @[FPU.scala 467:24]
    dcmp.io.signaling <= _dcmp_io_signaling_T_1 @[FPU.scala 467:21]
    node store_unrecoded_rawIn_exp = bits(in.in1, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _store_unrecoded_rawIn_isZero_T = bits(store_unrecoded_rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node store_unrecoded_rawIn_isZero = eq(_store_unrecoded_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _store_unrecoded_rawIn_isSpecial_T = bits(store_unrecoded_rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node store_unrecoded_rawIn_isSpecial = eq(_store_unrecoded_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire store_unrecoded_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    store_unrecoded_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _store_unrecoded_rawIn_out_isNaN_T = bits(store_unrecoded_rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _store_unrecoded_rawIn_out_isNaN_T_1 = and(store_unrecoded_rawIn_isSpecial, _store_unrecoded_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    store_unrecoded_rawIn.isNaN <= _store_unrecoded_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _store_unrecoded_rawIn_out_isInf_T = bits(store_unrecoded_rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _store_unrecoded_rawIn_out_isInf_T_1 = eq(_store_unrecoded_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _store_unrecoded_rawIn_out_isInf_T_2 = and(store_unrecoded_rawIn_isSpecial, _store_unrecoded_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    store_unrecoded_rawIn.isInf <= _store_unrecoded_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    store_unrecoded_rawIn.isZero <= store_unrecoded_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _store_unrecoded_rawIn_out_sign_T = bits(in.in1, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    store_unrecoded_rawIn.sign <= _store_unrecoded_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _store_unrecoded_rawIn_out_sExp_T = cvt(store_unrecoded_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    store_unrecoded_rawIn.sExp <= _store_unrecoded_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _store_unrecoded_rawIn_out_sig_T = eq(store_unrecoded_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _store_unrecoded_rawIn_out_sig_T_1 = bits(in.in1, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node store_unrecoded_rawIn_out_sig_hi = cat(UInt<1>("h0"), _store_unrecoded_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _store_unrecoded_rawIn_out_sig_T_2 = cat(store_unrecoded_rawIn_out_sig_hi, _store_unrecoded_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    store_unrecoded_rawIn.sig <= _store_unrecoded_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node store_unrecoded_isSubnormal = lt(store_unrecoded_rawIn.sExp, asSInt(UInt<12>("h402"))) @[fNFromRecFN.scala 50:39]
    node _store_unrecoded_denormShiftDist_T = bits(store_unrecoded_rawIn.sExp, 5, 0) @[fNFromRecFN.scala 51:51]
    node _store_unrecoded_denormShiftDist_T_1 = sub(UInt<1>("h1"), _store_unrecoded_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node store_unrecoded_denormShiftDist = tail(_store_unrecoded_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _store_unrecoded_denormFract_T = shr(store_unrecoded_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _store_unrecoded_denormFract_T_1 = dshr(_store_unrecoded_denormFract_T, store_unrecoded_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node store_unrecoded_denormFract = bits(_store_unrecoded_denormFract_T_1, 51, 0) @[fNFromRecFN.scala 52:60]
    node _store_unrecoded_expOut_T = bits(store_unrecoded_rawIn.sExp, 10, 0) @[fNFromRecFN.scala 57:27]
    node _store_unrecoded_expOut_T_1 = sub(_store_unrecoded_expOut_T, UInt<11>("h401")) @[fNFromRecFN.scala 57:45]
    node _store_unrecoded_expOut_T_2 = tail(_store_unrecoded_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _store_unrecoded_expOut_T_3 = mux(store_unrecoded_isSubnormal, UInt<1>("h0"), _store_unrecoded_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _store_unrecoded_expOut_T_4 = or(store_unrecoded_rawIn.isNaN, store_unrecoded_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _store_unrecoded_expOut_T_5 = bits(_store_unrecoded_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _store_unrecoded_expOut_T_6 = mux(_store_unrecoded_expOut_T_5, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 77:12]
    node store_unrecoded_expOut = or(_store_unrecoded_expOut_T_3, _store_unrecoded_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _store_unrecoded_fractOut_T = bits(store_unrecoded_rawIn.sig, 51, 0) @[fNFromRecFN.scala 63:52]
    node _store_unrecoded_fractOut_T_1 = mux(store_unrecoded_rawIn.isInf, UInt<1>("h0"), _store_unrecoded_fractOut_T) @[fNFromRecFN.scala 63:20]
    node store_unrecoded_fractOut = mux(store_unrecoded_isSubnormal, store_unrecoded_denormFract, _store_unrecoded_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node store_unrecoded_hi = cat(store_unrecoded_rawIn.sign, store_unrecoded_expOut) @[Cat.scala 33:92]
    node store_unrecoded = cat(store_unrecoded_hi, store_unrecoded_fractOut) @[Cat.scala 33:92]
    node _store_prevRecoded_T = bits(in.in1, 31, 31) @[FPU.scala 437:10]
    node _store_prevRecoded_T_1 = bits(in.in1, 52, 52) @[FPU.scala 438:10]
    node _store_prevRecoded_T_2 = bits(in.in1, 30, 0) @[FPU.scala 439:10]
    node store_prevRecoded_hi = cat(_store_prevRecoded_T, _store_prevRecoded_T_1) @[Cat.scala 33:92]
    node store_prevRecoded = cat(store_prevRecoded_hi, _store_prevRecoded_T_2) @[Cat.scala 33:92]
    node store_prevUnrecoded_rawIn_exp = bits(store_prevRecoded, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _store_prevUnrecoded_rawIn_isZero_T = bits(store_prevUnrecoded_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node store_prevUnrecoded_rawIn_isZero = eq(_store_prevUnrecoded_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _store_prevUnrecoded_rawIn_isSpecial_T = bits(store_prevUnrecoded_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node store_prevUnrecoded_rawIn_isSpecial = eq(_store_prevUnrecoded_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire store_prevUnrecoded_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    store_prevUnrecoded_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _store_prevUnrecoded_rawIn_out_isNaN_T = bits(store_prevUnrecoded_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _store_prevUnrecoded_rawIn_out_isNaN_T_1 = and(store_prevUnrecoded_rawIn_isSpecial, _store_prevUnrecoded_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    store_prevUnrecoded_rawIn.isNaN <= _store_prevUnrecoded_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _store_prevUnrecoded_rawIn_out_isInf_T = bits(store_prevUnrecoded_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _store_prevUnrecoded_rawIn_out_isInf_T_1 = eq(_store_prevUnrecoded_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _store_prevUnrecoded_rawIn_out_isInf_T_2 = and(store_prevUnrecoded_rawIn_isSpecial, _store_prevUnrecoded_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    store_prevUnrecoded_rawIn.isInf <= _store_prevUnrecoded_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    store_prevUnrecoded_rawIn.isZero <= store_prevUnrecoded_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _store_prevUnrecoded_rawIn_out_sign_T = bits(store_prevRecoded, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    store_prevUnrecoded_rawIn.sign <= _store_prevUnrecoded_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _store_prevUnrecoded_rawIn_out_sExp_T = cvt(store_prevUnrecoded_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    store_prevUnrecoded_rawIn.sExp <= _store_prevUnrecoded_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _store_prevUnrecoded_rawIn_out_sig_T = eq(store_prevUnrecoded_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _store_prevUnrecoded_rawIn_out_sig_T_1 = bits(store_prevRecoded, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node store_prevUnrecoded_rawIn_out_sig_hi = cat(UInt<1>("h0"), _store_prevUnrecoded_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _store_prevUnrecoded_rawIn_out_sig_T_2 = cat(store_prevUnrecoded_rawIn_out_sig_hi, _store_prevUnrecoded_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    store_prevUnrecoded_rawIn.sig <= _store_prevUnrecoded_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node store_prevUnrecoded_isSubnormal = lt(store_prevUnrecoded_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
    node _store_prevUnrecoded_denormShiftDist_T = bits(store_prevUnrecoded_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _store_prevUnrecoded_denormShiftDist_T_1 = sub(UInt<1>("h1"), _store_prevUnrecoded_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node store_prevUnrecoded_denormShiftDist = tail(_store_prevUnrecoded_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _store_prevUnrecoded_denormFract_T = shr(store_prevUnrecoded_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _store_prevUnrecoded_denormFract_T_1 = dshr(_store_prevUnrecoded_denormFract_T, store_prevUnrecoded_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node store_prevUnrecoded_denormFract = bits(_store_prevUnrecoded_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
    node _store_prevUnrecoded_expOut_T = bits(store_prevUnrecoded_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _store_prevUnrecoded_expOut_T_1 = sub(_store_prevUnrecoded_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
    node _store_prevUnrecoded_expOut_T_2 = tail(_store_prevUnrecoded_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _store_prevUnrecoded_expOut_T_3 = mux(store_prevUnrecoded_isSubnormal, UInt<1>("h0"), _store_prevUnrecoded_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _store_prevUnrecoded_expOut_T_4 = or(store_prevUnrecoded_rawIn.isNaN, store_prevUnrecoded_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _store_prevUnrecoded_expOut_T_5 = bits(_store_prevUnrecoded_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _store_prevUnrecoded_expOut_T_6 = mux(_store_prevUnrecoded_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 77:12]
    node store_prevUnrecoded_expOut = or(_store_prevUnrecoded_expOut_T_3, _store_prevUnrecoded_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _store_prevUnrecoded_fractOut_T = bits(store_prevUnrecoded_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _store_prevUnrecoded_fractOut_T_1 = mux(store_prevUnrecoded_rawIn.isInf, UInt<1>("h0"), _store_prevUnrecoded_fractOut_T) @[fNFromRecFN.scala 63:20]
    node store_prevUnrecoded_fractOut = mux(store_prevUnrecoded_isSubnormal, store_prevUnrecoded_denormFract, _store_prevUnrecoded_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node store_prevUnrecoded_hi = cat(store_prevUnrecoded_rawIn.sign, store_prevUnrecoded_expOut) @[Cat.scala 33:92]
    node store_prevUnrecoded = cat(store_prevUnrecoded_hi, store_prevUnrecoded_fractOut) @[Cat.scala 33:92]
    node _store_T = shr(store_unrecoded, 32) @[FPU.scala 441:21]
    node _store_T_1 = bits(in.in1, 63, 61) @[FPU.scala 244:25]
    node _store_T_2 = andr(_store_T_1) @[FPU.scala 244:56]
    node _store_T_3 = bits(store_unrecoded, 31, 0) @[FPU.scala 441:81]
    node _store_T_4 = mux(_store_T_2, store_prevUnrecoded, _store_T_3) @[FPU.scala 441:44]
    node _store_T_5 = cat(_store_T, _store_T_4) @[Cat.scala 33:92]
    node _store_T_6 = bits(_store_T_5, 31, 0) @[FPU.scala 471:104]
    node _store_T_7 = cat(_store_T_6, _store_T_6) @[Cat.scala 33:92]
    node store_unrecoded_rawIn_exp_1 = bits(in.in1, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _store_unrecoded_rawIn_isZero_T_1 = bits(store_unrecoded_rawIn_exp_1, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node store_unrecoded_rawIn_isZero_1 = eq(_store_unrecoded_rawIn_isZero_T_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _store_unrecoded_rawIn_isSpecial_T_1 = bits(store_unrecoded_rawIn_exp_1, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node store_unrecoded_rawIn_isSpecial_1 = eq(_store_unrecoded_rawIn_isSpecial_T_1, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire store_unrecoded_rawIn_1 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    store_unrecoded_rawIn_1 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _store_unrecoded_rawIn_out_isNaN_T_2 = bits(store_unrecoded_rawIn_exp_1, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _store_unrecoded_rawIn_out_isNaN_T_3 = and(store_unrecoded_rawIn_isSpecial_1, _store_unrecoded_rawIn_out_isNaN_T_2) @[rawFloatFromRecFN.scala 55:33]
    store_unrecoded_rawIn_1.isNaN <= _store_unrecoded_rawIn_out_isNaN_T_3 @[rawFloatFromRecFN.scala 55:20]
    node _store_unrecoded_rawIn_out_isInf_T_3 = bits(store_unrecoded_rawIn_exp_1, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _store_unrecoded_rawIn_out_isInf_T_4 = eq(_store_unrecoded_rawIn_out_isInf_T_3, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _store_unrecoded_rawIn_out_isInf_T_5 = and(store_unrecoded_rawIn_isSpecial_1, _store_unrecoded_rawIn_out_isInf_T_4) @[rawFloatFromRecFN.scala 56:33]
    store_unrecoded_rawIn_1.isInf <= _store_unrecoded_rawIn_out_isInf_T_5 @[rawFloatFromRecFN.scala 56:20]
    store_unrecoded_rawIn_1.isZero <= store_unrecoded_rawIn_isZero_1 @[rawFloatFromRecFN.scala 57:20]
    node _store_unrecoded_rawIn_out_sign_T_1 = bits(in.in1, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    store_unrecoded_rawIn_1.sign <= _store_unrecoded_rawIn_out_sign_T_1 @[rawFloatFromRecFN.scala 58:20]
    node _store_unrecoded_rawIn_out_sExp_T_1 = cvt(store_unrecoded_rawIn_exp_1) @[rawFloatFromRecFN.scala 59:27]
    store_unrecoded_rawIn_1.sExp <= _store_unrecoded_rawIn_out_sExp_T_1 @[rawFloatFromRecFN.scala 59:20]
    node _store_unrecoded_rawIn_out_sig_T_3 = eq(store_unrecoded_rawIn_isZero_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _store_unrecoded_rawIn_out_sig_T_4 = bits(in.in1, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node store_unrecoded_rawIn_out_sig_hi_1 = cat(UInt<1>("h0"), _store_unrecoded_rawIn_out_sig_T_3) @[Cat.scala 33:92]
    node _store_unrecoded_rawIn_out_sig_T_5 = cat(store_unrecoded_rawIn_out_sig_hi_1, _store_unrecoded_rawIn_out_sig_T_4) @[Cat.scala 33:92]
    store_unrecoded_rawIn_1.sig <= _store_unrecoded_rawIn_out_sig_T_5 @[rawFloatFromRecFN.scala 60:20]
    node store_unrecoded_isSubnormal_1 = lt(store_unrecoded_rawIn_1.sExp, asSInt(UInt<12>("h402"))) @[fNFromRecFN.scala 50:39]
    node _store_unrecoded_denormShiftDist_T_2 = bits(store_unrecoded_rawIn_1.sExp, 5, 0) @[fNFromRecFN.scala 51:51]
    node _store_unrecoded_denormShiftDist_T_3 = sub(UInt<1>("h1"), _store_unrecoded_denormShiftDist_T_2) @[fNFromRecFN.scala 51:39]
    node store_unrecoded_denormShiftDist_1 = tail(_store_unrecoded_denormShiftDist_T_3, 1) @[fNFromRecFN.scala 51:39]
    node _store_unrecoded_denormFract_T_2 = shr(store_unrecoded_rawIn_1.sig, 1) @[fNFromRecFN.scala 52:38]
    node _store_unrecoded_denormFract_T_3 = dshr(_store_unrecoded_denormFract_T_2, store_unrecoded_denormShiftDist_1) @[fNFromRecFN.scala 52:42]
    node store_unrecoded_denormFract_1 = bits(_store_unrecoded_denormFract_T_3, 51, 0) @[fNFromRecFN.scala 52:60]
    node _store_unrecoded_expOut_T_7 = bits(store_unrecoded_rawIn_1.sExp, 10, 0) @[fNFromRecFN.scala 57:27]
    node _store_unrecoded_expOut_T_8 = sub(_store_unrecoded_expOut_T_7, UInt<11>("h401")) @[fNFromRecFN.scala 57:45]
    node _store_unrecoded_expOut_T_9 = tail(_store_unrecoded_expOut_T_8, 1) @[fNFromRecFN.scala 57:45]
    node _store_unrecoded_expOut_T_10 = mux(store_unrecoded_isSubnormal_1, UInt<1>("h0"), _store_unrecoded_expOut_T_9) @[fNFromRecFN.scala 55:16]
    node _store_unrecoded_expOut_T_11 = or(store_unrecoded_rawIn_1.isNaN, store_unrecoded_rawIn_1.isInf) @[fNFromRecFN.scala 59:44]
    node _store_unrecoded_expOut_T_12 = bits(_store_unrecoded_expOut_T_11, 0, 0) @[Bitwise.scala 77:15]
    node _store_unrecoded_expOut_T_13 = mux(_store_unrecoded_expOut_T_12, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 77:12]
    node store_unrecoded_expOut_1 = or(_store_unrecoded_expOut_T_10, _store_unrecoded_expOut_T_13) @[fNFromRecFN.scala 59:15]
    node _store_unrecoded_fractOut_T_2 = bits(store_unrecoded_rawIn_1.sig, 51, 0) @[fNFromRecFN.scala 63:52]
    node _store_unrecoded_fractOut_T_3 = mux(store_unrecoded_rawIn_1.isInf, UInt<1>("h0"), _store_unrecoded_fractOut_T_2) @[fNFromRecFN.scala 63:20]
    node store_unrecoded_fractOut_1 = mux(store_unrecoded_isSubnormal_1, store_unrecoded_denormFract_1, _store_unrecoded_fractOut_T_3) @[fNFromRecFN.scala 61:16]
    node store_unrecoded_hi_1 = cat(store_unrecoded_rawIn_1.sign, store_unrecoded_expOut_1) @[Cat.scala 33:92]
    node store_unrecoded_1 = cat(store_unrecoded_hi_1, store_unrecoded_fractOut_1) @[Cat.scala 33:92]
    node _store_prevRecoded_T_3 = bits(in.in1, 31, 31) @[FPU.scala 437:10]
    node _store_prevRecoded_T_4 = bits(in.in1, 52, 52) @[FPU.scala 438:10]
    node _store_prevRecoded_T_5 = bits(in.in1, 30, 0) @[FPU.scala 439:10]
    node store_prevRecoded_hi_1 = cat(_store_prevRecoded_T_3, _store_prevRecoded_T_4) @[Cat.scala 33:92]
    node store_prevRecoded_1 = cat(store_prevRecoded_hi_1, _store_prevRecoded_T_5) @[Cat.scala 33:92]
    node store_prevUnrecoded_rawIn_exp_1 = bits(store_prevRecoded_1, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _store_prevUnrecoded_rawIn_isZero_T_1 = bits(store_prevUnrecoded_rawIn_exp_1, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node store_prevUnrecoded_rawIn_isZero_1 = eq(_store_prevUnrecoded_rawIn_isZero_T_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _store_prevUnrecoded_rawIn_isSpecial_T_1 = bits(store_prevUnrecoded_rawIn_exp_1, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node store_prevUnrecoded_rawIn_isSpecial_1 = eq(_store_prevUnrecoded_rawIn_isSpecial_T_1, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire store_prevUnrecoded_rawIn_1 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    store_prevUnrecoded_rawIn_1 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _store_prevUnrecoded_rawIn_out_isNaN_T_2 = bits(store_prevUnrecoded_rawIn_exp_1, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _store_prevUnrecoded_rawIn_out_isNaN_T_3 = and(store_prevUnrecoded_rawIn_isSpecial_1, _store_prevUnrecoded_rawIn_out_isNaN_T_2) @[rawFloatFromRecFN.scala 55:33]
    store_prevUnrecoded_rawIn_1.isNaN <= _store_prevUnrecoded_rawIn_out_isNaN_T_3 @[rawFloatFromRecFN.scala 55:20]
    node _store_prevUnrecoded_rawIn_out_isInf_T_3 = bits(store_prevUnrecoded_rawIn_exp_1, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _store_prevUnrecoded_rawIn_out_isInf_T_4 = eq(_store_prevUnrecoded_rawIn_out_isInf_T_3, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _store_prevUnrecoded_rawIn_out_isInf_T_5 = and(store_prevUnrecoded_rawIn_isSpecial_1, _store_prevUnrecoded_rawIn_out_isInf_T_4) @[rawFloatFromRecFN.scala 56:33]
    store_prevUnrecoded_rawIn_1.isInf <= _store_prevUnrecoded_rawIn_out_isInf_T_5 @[rawFloatFromRecFN.scala 56:20]
    store_prevUnrecoded_rawIn_1.isZero <= store_prevUnrecoded_rawIn_isZero_1 @[rawFloatFromRecFN.scala 57:20]
    node _store_prevUnrecoded_rawIn_out_sign_T_1 = bits(store_prevRecoded_1, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    store_prevUnrecoded_rawIn_1.sign <= _store_prevUnrecoded_rawIn_out_sign_T_1 @[rawFloatFromRecFN.scala 58:20]
    node _store_prevUnrecoded_rawIn_out_sExp_T_1 = cvt(store_prevUnrecoded_rawIn_exp_1) @[rawFloatFromRecFN.scala 59:27]
    store_prevUnrecoded_rawIn_1.sExp <= _store_prevUnrecoded_rawIn_out_sExp_T_1 @[rawFloatFromRecFN.scala 59:20]
    node _store_prevUnrecoded_rawIn_out_sig_T_3 = eq(store_prevUnrecoded_rawIn_isZero_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _store_prevUnrecoded_rawIn_out_sig_T_4 = bits(store_prevRecoded_1, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node store_prevUnrecoded_rawIn_out_sig_hi_1 = cat(UInt<1>("h0"), _store_prevUnrecoded_rawIn_out_sig_T_3) @[Cat.scala 33:92]
    node _store_prevUnrecoded_rawIn_out_sig_T_5 = cat(store_prevUnrecoded_rawIn_out_sig_hi_1, _store_prevUnrecoded_rawIn_out_sig_T_4) @[Cat.scala 33:92]
    store_prevUnrecoded_rawIn_1.sig <= _store_prevUnrecoded_rawIn_out_sig_T_5 @[rawFloatFromRecFN.scala 60:20]
    node store_prevUnrecoded_isSubnormal_1 = lt(store_prevUnrecoded_rawIn_1.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
    node _store_prevUnrecoded_denormShiftDist_T_2 = bits(store_prevUnrecoded_rawIn_1.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _store_prevUnrecoded_denormShiftDist_T_3 = sub(UInt<1>("h1"), _store_prevUnrecoded_denormShiftDist_T_2) @[fNFromRecFN.scala 51:39]
    node store_prevUnrecoded_denormShiftDist_1 = tail(_store_prevUnrecoded_denormShiftDist_T_3, 1) @[fNFromRecFN.scala 51:39]
    node _store_prevUnrecoded_denormFract_T_2 = shr(store_prevUnrecoded_rawIn_1.sig, 1) @[fNFromRecFN.scala 52:38]
    node _store_prevUnrecoded_denormFract_T_3 = dshr(_store_prevUnrecoded_denormFract_T_2, store_prevUnrecoded_denormShiftDist_1) @[fNFromRecFN.scala 52:42]
    node store_prevUnrecoded_denormFract_1 = bits(_store_prevUnrecoded_denormFract_T_3, 22, 0) @[fNFromRecFN.scala 52:60]
    node _store_prevUnrecoded_expOut_T_7 = bits(store_prevUnrecoded_rawIn_1.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _store_prevUnrecoded_expOut_T_8 = sub(_store_prevUnrecoded_expOut_T_7, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
    node _store_prevUnrecoded_expOut_T_9 = tail(_store_prevUnrecoded_expOut_T_8, 1) @[fNFromRecFN.scala 57:45]
    node _store_prevUnrecoded_expOut_T_10 = mux(store_prevUnrecoded_isSubnormal_1, UInt<1>("h0"), _store_prevUnrecoded_expOut_T_9) @[fNFromRecFN.scala 55:16]
    node _store_prevUnrecoded_expOut_T_11 = or(store_prevUnrecoded_rawIn_1.isNaN, store_prevUnrecoded_rawIn_1.isInf) @[fNFromRecFN.scala 59:44]
    node _store_prevUnrecoded_expOut_T_12 = bits(_store_prevUnrecoded_expOut_T_11, 0, 0) @[Bitwise.scala 77:15]
    node _store_prevUnrecoded_expOut_T_13 = mux(_store_prevUnrecoded_expOut_T_12, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 77:12]
    node store_prevUnrecoded_expOut_1 = or(_store_prevUnrecoded_expOut_T_10, _store_prevUnrecoded_expOut_T_13) @[fNFromRecFN.scala 59:15]
    node _store_prevUnrecoded_fractOut_T_2 = bits(store_prevUnrecoded_rawIn_1.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _store_prevUnrecoded_fractOut_T_3 = mux(store_prevUnrecoded_rawIn_1.isInf, UInt<1>("h0"), _store_prevUnrecoded_fractOut_T_2) @[fNFromRecFN.scala 63:20]
    node store_prevUnrecoded_fractOut_1 = mux(store_prevUnrecoded_isSubnormal_1, store_prevUnrecoded_denormFract_1, _store_prevUnrecoded_fractOut_T_3) @[fNFromRecFN.scala 61:16]
    node store_prevUnrecoded_hi_1 = cat(store_prevUnrecoded_rawIn_1.sign, store_prevUnrecoded_expOut_1) @[Cat.scala 33:92]
    node store_prevUnrecoded_1 = cat(store_prevUnrecoded_hi_1, store_prevUnrecoded_fractOut_1) @[Cat.scala 33:92]
    node _store_T_8 = shr(store_unrecoded_1, 32) @[FPU.scala 441:21]
    node _store_T_9 = bits(in.in1, 63, 61) @[FPU.scala 244:25]
    node _store_T_10 = andr(_store_T_9) @[FPU.scala 244:56]
    node _store_T_11 = bits(store_unrecoded_1, 31, 0) @[FPU.scala 441:81]
    node _store_T_12 = mux(_store_T_10, store_prevUnrecoded_1, _store_T_11) @[FPU.scala 441:44]
    node _store_T_13 = cat(_store_T_8, _store_T_12) @[Cat.scala 33:92]
    node _store_T_14 = bits(_store_T_13, 63, 0) @[FPU.scala 471:104]
    node _store_truncIdx_T = or(in.typeTagOut, UInt<1>("h0")) @[package.scala 31:21]
    node store_truncIdx = bits(_store_truncIdx_T, 0, 0) @[package.scala 31:49]
    node _store_T_15 = eq(store_truncIdx, UInt<1>("h1")) @[package.scala 32:86]
    node store = mux(_store_T_15, _store_T_14, _store_T_7) @[package.scala 32:76]
    wire toint : UInt<64> @[compatibility.scala 76:26]
    toint is invalid @[compatibility.scala 76:26]
    toint <= store @[compatibility.scala 76:26]
    node intType_x6 = bits(in.fmt, 0, 0) @[FPU.scala 473:35]
    wire intType : UInt<1> @[compatibility.scala 76:26]
    intType is invalid @[compatibility.scala 76:26]
    intType <= intType_x6 @[compatibility.scala 76:26]
    io.out.bits.store <= store @[FPU.scala 474:21]
    node _io_out_bits_toint_T = bits(toint, 31, 0) @[FPU.scala 475:59]
    node _io_out_bits_toint_T_1 = bits(_io_out_bits_toint_T, 31, 31) @[package.scala 123:38]
    node _io_out_bits_toint_T_2 = bits(_io_out_bits_toint_T_1, 0, 0) @[Bitwise.scala 77:15]
    node _io_out_bits_toint_T_3 = mux(_io_out_bits_toint_T_2, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _io_out_bits_toint_T_4 = cat(_io_out_bits_toint_T_3, _io_out_bits_toint_T) @[Cat.scala 33:92]
    node _io_out_bits_toint_T_5 = bits(toint, 63, 0) @[FPU.scala 475:59]
    node _io_out_bits_toint_T_6 = eq(intType, UInt<1>("h1")) @[package.scala 32:86]
    node _io_out_bits_toint_T_7 = mux(_io_out_bits_toint_T_6, _io_out_bits_toint_T_5, _io_out_bits_toint_T_4) @[package.scala 32:76]
    io.out.bits.toint <= _io_out_bits_toint_T_7 @[FPU.scala 475:21]
    io.out.bits.exc <= UInt<1>("h0") @[FPU.scala 476:19]
    node _T = bits(in.rm, 0, 0) @[FPU.scala 478:14]
    when _T : @[FPU.scala 478:19]
      node classify_out_sign = bits(in.in1, 64, 64) @[FPU.scala 269:17]
      node classify_out_fractIn = bits(in.in1, 51, 0) @[FPU.scala 270:20]
      node classify_out_expIn = bits(in.in1, 63, 52) @[FPU.scala 271:18]
      node _classify_out_fractOut_T = shl(classify_out_fractIn, 24) @[FPU.scala 272:28]
      node classify_out_fractOut = shr(_classify_out_fractOut_T, 53) @[FPU.scala 272:38]
      node classify_out_expOut_expCode = bits(classify_out_expIn, 11, 9) @[FPU.scala 274:26]
      node _classify_out_expOut_commonCase_T = add(classify_out_expIn, UInt<9>("h100")) @[FPU.scala 275:31]
      node _classify_out_expOut_commonCase_T_1 = tail(_classify_out_expOut_commonCase_T, 1) @[FPU.scala 275:31]
      node _classify_out_expOut_commonCase_T_2 = sub(_classify_out_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 275:48]
      node classify_out_expOut_commonCase = tail(_classify_out_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
      node _classify_out_expOut_T = eq(classify_out_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
      node _classify_out_expOut_T_1 = geq(classify_out_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
      node _classify_out_expOut_T_2 = or(_classify_out_expOut_T, _classify_out_expOut_T_1) @[FPU.scala 276:25]
      node _classify_out_expOut_T_3 = bits(classify_out_expOut_commonCase, 5, 0) @[FPU.scala 276:65]
      node _classify_out_expOut_T_4 = cat(classify_out_expOut_expCode, _classify_out_expOut_T_3) @[Cat.scala 33:92]
      node _classify_out_expOut_T_5 = bits(classify_out_expOut_commonCase, 8, 0) @[FPU.scala 276:93]
      node classify_out_expOut = mux(_classify_out_expOut_T_2, _classify_out_expOut_T_4, _classify_out_expOut_T_5) @[FPU.scala 276:10]
      node classify_out_hi = cat(classify_out_sign, classify_out_expOut) @[Cat.scala 33:92]
      node _classify_out_T = cat(classify_out_hi, classify_out_fractOut) @[Cat.scala 33:92]
      node classify_out_sign_1 = bits(_classify_out_T, 32, 32) @[FPU.scala 248:17]
      node classify_out_code = bits(_classify_out_T, 31, 29) @[FPU.scala 249:17]
      node classify_out_codeHi = bits(classify_out_code, 2, 1) @[FPU.scala 250:22]
      node classify_out_isSpecial = eq(classify_out_codeHi, UInt<2>("h3")) @[FPU.scala 251:28]
      node _classify_out_isHighSubnormalIn_T = bits(_classify_out_T, 29, 23) @[FPU.scala 253:30]
      node classify_out_isHighSubnormalIn = lt(_classify_out_isHighSubnormalIn_T, UInt<2>("h2")) @[FPU.scala 253:55]
      node _classify_out_isSubnormal_T = eq(classify_out_code, UInt<1>("h1")) @[FPU.scala 254:28]
      node _classify_out_isSubnormal_T_1 = eq(classify_out_codeHi, UInt<1>("h1")) @[FPU.scala 254:50]
      node _classify_out_isSubnormal_T_2 = and(_classify_out_isSubnormal_T_1, classify_out_isHighSubnormalIn) @[FPU.scala 254:62]
      node classify_out_isSubnormal = or(_classify_out_isSubnormal_T, _classify_out_isSubnormal_T_2) @[FPU.scala 254:40]
      node _classify_out_isNormal_T = eq(classify_out_codeHi, UInt<1>("h1")) @[FPU.scala 255:27]
      node _classify_out_isNormal_T_1 = eq(classify_out_isHighSubnormalIn, UInt<1>("h0")) @[FPU.scala 255:42]
      node _classify_out_isNormal_T_2 = and(_classify_out_isNormal_T, _classify_out_isNormal_T_1) @[FPU.scala 255:39]
      node _classify_out_isNormal_T_3 = eq(classify_out_codeHi, UInt<2>("h2")) @[FPU.scala 255:71]
      node classify_out_isNormal = or(_classify_out_isNormal_T_2, _classify_out_isNormal_T_3) @[FPU.scala 255:61]
      node classify_out_isZero = eq(classify_out_code, UInt<1>("h0")) @[FPU.scala 256:23]
      node _classify_out_isInf_T = bits(classify_out_code, 0, 0) @[FPU.scala 257:35]
      node _classify_out_isInf_T_1 = eq(_classify_out_isInf_T, UInt<1>("h0")) @[FPU.scala 257:30]
      node classify_out_isInf = and(classify_out_isSpecial, _classify_out_isInf_T_1) @[FPU.scala 257:27]
      node classify_out_isNaN = andr(classify_out_code) @[FPU.scala 258:22]
      node _classify_out_isSNaN_T = bits(_classify_out_T, 22, 22) @[FPU.scala 259:29]
      node _classify_out_isSNaN_T_1 = eq(_classify_out_isSNaN_T, UInt<1>("h0")) @[FPU.scala 259:27]
      node classify_out_isSNaN = and(classify_out_isNaN, _classify_out_isSNaN_T_1) @[FPU.scala 259:24]
      node _classify_out_isQNaN_T = bits(_classify_out_T, 22, 22) @[FPU.scala 260:28]
      node classify_out_isQNaN = and(classify_out_isNaN, _classify_out_isQNaN_T) @[FPU.scala 260:24]
      node _classify_out_T_1 = eq(classify_out_sign_1, UInt<1>("h0")) @[FPU.scala 262:34]
      node _classify_out_T_2 = and(classify_out_isInf, _classify_out_T_1) @[FPU.scala 262:31]
      node _classify_out_T_3 = eq(classify_out_sign_1, UInt<1>("h0")) @[FPU.scala 262:53]
      node _classify_out_T_4 = and(classify_out_isNormal, _classify_out_T_3) @[FPU.scala 262:50]
      node _classify_out_T_5 = eq(classify_out_sign_1, UInt<1>("h0")) @[FPU.scala 263:24]
      node _classify_out_T_6 = and(classify_out_isSubnormal, _classify_out_T_5) @[FPU.scala 263:21]
      node _classify_out_T_7 = eq(classify_out_sign_1, UInt<1>("h0")) @[FPU.scala 263:41]
      node _classify_out_T_8 = and(classify_out_isZero, _classify_out_T_7) @[FPU.scala 263:38]
      node _classify_out_T_9 = and(classify_out_isZero, classify_out_sign_1) @[FPU.scala 263:55]
      node _classify_out_T_10 = and(classify_out_isSubnormal, classify_out_sign_1) @[FPU.scala 264:21]
      node _classify_out_T_11 = and(classify_out_isNormal, classify_out_sign_1) @[FPU.scala 264:39]
      node _classify_out_T_12 = and(classify_out_isInf, classify_out_sign_1) @[FPU.scala 264:54]
      node classify_out_lo_lo = cat(_classify_out_T_11, _classify_out_T_12) @[Cat.scala 33:92]
      node classify_out_lo_hi_hi = cat(_classify_out_T_8, _classify_out_T_9) @[Cat.scala 33:92]
      node classify_out_lo_hi = cat(classify_out_lo_hi_hi, _classify_out_T_10) @[Cat.scala 33:92]
      node classify_out_lo = cat(classify_out_lo_hi, classify_out_lo_lo) @[Cat.scala 33:92]
      node classify_out_hi_lo = cat(_classify_out_T_4, _classify_out_T_6) @[Cat.scala 33:92]
      node classify_out_hi_hi_hi = cat(classify_out_isQNaN, classify_out_isSNaN) @[Cat.scala 33:92]
      node classify_out_hi_hi = cat(classify_out_hi_hi_hi, _classify_out_T_2) @[Cat.scala 33:92]
      node classify_out_hi_1 = cat(classify_out_hi_hi, classify_out_hi_lo) @[Cat.scala 33:92]
      node _classify_out_T_13 = cat(classify_out_hi_1, classify_out_lo) @[Cat.scala 33:92]
      node classify_out_sign_2 = bits(in.in1, 64, 64) @[FPU.scala 248:17]
      node classify_out_code_1 = bits(in.in1, 63, 61) @[FPU.scala 249:17]
      node classify_out_codeHi_1 = bits(classify_out_code_1, 2, 1) @[FPU.scala 250:22]
      node classify_out_isSpecial_1 = eq(classify_out_codeHi_1, UInt<2>("h3")) @[FPU.scala 251:28]
      node _classify_out_isHighSubnormalIn_T_1 = bits(in.in1, 61, 52) @[FPU.scala 253:30]
      node classify_out_isHighSubnormalIn_1 = lt(_classify_out_isHighSubnormalIn_T_1, UInt<2>("h2")) @[FPU.scala 253:55]
      node _classify_out_isSubnormal_T_3 = eq(classify_out_code_1, UInt<1>("h1")) @[FPU.scala 254:28]
      node _classify_out_isSubnormal_T_4 = eq(classify_out_codeHi_1, UInt<1>("h1")) @[FPU.scala 254:50]
      node _classify_out_isSubnormal_T_5 = and(_classify_out_isSubnormal_T_4, classify_out_isHighSubnormalIn_1) @[FPU.scala 254:62]
      node classify_out_isSubnormal_1 = or(_classify_out_isSubnormal_T_3, _classify_out_isSubnormal_T_5) @[FPU.scala 254:40]
      node _classify_out_isNormal_T_4 = eq(classify_out_codeHi_1, UInt<1>("h1")) @[FPU.scala 255:27]
      node _classify_out_isNormal_T_5 = eq(classify_out_isHighSubnormalIn_1, UInt<1>("h0")) @[FPU.scala 255:42]
      node _classify_out_isNormal_T_6 = and(_classify_out_isNormal_T_4, _classify_out_isNormal_T_5) @[FPU.scala 255:39]
      node _classify_out_isNormal_T_7 = eq(classify_out_codeHi_1, UInt<2>("h2")) @[FPU.scala 255:71]
      node classify_out_isNormal_1 = or(_classify_out_isNormal_T_6, _classify_out_isNormal_T_7) @[FPU.scala 255:61]
      node classify_out_isZero_1 = eq(classify_out_code_1, UInt<1>("h0")) @[FPU.scala 256:23]
      node _classify_out_isInf_T_2 = bits(classify_out_code_1, 0, 0) @[FPU.scala 257:35]
      node _classify_out_isInf_T_3 = eq(_classify_out_isInf_T_2, UInt<1>("h0")) @[FPU.scala 257:30]
      node classify_out_isInf_1 = and(classify_out_isSpecial_1, _classify_out_isInf_T_3) @[FPU.scala 257:27]
      node classify_out_isNaN_1 = andr(classify_out_code_1) @[FPU.scala 258:22]
      node _classify_out_isSNaN_T_2 = bits(in.in1, 51, 51) @[FPU.scala 259:29]
      node _classify_out_isSNaN_T_3 = eq(_classify_out_isSNaN_T_2, UInt<1>("h0")) @[FPU.scala 259:27]
      node classify_out_isSNaN_1 = and(classify_out_isNaN_1, _classify_out_isSNaN_T_3) @[FPU.scala 259:24]
      node _classify_out_isQNaN_T_1 = bits(in.in1, 51, 51) @[FPU.scala 260:28]
      node classify_out_isQNaN_1 = and(classify_out_isNaN_1, _classify_out_isQNaN_T_1) @[FPU.scala 260:24]
      node _classify_out_T_14 = eq(classify_out_sign_2, UInt<1>("h0")) @[FPU.scala 262:34]
      node _classify_out_T_15 = and(classify_out_isInf_1, _classify_out_T_14) @[FPU.scala 262:31]
      node _classify_out_T_16 = eq(classify_out_sign_2, UInt<1>("h0")) @[FPU.scala 262:53]
      node _classify_out_T_17 = and(classify_out_isNormal_1, _classify_out_T_16) @[FPU.scala 262:50]
      node _classify_out_T_18 = eq(classify_out_sign_2, UInt<1>("h0")) @[FPU.scala 263:24]
      node _classify_out_T_19 = and(classify_out_isSubnormal_1, _classify_out_T_18) @[FPU.scala 263:21]
      node _classify_out_T_20 = eq(classify_out_sign_2, UInt<1>("h0")) @[FPU.scala 263:41]
      node _classify_out_T_21 = and(classify_out_isZero_1, _classify_out_T_20) @[FPU.scala 263:38]
      node _classify_out_T_22 = and(classify_out_isZero_1, classify_out_sign_2) @[FPU.scala 263:55]
      node _classify_out_T_23 = and(classify_out_isSubnormal_1, classify_out_sign_2) @[FPU.scala 264:21]
      node _classify_out_T_24 = and(classify_out_isNormal_1, classify_out_sign_2) @[FPU.scala 264:39]
      node _classify_out_T_25 = and(classify_out_isInf_1, classify_out_sign_2) @[FPU.scala 264:54]
      node classify_out_lo_lo_1 = cat(_classify_out_T_24, _classify_out_T_25) @[Cat.scala 33:92]
      node classify_out_lo_hi_hi_1 = cat(_classify_out_T_21, _classify_out_T_22) @[Cat.scala 33:92]
      node classify_out_lo_hi_1 = cat(classify_out_lo_hi_hi_1, _classify_out_T_23) @[Cat.scala 33:92]
      node classify_out_lo_1 = cat(classify_out_lo_hi_1, classify_out_lo_lo_1) @[Cat.scala 33:92]
      node classify_out_hi_lo_1 = cat(_classify_out_T_17, _classify_out_T_19) @[Cat.scala 33:92]
      node classify_out_hi_hi_hi_1 = cat(classify_out_isQNaN_1, classify_out_isSNaN_1) @[Cat.scala 33:92]
      node classify_out_hi_hi_1 = cat(classify_out_hi_hi_hi_1, _classify_out_T_15) @[Cat.scala 33:92]
      node classify_out_hi_2 = cat(classify_out_hi_hi_1, classify_out_hi_lo_1) @[Cat.scala 33:92]
      node _classify_out_T_26 = cat(classify_out_hi_2, classify_out_lo_1) @[Cat.scala 33:92]
      node _classify_out_truncIdx_T = or(in.typeTagOut, UInt<1>("h0")) @[package.scala 31:21]
      node classify_out_truncIdx = bits(_classify_out_truncIdx_T, 0, 0) @[package.scala 31:49]
      node _classify_out_T_27 = eq(classify_out_truncIdx, UInt<1>("h1")) @[package.scala 32:86]
      node classify_out = mux(_classify_out_T_27, _classify_out_T_26, _classify_out_T_13) @[package.scala 32:76]
      node _toint_T = shr(store, 32) @[FPU.scala 480:36]
      node _toint_T_1 = shl(_toint_T, 32) @[FPU.scala 480:47]
      node _toint_T_2 = or(classify_out, _toint_T_1) @[FPU.scala 480:27]
      toint <= _toint_T_2 @[FPU.scala 480:11]
      intType <= UInt<1>("h0") @[FPU.scala 481:13]
    when in.wflags : @[FPU.scala 484:20]
      node _toint_T_3 = not(in.rm) @[FPU.scala 485:15]
      node _toint_T_4 = cat(dcmp.io.lt, dcmp.io.eq) @[Cat.scala 33:92]
      node _toint_T_5 = and(_toint_T_3, _toint_T_4) @[FPU.scala 485:22]
      node _toint_T_6 = orr(_toint_T_5) @[FPU.scala 485:53]
      node _toint_T_7 = shr(store, 32) @[FPU.scala 485:66]
      node _toint_T_8 = shl(_toint_T_7, 32) @[FPU.scala 485:77]
      node _toint_T_9 = or(_toint_T_6, _toint_T_8) @[FPU.scala 485:57]
      toint <= _toint_T_9 @[FPU.scala 485:11]
      io.out.bits.exc <= dcmp.io.exceptionFlags @[FPU.scala 486:21]
      intType <= UInt<1>("h0") @[FPU.scala 487:13]
      node _T_1 = eq(in.ren2, UInt<1>("h0")) @[FPU.scala 489:11]
      when _T_1 : @[FPU.scala 489:21]
        node cvtType = bits(in.typ, 1, 1) @[package.scala 154:13]
        intType <= cvtType @[FPU.scala 491:15]
        inst conv of RecFNToIN @[FPU.scala 492:24]
        conv.io is invalid
        conv.io.in <= in.in1 @[FPU.scala 493:18]
        conv.io.roundingMode <= in.rm @[FPU.scala 494:28]
        node _conv_io_signedOut_T = bits(in.typ, 0, 0) @[FPU.scala 495:35]
        node _conv_io_signedOut_T_1 = not(_conv_io_signedOut_T) @[FPU.scala 495:28]
        conv.io.signedOut <= _conv_io_signedOut_T_1 @[FPU.scala 495:25]
        toint <= conv.io.out @[FPU.scala 496:13]
        node _io_out_bits_exc_T = bits(conv.io.intExceptionFlags, 2, 1) @[FPU.scala 497:55]
        node _io_out_bits_exc_T_1 = orr(_io_out_bits_exc_T) @[FPU.scala 497:62]
        node _io_out_bits_exc_T_2 = bits(conv.io.intExceptionFlags, 0, 0) @[FPU.scala 497:104]
        node io_out_bits_exc_hi = cat(_io_out_bits_exc_T_1, UInt<3>("h0")) @[Cat.scala 33:92]
        node _io_out_bits_exc_T_3 = cat(io_out_bits_exc_hi, _io_out_bits_exc_T_2) @[Cat.scala 33:92]
        io.out.bits.exc <= _io_out_bits_exc_T_3 @[FPU.scala 497:23]
        node _T_2 = eq(cvtType, UInt<1>("h0")) @[FPU.scala 501:23]
        when _T_2 : @[FPU.scala 501:30]
          inst narrow of RecFNToIN_1 @[FPU.scala 502:30]
          narrow.io is invalid
          narrow.io.in <= in.in1 @[FPU.scala 503:24]
          narrow.io.roundingMode <= in.rm @[FPU.scala 504:34]
          node _narrow_io_signedOut_T = bits(in.typ, 0, 0) @[FPU.scala 505:41]
          node _narrow_io_signedOut_T_1 = not(_narrow_io_signedOut_T) @[FPU.scala 505:34]
          narrow.io.signedOut <= _narrow_io_signedOut_T_1 @[FPU.scala 505:31]
          node _excSign_T = bits(in.in1, 64, 64) @[FPU.scala 507:31]
          node _excSign_T_1 = bits(in.in1, 63, 61) @[FPU.scala 244:25]
          node _excSign_T_2 = andr(_excSign_T_1) @[FPU.scala 244:56]
          node _excSign_T_3 = eq(_excSign_T_2, UInt<1>("h0")) @[FPU.scala 507:62]
          node excSign = and(_excSign_T, _excSign_T_3) @[FPU.scala 507:59]
          node _excOut_T = eq(conv.io.signedOut, excSign) @[FPU.scala 508:46]
          node _excOut_T_1 = eq(excSign, UInt<1>("h0")) @[FPU.scala 508:69]
          node _excOut_T_2 = bits(_excOut_T_1, 0, 0) @[Bitwise.scala 77:15]
          node _excOut_T_3 = mux(_excOut_T_2, UInt<31>("h7fffffff"), UInt<31>("h0")) @[Bitwise.scala 77:12]
          node excOut = cat(_excOut_T, _excOut_T_3) @[Cat.scala 33:92]
          node _invalid_T = bits(conv.io.intExceptionFlags, 2, 2) @[FPU.scala 509:50]
          node _invalid_T_1 = bits(narrow.io.intExceptionFlags, 1, 1) @[FPU.scala 509:84]
          node invalid = or(_invalid_T, _invalid_T_1) @[FPU.scala 509:54]
          when invalid : @[FPU.scala 510:26]
            node _toint_T_10 = shr(conv.io.out, 32) @[FPU.scala 510:53]
            node _toint_T_11 = cat(_toint_T_10, excOut) @[Cat.scala 33:92]
            toint <= _toint_T_11 @[FPU.scala 510:34]
          node _io_out_bits_exc_T_4 = eq(invalid, UInt<1>("h0")) @[FPU.scala 511:55]
          node _io_out_bits_exc_T_5 = bits(conv.io.intExceptionFlags, 0, 0) @[FPU.scala 511:92]
          node _io_out_bits_exc_T_6 = and(_io_out_bits_exc_T_4, _io_out_bits_exc_T_5) @[FPU.scala 511:64]
          node io_out_bits_exc_hi_1 = cat(invalid, UInt<3>("h0")) @[Cat.scala 33:92]
          node _io_out_bits_exc_T_7 = cat(io_out_bits_exc_hi_1, _io_out_bits_exc_T_6) @[Cat.scala 33:92]
          io.out.bits.exc <= _io_out_bits_exc_T_7 @[FPU.scala 511:27]
    io.out.valid <= valid @[FPU.scala 517:16]
    node _io_out_bits_lt_T = asSInt(dcmp.io.a) @[FPU.scala 518:46]
    node _io_out_bits_lt_T_1 = lt(_io_out_bits_lt_T, asSInt(UInt<1>("h0"))) @[FPU.scala 518:53]
    node _io_out_bits_lt_T_2 = asSInt(dcmp.io.b) @[FPU.scala 518:72]
    node _io_out_bits_lt_T_3 = geq(_io_out_bits_lt_T_2, asSInt(UInt<1>("h0"))) @[FPU.scala 518:79]
    node _io_out_bits_lt_T_4 = and(_io_out_bits_lt_T_1, _io_out_bits_lt_T_3) @[FPU.scala 518:59]
    node _io_out_bits_lt_T_5 = or(dcmp.io.lt, _io_out_bits_lt_T_4) @[FPU.scala 518:32]
    io.out.bits.lt <= _io_out_bits_lt_T_5 @[FPU.scala 518:18]
    io.out.bits.in <- in @[FPU.scala 519:18]

  module MulAddRecFNPipe_1 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip validin : UInt<1>, flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>, validout : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_1 @[FPU.scala 647:41]
    mulAddRecFNToRaw_preMul.io is invalid
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_1 @[FPU.scala 648:42]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_preMul.io.op <= io.op @[FPU.scala 650:35]
    mulAddRecFNToRaw_preMul.io.a <= io.a @[FPU.scala 651:35]
    mulAddRecFNToRaw_preMul.io.b <= io.b @[FPU.scala 652:35]
    mulAddRecFNToRaw_preMul.io.c <= io.c @[FPU.scala 653:35]
    node _mulAddResult_T = mul(mulAddRecFNToRaw_preMul.io.mulAddA, mulAddRecFNToRaw_preMul.io.mulAddB) @[FPU.scala 656:45]
    node mulAddResult = add(_mulAddResult_T, mulAddRecFNToRaw_preMul.io.mulAddC) @[FPU.scala 657:50]
    wire valid_stage0 : UInt<1> @[FPU.scala 660:28]
    valid_stage0 is invalid @[FPU.scala 660:28]
    wire roundingMode_stage0 : UInt<3> @[FPU.scala 661:35]
    roundingMode_stage0 is invalid @[FPU.scala 661:35]
    wire detectTininess_stage0 : UInt<1> @[FPU.scala 662:37]
    detectTininess_stage0 is invalid @[FPU.scala 662:37]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    mulAddRecFNToRaw_postMul_io_fromPreMul_v <= io.validin @[Valid.scala 130:22]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      mulAddRecFNToRaw_postMul_io_fromPreMul_b <= mulAddRecFNToRaw_preMul.io.toPostMul @[Reg.scala 20:22]
    wire mulAddRecFNToRaw_postMul_io_fromPreMul_out : { valid : UInt<1>, bits : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}} @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_fromPreMul_out is invalid @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_fromPreMul_out.valid <= mulAddRecFNToRaw_postMul_io_fromPreMul_v @[Valid.scala 126:17]
    mulAddRecFNToRaw_postMul_io_fromPreMul_out.bits <- mulAddRecFNToRaw_postMul_io_fromPreMul_b @[Valid.scala 127:16]
    mulAddRecFNToRaw_postMul.io.fromPreMul <- mulAddRecFNToRaw_postMul_io_fromPreMul_out.bits @[FPU.scala 665:46]
    reg mulAddRecFNToRaw_postMul_io_mulAddResult_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    mulAddRecFNToRaw_postMul_io_mulAddResult_v <= io.validin @[Valid.scala 130:22]
    reg mulAddRecFNToRaw_postMul_io_mulAddResult_b : UInt<49>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_mulAddResult_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      mulAddRecFNToRaw_postMul_io_mulAddResult_b <= mulAddResult @[Reg.scala 20:22]
    wire mulAddRecFNToRaw_postMul_io_mulAddResult_out : { valid : UInt<1>, bits : UInt<49>} @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_mulAddResult_out is invalid @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_mulAddResult_out.valid <= mulAddRecFNToRaw_postMul_io_mulAddResult_v @[Valid.scala 126:17]
    mulAddRecFNToRaw_postMul_io_mulAddResult_out.bits <= mulAddRecFNToRaw_postMul_io_mulAddResult_b @[Valid.scala 127:16]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddRecFNToRaw_postMul_io_mulAddResult_out.bits @[FPU.scala 666:46]
    reg mulAddRecFNToRaw_postMul_io_roundingMode_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    mulAddRecFNToRaw_postMul_io_roundingMode_v <= io.validin @[Valid.scala 130:22]
    reg mulAddRecFNToRaw_postMul_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_roundingMode_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      mulAddRecFNToRaw_postMul_io_roundingMode_b <= io.roundingMode @[Reg.scala 20:22]
    wire mulAddRecFNToRaw_postMul_io_roundingMode_out : { valid : UInt<1>, bits : UInt<3>} @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_roundingMode_out is invalid @[Valid.scala 125:21]
    mulAddRecFNToRaw_postMul_io_roundingMode_out.valid <= mulAddRecFNToRaw_postMul_io_roundingMode_v @[Valid.scala 126:17]
    mulAddRecFNToRaw_postMul_io_roundingMode_out.bits <= mulAddRecFNToRaw_postMul_io_roundingMode_b @[Valid.scala 127:16]
    mulAddRecFNToRaw_postMul.io.roundingMode <= mulAddRecFNToRaw_postMul_io_roundingMode_out.bits @[FPU.scala 667:46]
    reg roundingMode_stage0_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundingMode_stage0_v <= io.validin @[Valid.scala 130:22]
    reg roundingMode_stage0_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundingMode_stage0_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      roundingMode_stage0_b <= io.roundingMode @[Reg.scala 20:22]
    wire roundingMode_stage0_out : { valid : UInt<1>, bits : UInt<3>} @[Valid.scala 125:21]
    roundingMode_stage0_out is invalid @[Valid.scala 125:21]
    roundingMode_stage0_out.valid <= roundingMode_stage0_v @[Valid.scala 126:17]
    roundingMode_stage0_out.bits <= roundingMode_stage0_b @[Valid.scala 127:16]
    roundingMode_stage0 <= roundingMode_stage0_out.bits @[FPU.scala 668:46]
    reg detectTininess_stage0_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    detectTininess_stage0_v <= io.validin @[Valid.scala 130:22]
    reg detectTininess_stage0_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), detectTininess_stage0_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      detectTininess_stage0_b <= io.detectTininess @[Reg.scala 20:22]
    wire detectTininess_stage0_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    detectTininess_stage0_out is invalid @[Valid.scala 125:21]
    detectTininess_stage0_out.valid <= detectTininess_stage0_v @[Valid.scala 126:17]
    detectTininess_stage0_out.bits <= detectTininess_stage0_b @[Valid.scala 127:16]
    detectTininess_stage0 <= detectTininess_stage0_out.bits @[FPU.scala 669:46]
    reg valid_stage0_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    valid_stage0_v <= io.validin @[Valid.scala 130:22]
    reg valid_stage0_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_stage0_b) @[Reg.scala 19:16]
    when io.validin : @[Reg.scala 20:18]
      valid_stage0_b <= UInt<1>("h0") @[Reg.scala 20:22]
    wire valid_stage0_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    valid_stage0_out is invalid @[Valid.scala 125:21]
    valid_stage0_out.valid <= valid_stage0_v @[Valid.scala 126:17]
    valid_stage0_out.bits <= valid_stage0_b @[Valid.scala 127:16]
    valid_stage0 <= valid_stage0_out.valid @[FPU.scala 670:46]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_1 @[FPU.scala 675:35]
    roundRawFNToRecFN.io is invalid
    reg roundRawFNToRecFN_io_invalidExc_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_invalidExc_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_invalidExc_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_invalidExc_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_invalidExc_b <= mulAddRecFNToRaw_postMul.io.invalidExc @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_invalidExc_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_invalidExc_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_invalidExc_out.valid <= roundRawFNToRecFN_io_invalidExc_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_invalidExc_out.bits <= roundRawFNToRecFN_io_invalidExc_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.invalidExc <= roundRawFNToRecFN_io_invalidExc_out.bits @[FPU.scala 678:45]
    reg roundRawFNToRecFN_io_in_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_in_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_in_b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_in_b <= mulAddRecFNToRaw_postMul.io.rawOut @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_in_out : { valid : UInt<1>, bits : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_in_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_in_out.valid <= roundRawFNToRecFN_io_in_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_in_out.bits <- roundRawFNToRecFN_io_in_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.in <- roundRawFNToRecFN_io_in_out.bits @[FPU.scala 679:45]
    reg roundRawFNToRecFN_io_roundingMode_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_roundingMode_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_roundingMode_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_roundingMode_b <= roundingMode_stage0 @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_roundingMode_out : { valid : UInt<1>, bits : UInt<3>} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_roundingMode_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_roundingMode_out.valid <= roundRawFNToRecFN_io_roundingMode_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_roundingMode_out.bits <= roundRawFNToRecFN_io_roundingMode_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.roundingMode <= roundRawFNToRecFN_io_roundingMode_out.bits @[FPU.scala 680:45]
    reg roundRawFNToRecFN_io_detectTininess_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    roundRawFNToRecFN_io_detectTininess_v <= valid_stage0 @[Valid.scala 130:22]
    reg roundRawFNToRecFN_io_detectTininess_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_detectTininess_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      roundRawFNToRecFN_io_detectTininess_b <= detectTininess_stage0 @[Reg.scala 20:22]
    wire roundRawFNToRecFN_io_detectTininess_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    roundRawFNToRecFN_io_detectTininess_out is invalid @[Valid.scala 125:21]
    roundRawFNToRecFN_io_detectTininess_out.valid <= roundRawFNToRecFN_io_detectTininess_v @[Valid.scala 126:17]
    roundRawFNToRecFN_io_detectTininess_out.bits <= roundRawFNToRecFN_io_detectTininess_b @[Valid.scala 127:16]
    roundRawFNToRecFN.io.detectTininess <= roundRawFNToRecFN_io_detectTininess_out.bits @[FPU.scala 681:45]
    reg io_validout_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_validout_v <= valid_stage0 @[Valid.scala 130:22]
    reg io_validout_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_validout_b) @[Reg.scala 19:16]
    when valid_stage0 : @[Reg.scala 20:18]
      io_validout_b <= UInt<1>("h0") @[Reg.scala 20:22]
    wire io_validout_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    io_validout_out is invalid @[Valid.scala 125:21]
    io_validout_out.valid <= io_validout_v @[Valid.scala 126:17]
    io_validout_out.bits <= io_validout_b @[Valid.scala 127:16]
    io.validout <= io_validout_out.valid @[FPU.scala 682:45]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[FPU.scala 684:38]
    io.out <= roundRawFNToRecFN.io.out @[FPU.scala 686:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[FPU.scala 687:23]

  module MulAddRecFNToRaw_postMul_1 :
    output io : { flip fromPreMul : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[MulAddRecFN.scala 185:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 189:42]
    node _sigSum_T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 191:32]
    node _sigSum_T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h1")) @[MulAddRecFN.scala 192:47]
    node _sigSum_T_2 = tail(_sigSum_T_1, 1) @[MulAddRecFN.scala 192:47]
    node _sigSum_T_3 = mux(_sigSum_T, _sigSum_T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 191:16]
    node _sigSum_T_4 = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 195:28]
    node sigSum_hi = cat(_sigSum_T_3, _sigSum_T_4) @[Cat.scala 33:92]
    node sigSum = cat(sigSum_hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 33:92]
    node _CDom_sExp_T = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 202:69]
    node _CDom_sExp_T_1 = sub(io.fromPreMul.sExpSum, _CDom_sExp_T) @[MulAddRecFN.scala 202:43]
    node _CDom_sExp_T_2 = tail(_CDom_sExp_T_1, 1) @[MulAddRecFN.scala 202:43]
    node CDom_sExp = asSInt(_CDom_sExp_T_2) @[MulAddRecFN.scala 202:43]
    node _CDom_absSigSum_T = bits(sigSum, 74, 25) @[MulAddRecFN.scala 205:20]
    node _CDom_absSigSum_T_1 = not(_CDom_absSigSum_T) @[MulAddRecFN.scala 205:13]
    node _CDom_absSigSum_T_2 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 208:46]
    node _CDom_absSigSum_T_3 = bits(sigSum, 72, 26) @[MulAddRecFN.scala 209:23]
    node CDom_absSigSum_hi = cat(UInt<1>("h0"), _CDom_absSigSum_T_2) @[Cat.scala 33:92]
    node _CDom_absSigSum_T_4 = cat(CDom_absSigSum_hi, _CDom_absSigSum_T_3) @[Cat.scala 33:92]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _CDom_absSigSum_T_1, _CDom_absSigSum_T_4) @[MulAddRecFN.scala 204:12]
    node _CDom_absSigSumExtra_T = bits(sigSum, 24, 1) @[MulAddRecFN.scala 214:21]
    node _CDom_absSigSumExtra_T_1 = not(_CDom_absSigSumExtra_T) @[MulAddRecFN.scala 214:14]
    node _CDom_absSigSumExtra_T_2 = orr(_CDom_absSigSumExtra_T_1) @[MulAddRecFN.scala 214:36]
    node _CDom_absSigSumExtra_T_3 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 215:19]
    node _CDom_absSigSumExtra_T_4 = orr(_CDom_absSigSumExtra_T_3) @[MulAddRecFN.scala 215:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _CDom_absSigSumExtra_T_2, _CDom_absSigSumExtra_T_4) @[MulAddRecFN.scala 213:12]
    node _CDom_mainSig_T = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 218:24]
    node CDom_mainSig = bits(_CDom_mainSig_T, 49, 21) @[MulAddRecFN.scala 218:56]
    node _CDom_reduced4SigExtra_T = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 221:36]
    node _CDom_reduced4SigExtra_T_1 = shl(_CDom_reduced4SigExtra_T, 3) @[MulAddRecFN.scala 221:53]
    wire CDom_reduced4SigExtra_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    CDom_reduced4SigExtra_reducedVec is invalid @[primitives.scala 119:30]
    node _CDom_reduced4SigExtra_reducedVec_0_T = bits(_CDom_reduced4SigExtra_T_1, 3, 0) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_0_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[0] <= _CDom_reduced4SigExtra_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_1_T = bits(_CDom_reduced4SigExtra_T_1, 7, 4) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_1_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[1] <= _CDom_reduced4SigExtra_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_2_T = bits(_CDom_reduced4SigExtra_T_1, 11, 8) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_2_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[2] <= _CDom_reduced4SigExtra_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_3_T = bits(_CDom_reduced4SigExtra_T_1, 15, 12) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_3_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[3] <= _CDom_reduced4SigExtra_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_4_T = bits(_CDom_reduced4SigExtra_T_1, 19, 16) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_4_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[4] <= _CDom_reduced4SigExtra_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_5_T = bits(_CDom_reduced4SigExtra_T_1, 23, 20) @[primitives.scala 121:33]
    node _CDom_reduced4SigExtra_reducedVec_5_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 121:54]
    CDom_reduced4SigExtra_reducedVec[5] <= _CDom_reduced4SigExtra_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _CDom_reduced4SigExtra_reducedVec_6_T = bits(_CDom_reduced4SigExtra_T_1, 26, 24) @[primitives.scala 124:15]
    node _CDom_reduced4SigExtra_reducedVec_6_T_1 = orr(_CDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 124:57]
    CDom_reduced4SigExtra_reducedVec[6] <= _CDom_reduced4SigExtra_reducedVec_6_T_1 @[primitives.scala 123:38]
    node CDom_reduced4SigExtra_lo_hi = cat(CDom_reduced4SigExtra_reducedVec[2], CDom_reduced4SigExtra_reducedVec[1]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo = cat(CDom_reduced4SigExtra_lo_hi, CDom_reduced4SigExtra_reducedVec[0]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_lo = cat(CDom_reduced4SigExtra_reducedVec[4], CDom_reduced4SigExtra_reducedVec[3]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_hi = cat(CDom_reduced4SigExtra_reducedVec[6], CDom_reduced4SigExtra_reducedVec[5]) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi = cat(CDom_reduced4SigExtra_hi_hi, CDom_reduced4SigExtra_hi_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_2 = cat(CDom_reduced4SigExtra_hi, CDom_reduced4SigExtra_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_3 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 222:51]
    node _CDom_reduced4SigExtra_T_4 = not(_CDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node CDom_reduced4SigExtra_shift = dshr(asSInt(UInt<9>("h100")), _CDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _CDom_reduced4SigExtra_T_5 = bits(CDom_reduced4SigExtra_shift, 6, 1) @[primitives.scala 79:22]
    node _CDom_reduced4SigExtra_T_6 = bits(_CDom_reduced4SigExtra_T_5, 3, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_7 = bits(_CDom_reduced4SigExtra_T_6, 1, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_8 = bits(_CDom_reduced4SigExtra_T_7, 0, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_9 = bits(_CDom_reduced4SigExtra_T_7, 1, 1) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_10 = cat(_CDom_reduced4SigExtra_T_8, _CDom_reduced4SigExtra_T_9) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_11 = bits(_CDom_reduced4SigExtra_T_6, 3, 2) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_12 = bits(_CDom_reduced4SigExtra_T_11, 0, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_13 = bits(_CDom_reduced4SigExtra_T_11, 1, 1) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_14 = cat(_CDom_reduced4SigExtra_T_12, _CDom_reduced4SigExtra_T_13) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_15 = cat(_CDom_reduced4SigExtra_T_10, _CDom_reduced4SigExtra_T_14) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_16 = bits(_CDom_reduced4SigExtra_T_5, 5, 4) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_17 = bits(_CDom_reduced4SigExtra_T_16, 0, 0) @[Bitwise.scala 114:18]
    node _CDom_reduced4SigExtra_T_18 = bits(_CDom_reduced4SigExtra_T_16, 1, 1) @[Bitwise.scala 114:47]
    node _CDom_reduced4SigExtra_T_19 = cat(_CDom_reduced4SigExtra_T_17, _CDom_reduced4SigExtra_T_18) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_20 = cat(_CDom_reduced4SigExtra_T_15, _CDom_reduced4SigExtra_T_19) @[Cat.scala 33:92]
    node _CDom_reduced4SigExtra_T_21 = and(_CDom_reduced4SigExtra_T_2, _CDom_reduced4SigExtra_T_20) @[MulAddRecFN.scala 221:72]
    node CDom_reduced4SigExtra = orr(_CDom_reduced4SigExtra_T_21) @[MulAddRecFN.scala 222:73]
    node _CDom_sig_T = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 224:25]
    node _CDom_sig_T_1 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 225:25]
    node _CDom_sig_T_2 = orr(_CDom_sig_T_1) @[MulAddRecFN.scala 225:32]
    node _CDom_sig_T_3 = or(_CDom_sig_T_2, CDom_reduced4SigExtra) @[MulAddRecFN.scala 225:36]
    node _CDom_sig_T_4 = or(_CDom_sig_T_3, CDom_absSigSumExtra) @[MulAddRecFN.scala 225:61]
    node CDom_sig = cat(_CDom_sig_T, _CDom_sig_T_4) @[Cat.scala 33:92]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 231:36]
    node _notCDom_absSigSum_T = bits(sigSum, 50, 0) @[MulAddRecFN.scala 234:20]
    node _notCDom_absSigSum_T_1 = not(_notCDom_absSigSum_T) @[MulAddRecFN.scala 234:13]
    node _notCDom_absSigSum_T_2 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 235:19]
    node _notCDom_absSigSum_T_3 = add(_notCDom_absSigSum_T_2, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 235:41]
    node _notCDom_absSigSum_T_4 = tail(_notCDom_absSigSum_T_3, 1) @[MulAddRecFN.scala 235:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _notCDom_absSigSum_T_1, _notCDom_absSigSum_T_4) @[MulAddRecFN.scala 233:12]
    wire notCDom_reduced2AbsSigSum_reducedVec : UInt<1>[26] @[primitives.scala 102:30]
    notCDom_reduced2AbsSigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _notCDom_reduced2AbsSigSum_reducedVec_0_T = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_0_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_0_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[0] <= _notCDom_reduced2AbsSigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_1_T = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_1_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_1_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[1] <= _notCDom_reduced2AbsSigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_2_T = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_2_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_2_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[2] <= _notCDom_reduced2AbsSigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_3_T = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_3_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_3_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[3] <= _notCDom_reduced2AbsSigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_4_T = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_4_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_4_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[4] <= _notCDom_reduced2AbsSigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_5_T = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_5_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_5_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[5] <= _notCDom_reduced2AbsSigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_6_T = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_6_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_6_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[6] <= _notCDom_reduced2AbsSigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_7_T = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_7_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_7_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[7] <= _notCDom_reduced2AbsSigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_8_T = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_8_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_8_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[8] <= _notCDom_reduced2AbsSigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_9_T = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_9_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_9_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[9] <= _notCDom_reduced2AbsSigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_10_T = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_10_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_10_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[10] <= _notCDom_reduced2AbsSigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_11_T = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_11_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_11_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[11] <= _notCDom_reduced2AbsSigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_12_T = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_12_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_12_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[12] <= _notCDom_reduced2AbsSigSum_reducedVec_12_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_13_T = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_13_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_13_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[13] <= _notCDom_reduced2AbsSigSum_reducedVec_13_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_14_T = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_14_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_14_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[14] <= _notCDom_reduced2AbsSigSum_reducedVec_14_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_15_T = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_15_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_15_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[15] <= _notCDom_reduced2AbsSigSum_reducedVec_15_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_16_T = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_16_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_16_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[16] <= _notCDom_reduced2AbsSigSum_reducedVec_16_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_17_T = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_17_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_17_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[17] <= _notCDom_reduced2AbsSigSum_reducedVec_17_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_18_T = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_18_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_18_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[18] <= _notCDom_reduced2AbsSigSum_reducedVec_18_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_19_T = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_19_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_19_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[19] <= _notCDom_reduced2AbsSigSum_reducedVec_19_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_20_T = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_20_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_20_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[20] <= _notCDom_reduced2AbsSigSum_reducedVec_20_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_21_T = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_21_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_21_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[21] <= _notCDom_reduced2AbsSigSum_reducedVec_21_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_22_T = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_22_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_22_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[22] <= _notCDom_reduced2AbsSigSum_reducedVec_22_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_23_T = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_23_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_23_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[23] <= _notCDom_reduced2AbsSigSum_reducedVec_23_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_24_T = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _notCDom_reduced2AbsSigSum_reducedVec_24_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_24_T) @[primitives.scala 104:54]
    notCDom_reduced2AbsSigSum_reducedVec[24] <= _notCDom_reduced2AbsSigSum_reducedVec_24_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced2AbsSigSum_reducedVec_25_T = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _notCDom_reduced2AbsSigSum_reducedVec_25_T_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_25_T) @[primitives.scala 107:57]
    notCDom_reduced2AbsSigSum_reducedVec[25] <= _notCDom_reduced2AbsSigSum_reducedVec_25_T_1 @[primitives.scala 106:38]
    node notCDom_reduced2AbsSigSum_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[2], notCDom_reduced2AbsSigSum_reducedVec[1]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[0]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[5], notCDom_reduced2AbsSigSum_reducedVec[4]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_reducedVec[3]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_hi, notCDom_reduced2AbsSigSum_lo_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[8], notCDom_reduced2AbsSigSum_reducedVec[7]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[6]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[10], notCDom_reduced2AbsSigSum_reducedVec[9]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[12], notCDom_reduced2AbsSigSum_reducedVec[11]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo = cat(notCDom_reduced2AbsSigSum_lo_hi, notCDom_reduced2AbsSigSum_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[15], notCDom_reduced2AbsSigSum_reducedVec[14]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[13]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[18], notCDom_reduced2AbsSigSum_reducedVec[17]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_reducedVec[16]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_hi, notCDom_reduced2AbsSigSum_hi_lo_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[21], notCDom_reduced2AbsSigSum_reducedVec[20]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec[19]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec[23], notCDom_reduced2AbsSigSum_reducedVec[22]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec[25], notCDom_reduced2AbsSigSum_reducedVec[24]) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi = cat(notCDom_reduced2AbsSigSum_hi_hi, notCDom_reduced2AbsSigSum_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(notCDom_reduced2AbsSigSum_hi, notCDom_reduced2AbsSigSum_lo) @[primitives.scala 108:20]
    node _notCDom_normDistReduced2_T = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_1 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_2 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_3 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_4 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_5 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_6 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_7 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_8 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_9 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_10 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_11 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_12 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_13 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_14 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_15 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_16 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_17 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_18 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_19 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_20 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_21 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_22 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_23 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_24 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_25 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_26 = mux(_notCDom_normDistReduced2_T_1, UInt<5>("h18"), UInt<5>("h19")) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_27 = mux(_notCDom_normDistReduced2_T_2, UInt<5>("h17"), _notCDom_normDistReduced2_T_26) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_28 = mux(_notCDom_normDistReduced2_T_3, UInt<5>("h16"), _notCDom_normDistReduced2_T_27) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_29 = mux(_notCDom_normDistReduced2_T_4, UInt<5>("h15"), _notCDom_normDistReduced2_T_28) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_30 = mux(_notCDom_normDistReduced2_T_5, UInt<5>("h14"), _notCDom_normDistReduced2_T_29) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_31 = mux(_notCDom_normDistReduced2_T_6, UInt<5>("h13"), _notCDom_normDistReduced2_T_30) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_32 = mux(_notCDom_normDistReduced2_T_7, UInt<5>("h12"), _notCDom_normDistReduced2_T_31) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_33 = mux(_notCDom_normDistReduced2_T_8, UInt<5>("h11"), _notCDom_normDistReduced2_T_32) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_34 = mux(_notCDom_normDistReduced2_T_9, UInt<5>("h10"), _notCDom_normDistReduced2_T_33) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_35 = mux(_notCDom_normDistReduced2_T_10, UInt<4>("hf"), _notCDom_normDistReduced2_T_34) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_36 = mux(_notCDom_normDistReduced2_T_11, UInt<4>("he"), _notCDom_normDistReduced2_T_35) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_37 = mux(_notCDom_normDistReduced2_T_12, UInt<4>("hd"), _notCDom_normDistReduced2_T_36) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_38 = mux(_notCDom_normDistReduced2_T_13, UInt<4>("hc"), _notCDom_normDistReduced2_T_37) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_39 = mux(_notCDom_normDistReduced2_T_14, UInt<4>("hb"), _notCDom_normDistReduced2_T_38) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_40 = mux(_notCDom_normDistReduced2_T_15, UInt<4>("ha"), _notCDom_normDistReduced2_T_39) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_41 = mux(_notCDom_normDistReduced2_T_16, UInt<4>("h9"), _notCDom_normDistReduced2_T_40) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_42 = mux(_notCDom_normDistReduced2_T_17, UInt<4>("h8"), _notCDom_normDistReduced2_T_41) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_43 = mux(_notCDom_normDistReduced2_T_18, UInt<3>("h7"), _notCDom_normDistReduced2_T_42) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_44 = mux(_notCDom_normDistReduced2_T_19, UInt<3>("h6"), _notCDom_normDistReduced2_T_43) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_45 = mux(_notCDom_normDistReduced2_T_20, UInt<3>("h5"), _notCDom_normDistReduced2_T_44) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_46 = mux(_notCDom_normDistReduced2_T_21, UInt<3>("h4"), _notCDom_normDistReduced2_T_45) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_47 = mux(_notCDom_normDistReduced2_T_22, UInt<2>("h3"), _notCDom_normDistReduced2_T_46) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_48 = mux(_notCDom_normDistReduced2_T_23, UInt<2>("h2"), _notCDom_normDistReduced2_T_47) @[Mux.scala 47:70]
    node _notCDom_normDistReduced2_T_49 = mux(_notCDom_normDistReduced2_T_24, UInt<1>("h1"), _notCDom_normDistReduced2_T_48) @[Mux.scala 47:70]
    node notCDom_normDistReduced2 = mux(_notCDom_normDistReduced2_T_25, UInt<1>("h0"), _notCDom_normDistReduced2_T_49) @[Mux.scala 47:70]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 239:56]
    node _notCDom_sExp_T = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 240:69]
    node _notCDom_sExp_T_1 = sub(io.fromPreMul.sExpSum, _notCDom_sExp_T) @[MulAddRecFN.scala 240:46]
    node _notCDom_sExp_T_2 = tail(_notCDom_sExp_T_1, 1) @[MulAddRecFN.scala 240:46]
    node notCDom_sExp = asSInt(_notCDom_sExp_T_2) @[MulAddRecFN.scala 240:46]
    node _notCDom_mainSig_T = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 242:27]
    node notCDom_mainSig = bits(_notCDom_mainSig_T, 51, 23) @[MulAddRecFN.scala 242:50]
    node _notCDom_reduced4SigExtra_T = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 246:39]
    node _notCDom_reduced4SigExtra_T_1 = shl(_notCDom_reduced4SigExtra_T, 0) @[MulAddRecFN.scala 246:55]
    wire notCDom_reduced4SigExtra_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    notCDom_reduced4SigExtra_reducedVec is invalid @[primitives.scala 102:30]
    node _notCDom_reduced4SigExtra_reducedVec_0_T = bits(_notCDom_reduced4SigExtra_T_1, 1, 0) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_0_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[0] <= _notCDom_reduced4SigExtra_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_1_T = bits(_notCDom_reduced4SigExtra_T_1, 3, 2) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_1_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[1] <= _notCDom_reduced4SigExtra_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_2_T = bits(_notCDom_reduced4SigExtra_T_1, 5, 4) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_2_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[2] <= _notCDom_reduced4SigExtra_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_3_T = bits(_notCDom_reduced4SigExtra_T_1, 7, 6) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_3_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[3] <= _notCDom_reduced4SigExtra_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_4_T = bits(_notCDom_reduced4SigExtra_T_1, 9, 8) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_4_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[4] <= _notCDom_reduced4SigExtra_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_5_T = bits(_notCDom_reduced4SigExtra_T_1, 11, 10) @[primitives.scala 104:33]
    node _notCDom_reduced4SigExtra_reducedVec_5_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 104:54]
    notCDom_reduced4SigExtra_reducedVec[5] <= _notCDom_reduced4SigExtra_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _notCDom_reduced4SigExtra_reducedVec_6_T = bits(_notCDom_reduced4SigExtra_T_1, 12, 12) @[primitives.scala 107:15]
    node _notCDom_reduced4SigExtra_reducedVec_6_T_1 = orr(_notCDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 107:57]
    notCDom_reduced4SigExtra_reducedVec[6] <= _notCDom_reduced4SigExtra_reducedVec_6_T_1 @[primitives.scala 106:38]
    node notCDom_reduced4SigExtra_lo_hi = cat(notCDom_reduced4SigExtra_reducedVec[2], notCDom_reduced4SigExtra_reducedVec[1]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo = cat(notCDom_reduced4SigExtra_lo_hi, notCDom_reduced4SigExtra_reducedVec[0]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_lo = cat(notCDom_reduced4SigExtra_reducedVec[4], notCDom_reduced4SigExtra_reducedVec[3]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_hi = cat(notCDom_reduced4SigExtra_reducedVec[6], notCDom_reduced4SigExtra_reducedVec[5]) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi = cat(notCDom_reduced4SigExtra_hi_hi, notCDom_reduced4SigExtra_hi_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_2 = cat(notCDom_reduced4SigExtra_hi, notCDom_reduced4SigExtra_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_3 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 247:46]
    node _notCDom_reduced4SigExtra_T_4 = not(_notCDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node notCDom_reduced4SigExtra_shift = dshr(asSInt(UInt<17>("h10000")), _notCDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _notCDom_reduced4SigExtra_T_5 = bits(notCDom_reduced4SigExtra_shift, 6, 1) @[primitives.scala 79:22]
    node _notCDom_reduced4SigExtra_T_6 = bits(_notCDom_reduced4SigExtra_T_5, 3, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_7 = bits(_notCDom_reduced4SigExtra_T_6, 1, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_8 = bits(_notCDom_reduced4SigExtra_T_7, 0, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_9 = bits(_notCDom_reduced4SigExtra_T_7, 1, 1) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_10 = cat(_notCDom_reduced4SigExtra_T_8, _notCDom_reduced4SigExtra_T_9) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_11 = bits(_notCDom_reduced4SigExtra_T_6, 3, 2) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_12 = bits(_notCDom_reduced4SigExtra_T_11, 0, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_13 = bits(_notCDom_reduced4SigExtra_T_11, 1, 1) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_14 = cat(_notCDom_reduced4SigExtra_T_12, _notCDom_reduced4SigExtra_T_13) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_15 = cat(_notCDom_reduced4SigExtra_T_10, _notCDom_reduced4SigExtra_T_14) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_16 = bits(_notCDom_reduced4SigExtra_T_5, 5, 4) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_17 = bits(_notCDom_reduced4SigExtra_T_16, 0, 0) @[Bitwise.scala 114:18]
    node _notCDom_reduced4SigExtra_T_18 = bits(_notCDom_reduced4SigExtra_T_16, 1, 1) @[Bitwise.scala 114:47]
    node _notCDom_reduced4SigExtra_T_19 = cat(_notCDom_reduced4SigExtra_T_17, _notCDom_reduced4SigExtra_T_18) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_20 = cat(_notCDom_reduced4SigExtra_T_15, _notCDom_reduced4SigExtra_T_19) @[Cat.scala 33:92]
    node _notCDom_reduced4SigExtra_T_21 = and(_notCDom_reduced4SigExtra_T_2, _notCDom_reduced4SigExtra_T_20) @[MulAddRecFN.scala 246:78]
    node notCDom_reduced4SigExtra = orr(_notCDom_reduced4SigExtra_T_21) @[MulAddRecFN.scala 248:11]
    node _notCDom_sig_T = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 250:28]
    node _notCDom_sig_T_1 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 251:28]
    node _notCDom_sig_T_2 = orr(_notCDom_sig_T_1) @[MulAddRecFN.scala 251:35]
    node _notCDom_sig_T_3 = or(_notCDom_sig_T_2, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 251:39]
    node notCDom_sig = cat(_notCDom_sig_T, _notCDom_sig_T_3) @[Cat.scala 33:92]
    node _notCDom_completeCancellation_T = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 254:21]
    node notCDom_completeCancellation = eq(_notCDom_completeCancellation_T, UInt<1>("h0")) @[MulAddRecFN.scala 254:50]
    node _notCDom_sign_T = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 258:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _notCDom_sign_T) @[MulAddRecFN.scala 256:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 263:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 264:44]
    node _notNaN_addZeros_T = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 266:32]
    node notNaN_addZeros = and(_notNaN_addZeros_T, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 266:58]
    node _io_invalidExc_T = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 271:31]
    node _io_invalidExc_T_1 = or(io.fromPreMul.isSigNaNAny, _io_invalidExc_T) @[MulAddRecFN.scala 270:35]
    node _io_invalidExc_T_2 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 272:32]
    node _io_invalidExc_T_3 = or(_io_invalidExc_T_1, _io_invalidExc_T_2) @[MulAddRecFN.scala 271:57]
    node _io_invalidExc_T_4 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h0")) @[MulAddRecFN.scala 273:10]
    node _io_invalidExc_T_5 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 274:36]
    node _io_invalidExc_T_6 = and(_io_invalidExc_T_4, _io_invalidExc_T_5) @[MulAddRecFN.scala 273:36]
    node _io_invalidExc_T_7 = and(_io_invalidExc_T_6, io.fromPreMul.isInfC) @[MulAddRecFN.scala 274:61]
    node _io_invalidExc_T_8 = and(_io_invalidExc_T_7, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 275:35]
    node _io_invalidExc_T_9 = or(_io_invalidExc_T_3, _io_invalidExc_T_8) @[MulAddRecFN.scala 272:57]
    io.invalidExc <= _io_invalidExc_T_9 @[MulAddRecFN.scala 269:19]
    node _io_rawOut_isNaN_T = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 277:48]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulAddRecFN.scala 277:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 278:21]
    node _io_rawOut_isZero_T = eq(io.fromPreMul.CIsDominant, UInt<1>("h0")) @[MulAddRecFN.scala 282:14]
    node _io_rawOut_isZero_T_1 = and(_io_rawOut_isZero_T, notCDom_completeCancellation) @[MulAddRecFN.scala 282:42]
    node _io_rawOut_isZero_T_2 = or(notNaN_addZeros, _io_rawOut_isZero_T_1) @[MulAddRecFN.scala 281:25]
    io.rawOut.isZero <= _io_rawOut_isZero_T_2 @[MulAddRecFN.scala 280:22]
    node _io_rawOut_sign_T = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 284:27]
    node _io_rawOut_sign_T_1 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 285:31]
    node _io_rawOut_sign_T_2 = or(_io_rawOut_sign_T, _io_rawOut_sign_T_1) @[MulAddRecFN.scala 284:54]
    node _io_rawOut_sign_T_3 = eq(roundingMode_min, UInt<1>("h0")) @[MulAddRecFN.scala 286:29]
    node _io_rawOut_sign_T_4 = and(notNaN_addZeros, _io_rawOut_sign_T_3) @[MulAddRecFN.scala 286:26]
    node _io_rawOut_sign_T_5 = and(_io_rawOut_sign_T_4, io.fromPreMul.signProd) @[MulAddRecFN.scala 286:48]
    node _io_rawOut_sign_T_6 = and(_io_rawOut_sign_T_5, CDom_sign) @[MulAddRecFN.scala 287:36]
    node _io_rawOut_sign_T_7 = or(_io_rawOut_sign_T_2, _io_rawOut_sign_T_6) @[MulAddRecFN.scala 285:43]
    node _io_rawOut_sign_T_8 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 288:26]
    node _io_rawOut_sign_T_9 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 289:37]
    node _io_rawOut_sign_T_10 = and(_io_rawOut_sign_T_8, _io_rawOut_sign_T_9) @[MulAddRecFN.scala 288:46]
    node _io_rawOut_sign_T_11 = or(_io_rawOut_sign_T_7, _io_rawOut_sign_T_10) @[MulAddRecFN.scala 287:48]
    node _io_rawOut_sign_T_12 = eq(notNaN_isInfOut, UInt<1>("h0")) @[MulAddRecFN.scala 290:10]
    node _io_rawOut_sign_T_13 = eq(notNaN_addZeros, UInt<1>("h0")) @[MulAddRecFN.scala 290:31]
    node _io_rawOut_sign_T_14 = and(_io_rawOut_sign_T_12, _io_rawOut_sign_T_13) @[MulAddRecFN.scala 290:28]
    node _io_rawOut_sign_T_15 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 291:17]
    node _io_rawOut_sign_T_16 = and(_io_rawOut_sign_T_14, _io_rawOut_sign_T_15) @[MulAddRecFN.scala 290:49]
    node _io_rawOut_sign_T_17 = or(_io_rawOut_sign_T_11, _io_rawOut_sign_T_16) @[MulAddRecFN.scala 289:50]
    io.rawOut.sign <= _io_rawOut_sign_T_17 @[MulAddRecFN.scala 283:20]
    node _io_rawOut_sExp_T = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 292:26]
    io.rawOut.sExp <= _io_rawOut_sExp_T @[MulAddRecFN.scala 292:20]
    node _io_rawOut_sig_T = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 293:25]
    io.rawOut.sig <= _io_rawOut_sig_T @[MulAddRecFN.scala 293:19]

  module RecFNToIN_1 :
    output io : { flip in : UInt<65>, flip roundingMode : UInt<3>, flip signedOut : UInt<1>, out : UInt<32>, intExceptionFlags : UInt<3>}

    io is invalid
    node rawIn_exp = bits(io.in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawIn_out_isNaN_T_1 = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawIn.isNaN <= _rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawIn_out_isInf_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawIn_out_isInf_T_1 = eq(_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawIn_out_isInf_T_2 = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawIn.isInf <= _rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawIn.isZero <= rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawIn_out_sign_T = bits(io.in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawIn.sign <= _rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawIn_out_sExp_T = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    rawIn.sExp <= _rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawIn_out_sig_T = eq(rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawIn_out_sig_T_1 = bits(io.in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h0"), _rawIn_out_sig_T) @[Cat.scala 33:92]
    node _rawIn_out_sig_T_2 = cat(rawIn_out_sig_hi, _rawIn_out_sig_T_1) @[Cat.scala 33:92]
    rawIn.sig <= _rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node magGeOne = bits(rawIn.sExp, 11, 11) @[RecFNToIN.scala 58:30]
    node posExp = bits(rawIn.sExp, 10, 0) @[RecFNToIN.scala 59:28]
    node _magJustBelowOne_T = eq(magGeOne, UInt<1>("h0")) @[RecFNToIN.scala 60:27]
    node _magJustBelowOne_T_1 = andr(posExp) @[RecFNToIN.scala 60:47]
    node magJustBelowOne = and(_magJustBelowOne_T, _magJustBelowOne_T_1) @[RecFNToIN.scala 60:37]
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RecFNToIN.scala 64:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RecFNToIN.scala 65:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RecFNToIN.scala 66:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RecFNToIN.scala 67:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RecFNToIN.scala 68:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RecFNToIN.scala 69:53]
    node _shiftedSig_T = bits(rawIn.sig, 51, 0) @[RecFNToIN.scala 80:32]
    node _shiftedSig_T_1 = cat(magGeOne, _shiftedSig_T) @[Cat.scala 33:92]
    node _shiftedSig_T_2 = bits(rawIn.sExp, 4, 0) @[RecFNToIN.scala 82:27]
    node _shiftedSig_T_3 = mux(magGeOne, _shiftedSig_T_2, UInt<1>("h0")) @[RecFNToIN.scala 81:16]
    node shiftedSig = dshl(_shiftedSig_T_1, _shiftedSig_T_3) @[RecFNToIN.scala 80:50]
    node _alignedSig_T = shr(shiftedSig, 51) @[RecFNToIN.scala 86:23]
    node _alignedSig_T_1 = bits(shiftedSig, 50, 0) @[RecFNToIN.scala 86:51]
    node _alignedSig_T_2 = orr(_alignedSig_T_1) @[RecFNToIN.scala 86:69]
    node alignedSig = cat(_alignedSig_T, _alignedSig_T_2) @[Cat.scala 33:92]
    node _unroundedInt_T = shr(alignedSig, 2) @[RecFNToIN.scala 87:54]
    node unroundedInt = or(UInt<32>("h0"), _unroundedInt_T) @[RecFNToIN.scala 87:42]
    node _common_inexact_T = bits(alignedSig, 1, 0) @[RecFNToIN.scala 89:50]
    node _common_inexact_T_1 = orr(_common_inexact_T) @[RecFNToIN.scala 89:57]
    node _common_inexact_T_2 = eq(rawIn.isZero, UInt<1>("h0")) @[RecFNToIN.scala 89:62]
    node common_inexact = mux(magGeOne, _common_inexact_T_1, _common_inexact_T_2) @[RecFNToIN.scala 89:29]
    node _roundIncr_near_even_T = bits(alignedSig, 2, 1) @[RecFNToIN.scala 91:39]
    node _roundIncr_near_even_T_1 = andr(_roundIncr_near_even_T) @[RecFNToIN.scala 91:46]
    node _roundIncr_near_even_T_2 = bits(alignedSig, 1, 0) @[RecFNToIN.scala 91:64]
    node _roundIncr_near_even_T_3 = andr(_roundIncr_near_even_T_2) @[RecFNToIN.scala 91:71]
    node _roundIncr_near_even_T_4 = or(_roundIncr_near_even_T_1, _roundIncr_near_even_T_3) @[RecFNToIN.scala 91:51]
    node _roundIncr_near_even_T_5 = and(magGeOne, _roundIncr_near_even_T_4) @[RecFNToIN.scala 91:25]
    node _roundIncr_near_even_T_6 = bits(alignedSig, 1, 0) @[RecFNToIN.scala 92:39]
    node _roundIncr_near_even_T_7 = orr(_roundIncr_near_even_T_6) @[RecFNToIN.scala 92:46]
    node _roundIncr_near_even_T_8 = and(magJustBelowOne, _roundIncr_near_even_T_7) @[RecFNToIN.scala 92:26]
    node roundIncr_near_even = or(_roundIncr_near_even_T_5, _roundIncr_near_even_T_8) @[RecFNToIN.scala 91:78]
    node _roundIncr_near_maxMag_T = bits(alignedSig, 1, 1) @[RecFNToIN.scala 93:56]
    node _roundIncr_near_maxMag_T_1 = and(magGeOne, _roundIncr_near_maxMag_T) @[RecFNToIN.scala 93:43]
    node roundIncr_near_maxMag = or(_roundIncr_near_maxMag_T_1, magJustBelowOne) @[RecFNToIN.scala 93:61]
    node _roundIncr_T = and(roundingMode_near_even, roundIncr_near_even) @[RecFNToIN.scala 95:35]
    node _roundIncr_T_1 = and(roundingMode_near_maxMag, roundIncr_near_maxMag) @[RecFNToIN.scala 96:35]
    node _roundIncr_T_2 = or(_roundIncr_T, _roundIncr_T_1) @[RecFNToIN.scala 95:61]
    node _roundIncr_T_3 = or(roundingMode_min, roundingMode_odd) @[RecFNToIN.scala 97:28]
    node _roundIncr_T_4 = and(rawIn.sign, common_inexact) @[RecFNToIN.scala 98:26]
    node _roundIncr_T_5 = and(_roundIncr_T_3, _roundIncr_T_4) @[RecFNToIN.scala 97:49]
    node _roundIncr_T_6 = or(_roundIncr_T_2, _roundIncr_T_5) @[RecFNToIN.scala 96:61]
    node _roundIncr_T_7 = eq(rawIn.sign, UInt<1>("h0")) @[RecFNToIN.scala 99:31]
    node _roundIncr_T_8 = and(_roundIncr_T_7, common_inexact) @[RecFNToIN.scala 99:43]
    node _roundIncr_T_9 = and(roundingMode_max, _roundIncr_T_8) @[RecFNToIN.scala 99:27]
    node roundIncr = or(_roundIncr_T_6, _roundIncr_T_9) @[RecFNToIN.scala 98:46]
    node _complUnroundedInt_T = not(unroundedInt) @[RecFNToIN.scala 100:45]
    node complUnroundedInt = mux(rawIn.sign, _complUnroundedInt_T, unroundedInt) @[RecFNToIN.scala 100:32]
    node _roundedInt_T = xor(roundIncr, rawIn.sign) @[RecFNToIN.scala 102:23]
    node _roundedInt_T_1 = add(complUnroundedInt, UInt<1>("h1")) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_2 = tail(_roundedInt_T_1, 1) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_3 = mux(_roundedInt_T, _roundedInt_T_2, complUnroundedInt) @[RecFNToIN.scala 102:12]
    node _roundedInt_T_4 = and(roundingMode_odd, common_inexact) @[RecFNToIN.scala 105:31]
    node roundedInt = or(_roundedInt_T_3, _roundedInt_T_4) @[RecFNToIN.scala 105:11]
    node magGeOne_atOverflowEdge = eq(posExp, UInt<5>("h1f")) @[RecFNToIN.scala 107:43]
    node _roundCarryBut2_T = bits(unroundedInt, 29, 0) @[RecFNToIN.scala 110:38]
    node _roundCarryBut2_T_1 = andr(_roundCarryBut2_T) @[RecFNToIN.scala 110:56]
    node roundCarryBut2 = and(_roundCarryBut2_T_1, roundIncr) @[RecFNToIN.scala 110:61]
    node _common_overflow_T = geq(posExp, UInt<6>("h20")) @[RecFNToIN.scala 113:21]
    node _common_overflow_T_1 = bits(unroundedInt, 30, 0) @[RecFNToIN.scala 117:42]
    node _common_overflow_T_2 = orr(_common_overflow_T_1) @[RecFNToIN.scala 117:60]
    node _common_overflow_T_3 = or(_common_overflow_T_2, roundIncr) @[RecFNToIN.scala 117:64]
    node _common_overflow_T_4 = and(magGeOne_atOverflowEdge, _common_overflow_T_3) @[RecFNToIN.scala 116:49]
    node _common_overflow_T_5 = eq(posExp, UInt<5>("h1e")) @[RecFNToIN.scala 119:38]
    node _common_overflow_T_6 = and(_common_overflow_T_5, roundCarryBut2) @[RecFNToIN.scala 119:62]
    node _common_overflow_T_7 = or(magGeOne_atOverflowEdge, _common_overflow_T_6) @[RecFNToIN.scala 118:49]
    node _common_overflow_T_8 = mux(rawIn.sign, _common_overflow_T_4, _common_overflow_T_7) @[RecFNToIN.scala 115:24]
    node _common_overflow_T_9 = bits(unroundedInt, 30, 30) @[RecFNToIN.scala 123:42]
    node _common_overflow_T_10 = and(magGeOne_atOverflowEdge, _common_overflow_T_9) @[RecFNToIN.scala 122:50]
    node _common_overflow_T_11 = and(_common_overflow_T_10, roundCarryBut2) @[RecFNToIN.scala 123:57]
    node _common_overflow_T_12 = or(rawIn.sign, _common_overflow_T_11) @[RecFNToIN.scala 121:32]
    node _common_overflow_T_13 = mux(io.signedOut, _common_overflow_T_8, _common_overflow_T_12) @[RecFNToIN.scala 114:20]
    node _common_overflow_T_14 = or(_common_overflow_T, _common_overflow_T_13) @[RecFNToIN.scala 113:40]
    node _common_overflow_T_15 = eq(io.signedOut, UInt<1>("h0")) @[RecFNToIN.scala 125:13]
    node _common_overflow_T_16 = and(_common_overflow_T_15, rawIn.sign) @[RecFNToIN.scala 125:27]
    node _common_overflow_T_17 = and(_common_overflow_T_16, roundIncr) @[RecFNToIN.scala 125:41]
    node common_overflow = mux(magGeOne, _common_overflow_T_14, _common_overflow_T_17) @[RecFNToIN.scala 112:12]
    node invalidExc = or(rawIn.isNaN, rawIn.isInf) @[RecFNToIN.scala 130:34]
    node _overflow_T = eq(invalidExc, UInt<1>("h0")) @[RecFNToIN.scala 131:20]
    node overflow = and(_overflow_T, common_overflow) @[RecFNToIN.scala 131:32]
    node _inexact_T = eq(invalidExc, UInt<1>("h0")) @[RecFNToIN.scala 132:20]
    node _inexact_T_1 = eq(common_overflow, UInt<1>("h0")) @[RecFNToIN.scala 132:35]
    node _inexact_T_2 = and(_inexact_T, _inexact_T_1) @[RecFNToIN.scala 132:32]
    node inexact = and(_inexact_T_2, common_inexact) @[RecFNToIN.scala 132:52]
    node _excSign_T = eq(rawIn.isNaN, UInt<1>("h0")) @[RecFNToIN.scala 134:19]
    node excSign = and(_excSign_T, rawIn.sign) @[RecFNToIN.scala 134:32]
    node _excOut_T = eq(io.signedOut, excSign) @[RecFNToIN.scala 136:27]
    node _excOut_T_1 = mux(_excOut_T, UInt<32>("h80000000"), UInt<1>("h0")) @[RecFNToIN.scala 136:12]
    node _excOut_T_2 = eq(excSign, UInt<1>("h0")) @[RecFNToIN.scala 140:13]
    node _excOut_T_3 = mux(_excOut_T_2, UInt<31>("h7fffffff"), UInt<1>("h0")) @[RecFNToIN.scala 140:12]
    node excOut = or(_excOut_T_1, _excOut_T_3) @[RecFNToIN.scala 139:11]
    node _io_out_T = or(invalidExc, common_overflow) @[RecFNToIN.scala 142:30]
    node _io_out_T_1 = mux(_io_out_T, excOut, roundedInt) @[RecFNToIN.scala 142:18]
    io.out <= _io_out_T_1 @[RecFNToIN.scala 142:12]
    node io_intExceptionFlags_hi = cat(invalidExc, overflow) @[Cat.scala 33:92]
    node _io_intExceptionFlags_T = cat(io_intExceptionFlags_hi, inexact) @[Cat.scala 33:92]
    io.intExceptionFlags <= _io_intExceptionFlags_T @[RecFNToIN.scala 143:26]

  module MulAddRecFNToRaw_preMul_1 :
    output io : { flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}

    io is invalid
    node rawA_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawA_isZero_T = bits(rawA_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawA_isZero = eq(_rawA_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawA_isSpecial_T = bits(rawA_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawA_isSpecial = eq(_rawA_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawA_out_isNaN_T = bits(rawA_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _rawA_out_isNaN_T_1 = and(rawA_isSpecial, _rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _rawA_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawA_out_isInf_T = bits(rawA_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _rawA_out_isInf_T_1 = eq(_rawA_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawA_out_isInf_T_2 = and(rawA_isSpecial, _rawA_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _rawA_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= rawA_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawA_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _rawA_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawA_out_sExp_T = cvt(rawA_exp) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _rawA_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawA_out_sig_T = eq(rawA_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawA_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawA_out_sig_hi = cat(UInt<1>("h0"), _rawA_out_sig_T) @[Cat.scala 33:92]
    node _rawA_out_sig_T_2 = cat(rawA_out_sig_hi, _rawA_out_sig_T_1) @[Cat.scala 33:92]
    rawA.sig <= _rawA_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node rawB_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawB_isZero_T = bits(rawB_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawB_isZero = eq(_rawB_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawB_isSpecial_T = bits(rawB_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawB_isSpecial = eq(_rawB_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawB_out_isNaN_T = bits(rawB_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _rawB_out_isNaN_T_1 = and(rawB_isSpecial, _rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _rawB_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawB_out_isInf_T = bits(rawB_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _rawB_out_isInf_T_1 = eq(_rawB_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawB_out_isInf_T_2 = and(rawB_isSpecial, _rawB_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _rawB_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= rawB_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawB_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _rawB_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawB_out_sExp_T = cvt(rawB_exp) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _rawB_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawB_out_sig_T = eq(rawB_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawB_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawB_out_sig_hi = cat(UInt<1>("h0"), _rawB_out_sig_T) @[Cat.scala 33:92]
    node _rawB_out_sig_T_2 = cat(rawB_out_sig_hi, _rawB_out_sig_T_1) @[Cat.scala 33:92]
    rawB.sig <= _rawB_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node rawC_exp = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawC_isZero_T = bits(rawC_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawC_isZero = eq(_rawC_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawC_isSpecial_T = bits(rawC_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawC_isSpecial = eq(_rawC_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawC_out_isNaN_T = bits(rawC_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _rawC_out_isNaN_T_1 = and(rawC_isSpecial, _rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _rawC_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawC_out_isInf_T = bits(rawC_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _rawC_out_isInf_T_1 = eq(_rawC_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawC_out_isInf_T_2 = and(rawC_isSpecial, _rawC_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _rawC_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= rawC_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawC_out_sign_T = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _rawC_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawC_out_sExp_T = cvt(rawC_exp) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _rawC_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawC_out_sig_T = eq(rawC_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawC_out_sig_T_1 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawC_out_sig_hi = cat(UInt<1>("h0"), _rawC_out_sig_T) @[Cat.scala 33:92]
    node _rawC_out_sig_T_2 = cat(rawC_out_sig_hi, _rawC_out_sig_T_1) @[Cat.scala 33:92]
    rawC.sig <= _rawC_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node _signProd_T = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 95:30]
    node _signProd_T_1 = bits(io.op, 1, 1) @[MulAddRecFN.scala 95:49]
    node signProd = xor(_signProd_T, _signProd_T_1) @[MulAddRecFN.scala 95:42]
    node _sExpAlignedProd_T = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 98:19]
    node _sExpAlignedProd_T_1 = add(_sExpAlignedProd_T, asSInt(UInt<9>("h11b"))) @[MulAddRecFN.scala 98:32]
    node _sExpAlignedProd_T_2 = tail(_sExpAlignedProd_T_1, 1) @[MulAddRecFN.scala 98:32]
    node sExpAlignedProd = asSInt(_sExpAlignedProd_T_2) @[MulAddRecFN.scala 98:32]
    node _doSubMags_T = xor(signProd, rawC.sign) @[MulAddRecFN.scala 100:30]
    node _doSubMags_T_1 = bits(io.op, 0, 0) @[MulAddRecFN.scala 100:49]
    node doSubMags = xor(_doSubMags_T, _doSubMags_T_1) @[MulAddRecFN.scala 100:42]
    node _sNatCAlignDist_T = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 104:42]
    node _sNatCAlignDist_T_1 = tail(_sNatCAlignDist_T, 1) @[MulAddRecFN.scala 104:42]
    node sNatCAlignDist = asSInt(_sNatCAlignDist_T_1) @[MulAddRecFN.scala 104:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 105:42]
    node _isMinCAlign_T = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 106:35]
    node _isMinCAlign_T_1 = lt(sNatCAlignDist, asSInt(UInt<1>("h0"))) @[MulAddRecFN.scala 106:69]
    node isMinCAlign = or(_isMinCAlign_T, _isMinCAlign_T_1) @[MulAddRecFN.scala 106:50]
    node _CIsDominant_T = eq(rawC.isZero, UInt<1>("h0")) @[MulAddRecFN.scala 108:9]
    node _CIsDominant_T_1 = leq(posNatCAlignDist, UInt<5>("h18")) @[MulAddRecFN.scala 108:60]
    node _CIsDominant_T_2 = or(isMinCAlign, _CIsDominant_T_1) @[MulAddRecFN.scala 108:39]
    node CIsDominant = and(_CIsDominant_T, _CIsDominant_T_2) @[MulAddRecFN.scala 108:23]
    node _CAlignDist_T = lt(posNatCAlignDist, UInt<7>("h4a")) @[MulAddRecFN.scala 112:34]
    node _CAlignDist_T_1 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 113:33]
    node _CAlignDist_T_2 = mux(_CAlignDist_T, _CAlignDist_T_1, UInt<7>("h4a")) @[MulAddRecFN.scala 112:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h0"), _CAlignDist_T_2) @[MulAddRecFN.scala 110:12]
    node _mainAlignedSigC_T = not(rawC.sig) @[MulAddRecFN.scala 118:28]
    node _mainAlignedSigC_T_1 = mux(doSubMags, _mainAlignedSigC_T, rawC.sig) @[MulAddRecFN.scala 118:16]
    node _mainAlignedSigC_T_2 = bits(doSubMags, 0, 0) @[Bitwise.scala 77:15]
    node _mainAlignedSigC_T_3 = mux(_mainAlignedSigC_T_2, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
    node _mainAlignedSigC_T_4 = cat(_mainAlignedSigC_T_1, _mainAlignedSigC_T_3) @[Cat.scala 33:92]
    node _mainAlignedSigC_T_5 = asSInt(_mainAlignedSigC_T_4) @[MulAddRecFN.scala 120:11]
    node mainAlignedSigC = dshr(_mainAlignedSigC_T_5, CAlignDist) @[MulAddRecFN.scala 120:17]
    node _reduced4CExtra_T = shl(rawC.sig, 2) @[MulAddRecFN.scala 122:30]
    wire reduced4CExtra_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    reduced4CExtra_reducedVec is invalid @[primitives.scala 119:30]
    node _reduced4CExtra_reducedVec_0_T = bits(_reduced4CExtra_T, 3, 0) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_0_T_1 = orr(_reduced4CExtra_reducedVec_0_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[0] <= _reduced4CExtra_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_1_T = bits(_reduced4CExtra_T, 7, 4) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_1_T_1 = orr(_reduced4CExtra_reducedVec_1_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[1] <= _reduced4CExtra_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_2_T = bits(_reduced4CExtra_T, 11, 8) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_2_T_1 = orr(_reduced4CExtra_reducedVec_2_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[2] <= _reduced4CExtra_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_3_T = bits(_reduced4CExtra_T, 15, 12) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_3_T_1 = orr(_reduced4CExtra_reducedVec_3_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[3] <= _reduced4CExtra_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_4_T = bits(_reduced4CExtra_T, 19, 16) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_4_T_1 = orr(_reduced4CExtra_reducedVec_4_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[4] <= _reduced4CExtra_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_5_T = bits(_reduced4CExtra_T, 23, 20) @[primitives.scala 121:33]
    node _reduced4CExtra_reducedVec_5_T_1 = orr(_reduced4CExtra_reducedVec_5_T) @[primitives.scala 121:54]
    reduced4CExtra_reducedVec[5] <= _reduced4CExtra_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _reduced4CExtra_reducedVec_6_T = bits(_reduced4CExtra_T, 26, 24) @[primitives.scala 124:15]
    node _reduced4CExtra_reducedVec_6_T_1 = orr(_reduced4CExtra_reducedVec_6_T) @[primitives.scala 124:57]
    reduced4CExtra_reducedVec[6] <= _reduced4CExtra_reducedVec_6_T_1 @[primitives.scala 123:38]
    node reduced4CExtra_lo_hi = cat(reduced4CExtra_reducedVec[2], reduced4CExtra_reducedVec[1]) @[primitives.scala 125:20]
    node reduced4CExtra_lo = cat(reduced4CExtra_lo_hi, reduced4CExtra_reducedVec[0]) @[primitives.scala 125:20]
    node reduced4CExtra_hi_lo = cat(reduced4CExtra_reducedVec[4], reduced4CExtra_reducedVec[3]) @[primitives.scala 125:20]
    node reduced4CExtra_hi_hi = cat(reduced4CExtra_reducedVec[6], reduced4CExtra_reducedVec[5]) @[primitives.scala 125:20]
    node reduced4CExtra_hi = cat(reduced4CExtra_hi_hi, reduced4CExtra_hi_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_1 = cat(reduced4CExtra_hi, reduced4CExtra_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_2 = shr(CAlignDist, 2) @[MulAddRecFN.scala 124:28]
    node reduced4CExtra_shift = dshr(asSInt(UInt<33>("h100000000")), _reduced4CExtra_T_2) @[primitives.scala 77:58]
    node _reduced4CExtra_T_3 = bits(reduced4CExtra_shift, 19, 14) @[primitives.scala 79:22]
    node _reduced4CExtra_T_4 = bits(_reduced4CExtra_T_3, 3, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_5 = bits(_reduced4CExtra_T_4, 1, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_6 = bits(_reduced4CExtra_T_5, 0, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_7 = bits(_reduced4CExtra_T_5, 1, 1) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_8 = cat(_reduced4CExtra_T_6, _reduced4CExtra_T_7) @[Cat.scala 33:92]
    node _reduced4CExtra_T_9 = bits(_reduced4CExtra_T_4, 3, 2) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_10 = bits(_reduced4CExtra_T_9, 0, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_11 = bits(_reduced4CExtra_T_9, 1, 1) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_12 = cat(_reduced4CExtra_T_10, _reduced4CExtra_T_11) @[Cat.scala 33:92]
    node _reduced4CExtra_T_13 = cat(_reduced4CExtra_T_8, _reduced4CExtra_T_12) @[Cat.scala 33:92]
    node _reduced4CExtra_T_14 = bits(_reduced4CExtra_T_3, 5, 4) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_15 = bits(_reduced4CExtra_T_14, 0, 0) @[Bitwise.scala 114:18]
    node _reduced4CExtra_T_16 = bits(_reduced4CExtra_T_14, 1, 1) @[Bitwise.scala 114:47]
    node _reduced4CExtra_T_17 = cat(_reduced4CExtra_T_15, _reduced4CExtra_T_16) @[Cat.scala 33:92]
    node _reduced4CExtra_T_18 = cat(_reduced4CExtra_T_13, _reduced4CExtra_T_17) @[Cat.scala 33:92]
    node _reduced4CExtra_T_19 = and(_reduced4CExtra_T_1, _reduced4CExtra_T_18) @[MulAddRecFN.scala 122:68]
    node reduced4CExtra = orr(_reduced4CExtra_T_19) @[MulAddRecFN.scala 130:11]
    node _alignedSigC_T = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 132:28]
    node _alignedSigC_T_1 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 134:32]
    node _alignedSigC_T_2 = andr(_alignedSigC_T_1) @[MulAddRecFN.scala 134:39]
    node _alignedSigC_T_3 = eq(reduced4CExtra, UInt<1>("h0")) @[MulAddRecFN.scala 134:47]
    node _alignedSigC_T_4 = and(_alignedSigC_T_2, _alignedSigC_T_3) @[MulAddRecFN.scala 134:44]
    node _alignedSigC_T_5 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 135:32]
    node _alignedSigC_T_6 = orr(_alignedSigC_T_5) @[MulAddRecFN.scala 135:39]
    node _alignedSigC_T_7 = or(_alignedSigC_T_6, reduced4CExtra) @[MulAddRecFN.scala 135:44]
    node _alignedSigC_T_8 = mux(doSubMags, _alignedSigC_T_4, _alignedSigC_T_7) @[MulAddRecFN.scala 133:16]
    node alignedSigC_hi = asUInt(_alignedSigC_T) @[Cat.scala 33:92]
    node alignedSigC = cat(alignedSigC_hi, _alignedSigC_T_8) @[Cat.scala 33:92]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 141:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 142:16]
    node _io_mulAddC_T = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 143:30]
    io.mulAddC <= _io_mulAddC_T @[MulAddRecFN.scala 143:16]
    node _io_toPostMul_isSigNaNAny_T = bits(rawA.sig, 22, 22) @[common.scala 82:56]
    node _io_toPostMul_isSigNaNAny_T_1 = eq(_io_toPostMul_isSigNaNAny_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_toPostMul_isSigNaNAny_T_2 = and(rawA.isNaN, _io_toPostMul_isSigNaNAny_T_1) @[common.scala 82:46]
    node _io_toPostMul_isSigNaNAny_T_3 = bits(rawB.sig, 22, 22) @[common.scala 82:56]
    node _io_toPostMul_isSigNaNAny_T_4 = eq(_io_toPostMul_isSigNaNAny_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_toPostMul_isSigNaNAny_T_5 = and(rawB.isNaN, _io_toPostMul_isSigNaNAny_T_4) @[common.scala 82:46]
    node _io_toPostMul_isSigNaNAny_T_6 = or(_io_toPostMul_isSigNaNAny_T_2, _io_toPostMul_isSigNaNAny_T_5) @[MulAddRecFN.scala 146:32]
    node _io_toPostMul_isSigNaNAny_T_7 = bits(rawC.sig, 22, 22) @[common.scala 82:56]
    node _io_toPostMul_isSigNaNAny_T_8 = eq(_io_toPostMul_isSigNaNAny_T_7, UInt<1>("h0")) @[common.scala 82:49]
    node _io_toPostMul_isSigNaNAny_T_9 = and(rawC.isNaN, _io_toPostMul_isSigNaNAny_T_8) @[common.scala 82:46]
    node _io_toPostMul_isSigNaNAny_T_10 = or(_io_toPostMul_isSigNaNAny_T_6, _io_toPostMul_isSigNaNAny_T_9) @[MulAddRecFN.scala 146:58]
    io.toPostMul.isSigNaNAny <= _io_toPostMul_isSigNaNAny_T_10 @[MulAddRecFN.scala 145:30]
    node _io_toPostMul_isNaNAOrB_T = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 148:42]
    io.toPostMul.isNaNAOrB <= _io_toPostMul_isNaNAOrB_T @[MulAddRecFN.scala 148:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 149:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 150:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 151:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 152:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 153:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 154:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 155:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 156:28]
    node _io_toPostMul_sExpSum_T = sub(sExpAlignedProd, asSInt(UInt<6>("h18"))) @[MulAddRecFN.scala 158:53]
    node _io_toPostMul_sExpSum_T_1 = tail(_io_toPostMul_sExpSum_T, 1) @[MulAddRecFN.scala 158:53]
    node _io_toPostMul_sExpSum_T_2 = asSInt(_io_toPostMul_sExpSum_T_1) @[MulAddRecFN.scala 158:53]
    node _io_toPostMul_sExpSum_T_3 = mux(CIsDominant, rawC.sExp, _io_toPostMul_sExpSum_T_2) @[MulAddRecFN.scala 158:12]
    io.toPostMul.sExpSum <= _io_toPostMul_sExpSum_T_3 @[MulAddRecFN.scala 157:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 159:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 160:30]
    node _io_toPostMul_CDom_CAlignDist_T = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 161:47]
    io.toPostMul.CDom_CAlignDist <= _io_toPostMul_CDom_CAlignDist_T @[MulAddRecFN.scala 161:34]
    node _io_toPostMul_highAlignedSigC_T = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 163:20]
    io.toPostMul.highAlignedSigC <= _io_toPostMul_highAlignedSigC_T @[MulAddRecFN.scala 162:34]
    node _io_toPostMul_bit0AlignedSigC_T = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 164:48]
    io.toPostMul.bit0AlignedSigC <= _io_toPostMul_bit0AlignedSigC_T @[MulAddRecFN.scala 164:34]

  module FPUFMAPipe_1 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : { valid : UInt<1>, bits : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}}, out : { valid : UInt<1>, bits : { data : UInt<65>, exc : UInt<5>}}}

    clock is invalid
    reset is invalid
    io is invalid
    reg valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid) @[FPU.scala 699:18]
    valid <= io.in.valid @[FPU.scala 699:18]
    reg in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, clock with :
      reset => (UInt<1>("h0"), in) @[FPU.scala 700:15]
    when io.in.valid : @[FPU.scala 701:22]
      node one = shl(UInt<1>("h1"), 31) @[FPU.scala 702:23]
      node _zero_T = xor(io.in.bits.in1, io.in.bits.in2) @[FPU.scala 703:32]
      node _zero_T_1 = shl(UInt<1>("h1"), 32) @[FPU.scala 703:61]
      node zero = and(_zero_T, _zero_T_1) @[FPU.scala 703:50]
      in <- io.in.bits @[FPU.scala 706:8]
      when io.in.bits.swap23 : @[FPU.scala 707:23]
        in.in2 <= one @[FPU.scala 707:32]
      node _T = or(io.in.bits.ren3, io.in.bits.swap23) @[FPU.scala 708:21]
      node _T_1 = eq(_T, UInt<1>("h0")) @[FPU.scala 708:11]
      when _T_1 : @[FPU.scala 708:37]
        in.in3 <= zero @[FPU.scala 708:46]
    inst fma of MulAddRecFNPipe_1 @[FPU.scala 711:19]
    fma.clock is invalid
    fma.reset is invalid
    fma.io is invalid
    fma.clock <= clock
    fma.reset <= reset
    fma.io.validin <= valid @[FPU.scala 712:18]
    fma.io.op <= in.fmaCmd @[FPU.scala 713:13]
    fma.io.roundingMode <= in.rm @[FPU.scala 714:23]
    fma.io.detectTininess <= UInt<1>("h1") @[FPU.scala 715:25]
    fma.io.a <= in.in1 @[FPU.scala 716:12]
    fma.io.b <= in.in2 @[FPU.scala 717:12]
    fma.io.c <= in.in3 @[FPU.scala 718:12]
    wire res : { data : UInt<65>, exc : UInt<5>} @[FPU.scala 720:17]
    res is invalid @[FPU.scala 720:17]
    res.data <= fma.io.out @[FPU.scala 721:12]
    res.exc <= fma.io.exceptionFlags @[FPU.scala 722:11]
    reg io_out_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    io_out_v <= fma.io.validout @[Valid.scala 130:22]
    reg io_out_b : { data : UInt<65>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), io_out_b) @[Reg.scala 19:16]
    when fma.io.validout : @[Reg.scala 20:18]
      io_out_b <= res @[Reg.scala 20:22]
    wire io_out_out : { valid : UInt<1>, bits : { data : UInt<65>, exc : UInt<5>}} @[Valid.scala 125:21]
    io_out_out is invalid @[Valid.scala 125:21]
    io_out_out.valid <= io_out_v @[Valid.scala 126:17]
    io_out_out.bits <- io_out_b @[Valid.scala 127:16]
    io.out <- io_out_out @[FPU.scala 724:10]

  module RecFNToRecFN :
    output io : { flip in : UInt<65>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node rawIn_exp = bits(io.in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _rawIn_out_isNaN_T_1 = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawIn.isNaN <= _rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawIn_out_isInf_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _rawIn_out_isInf_T_1 = eq(_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _rawIn_out_isInf_T_2 = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawIn.isInf <= _rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawIn.isZero <= rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawIn_out_sign_T = bits(io.in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawIn.sign <= _rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawIn_out_sExp_T = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    rawIn.sExp <= _rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _rawIn_out_sig_T = eq(rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _rawIn_out_sig_T_1 = bits(io.in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h0"), _rawIn_out_sig_T) @[Cat.scala 33:92]
    node _rawIn_out_sig_T_2 = cat(rawIn_out_sig_hi, _rawIn_out_sig_T_1) @[Cat.scala 33:92]
    rawIn.sig <= _rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_4 @[RecFNToRecFN.scala 72:19]
    roundAnyRawFNToRecFN.io is invalid
    node _roundAnyRawFNToRecFN_io_invalidExc_T = bits(rawIn.sig, 51, 51) @[common.scala 82:56]
    node _roundAnyRawFNToRecFN_io_invalidExc_T_1 = eq(_roundAnyRawFNToRecFN_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _roundAnyRawFNToRecFN_io_invalidExc_T_2 = and(rawIn.isNaN, _roundAnyRawFNToRecFN_io_invalidExc_T_1) @[common.scala 82:46]
    roundAnyRawFNToRecFN.io.invalidExc <= _roundAnyRawFNToRecFN_io_invalidExc_T_2 @[RecFNToRecFN.scala 80:48]
    roundAnyRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[RecFNToRecFN.scala 81:48]
    roundAnyRawFNToRecFN.io.in <- rawIn @[RecFNToRecFN.scala 82:48]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RecFNToRecFN.scala 83:48]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RecFNToRecFN.scala 84:48]
    io.out <= roundAnyRawFNToRecFN.io.out @[RecFNToRecFN.scala 85:27]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RecFNToRecFN.scala 86:27]

  module FPU :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip req : { valid : UInt<1>, bits : { uop : { uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : { br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<16>, br_tag : UInt<4>, ftq_idx : UInt<5>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<7>, ldq_idx : UInt<5>, stq_idx : UInt<5>, rxq_idx : UInt<2>, pdst : UInt<7>, prs1 : UInt<7>, prs2 : UInt<7>, prs3 : UInt<7>, ppred : UInt<5>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<7>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, rs1_data : UInt<65>, rs2_data : UInt<65>, rs3_data : UInt<65>, fcsr_rm : UInt<3>}}, resp : { valid : UInt<1>, bits : { uop : { uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : { br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<16>, br_tag : UInt<4>, ftq_idx : UInt<5>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<7>, ldq_idx : UInt<5>, stq_idx : UInt<5>, rxq_idx : UInt<2>, pdst : UInt<7>, prs1 : UInt<7>, prs2 : UInt<7>, prs3 : UInt<7>, ppred : UInt<5>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<7>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, data : UInt<65>, predicated : UInt<1>, fflags : { valid : UInt<1>, bits : { uop : { uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : { br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<16>, br_tag : UInt<4>, ftq_idx : UInt<5>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<7>, ldq_idx : UInt<5>, stq_idx : UInt<5>, rxq_idx : UInt<2>, pdst : UInt<7>, prs1 : UInt<7>, prs2 : UInt<7>, prs3 : UInt<7>, ppred : UInt<5>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<7>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, flags : UInt<5>}}}}}

    clock is invalid
    reset is invalid
    io is invalid
    inst fp_decoder of UOPCodeFPUDecoder @[fpu.scala 179:26]
    fp_decoder.clock <= clock
    fp_decoder.reset <= reset
    fp_decoder.io.uopc <= io.req.bits.uop.uopc @[fpu.scala 180:22]
    node _fp_rm_T = bits(io.req.bits.uop.imm_packed, 2, 0) @[util.scala 289:58]
    node _fp_rm_T_1 = eq(_fp_rm_T, UInt<3>("h7")) @[fpu.scala 182:51]
    node _fp_rm_T_2 = bits(io.req.bits.uop.imm_packed, 2, 0) @[util.scala 289:58]
    node fp_rm = mux(_fp_rm_T_1, io.req.bits.fcsr_rm, _fp_rm_T_2) @[fpu.scala 182:18]
    inst dfma of FPUFMAPipe @[fpu.scala 205:20]
    dfma.clock <= clock
    dfma.reset <= reset
    node _dfma_io_in_valid_T = and(io.req.valid, fp_decoder.io.sigs.fma) @[fpu.scala 206:36]
    node _dfma_io_in_valid_T_1 = eq(fp_decoder.io.sigs.typeTagOut, UInt<1>("h1")) @[fpu.scala 206:74]
    node _dfma_io_in_valid_T_2 = and(_dfma_io_in_valid_T, _dfma_io_in_valid_T_1) @[fpu.scala 206:51]
    dfma.io.in.valid <= _dfma_io_in_valid_T_2 @[fpu.scala 206:20]
    wire dfma_io_in_bits_req : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>} @[fpu.scala 185:19]
    dfma_io_in_bits_req <- fp_decoder.io.sigs @[fpu.scala 187:9]
    dfma_io_in_bits_req.rm <= fp_rm @[fpu.scala 188:12]
    node _dfma_io_in_bits_req_in1_unswizzled_T = bits(io.req.bits.rs1_data, 31, 31) @[FPU.scala 352:14]
    node _dfma_io_in_bits_req_in1_unswizzled_T_1 = bits(io.req.bits.rs1_data, 52, 52) @[FPU.scala 353:14]
    node _dfma_io_in_bits_req_in1_unswizzled_T_2 = bits(io.req.bits.rs1_data, 30, 0) @[FPU.scala 354:14]
    node dfma_io_in_bits_req_in1_unswizzled_hi = cat(_dfma_io_in_bits_req_in1_unswizzled_T, _dfma_io_in_bits_req_in1_unswizzled_T_1) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in1_unswizzled = cat(dfma_io_in_bits_req_in1_unswizzled_hi, _dfma_io_in_bits_req_in1_unswizzled_T_2) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in1_sign = bits(dfma_io_in_bits_req_in1_unswizzled, 32, 32) @[FPU.scala 269:17]
    node dfma_io_in_bits_req_in1_fractIn = bits(dfma_io_in_bits_req_in1_unswizzled, 22, 0) @[FPU.scala 270:20]
    node dfma_io_in_bits_req_in1_expIn = bits(dfma_io_in_bits_req_in1_unswizzled, 31, 23) @[FPU.scala 271:18]
    node _dfma_io_in_bits_req_in1_fractOut_T = shl(dfma_io_in_bits_req_in1_fractIn, 53) @[FPU.scala 272:28]
    node dfma_io_in_bits_req_in1_fractOut = shr(_dfma_io_in_bits_req_in1_fractOut_T, 24) @[FPU.scala 272:38]
    node dfma_io_in_bits_req_in1_expOut_expCode = bits(dfma_io_in_bits_req_in1_expIn, 8, 6) @[FPU.scala 274:26]
    node _dfma_io_in_bits_req_in1_expOut_commonCase_T = add(dfma_io_in_bits_req_in1_expIn, UInt<12>("h800")) @[FPU.scala 275:31]
    node _dfma_io_in_bits_req_in1_expOut_commonCase_T_1 = tail(_dfma_io_in_bits_req_in1_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _dfma_io_in_bits_req_in1_expOut_commonCase_T_2 = sub(_dfma_io_in_bits_req_in1_expOut_commonCase_T_1, UInt<9>("h100")) @[FPU.scala 275:48]
    node dfma_io_in_bits_req_in1_expOut_commonCase = tail(_dfma_io_in_bits_req_in1_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _dfma_io_in_bits_req_in1_expOut_T = eq(dfma_io_in_bits_req_in1_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _dfma_io_in_bits_req_in1_expOut_T_1 = geq(dfma_io_in_bits_req_in1_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _dfma_io_in_bits_req_in1_expOut_T_2 = or(_dfma_io_in_bits_req_in1_expOut_T, _dfma_io_in_bits_req_in1_expOut_T_1) @[FPU.scala 276:25]
    node _dfma_io_in_bits_req_in1_expOut_T_3 = bits(dfma_io_in_bits_req_in1_expOut_commonCase, 8, 0) @[FPU.scala 276:65]
    node _dfma_io_in_bits_req_in1_expOut_T_4 = cat(dfma_io_in_bits_req_in1_expOut_expCode, _dfma_io_in_bits_req_in1_expOut_T_3) @[Cat.scala 33:92]
    node _dfma_io_in_bits_req_in1_expOut_T_5 = bits(dfma_io_in_bits_req_in1_expOut_commonCase, 11, 0) @[FPU.scala 276:93]
    node dfma_io_in_bits_req_in1_expOut = mux(_dfma_io_in_bits_req_in1_expOut_T_2, _dfma_io_in_bits_req_in1_expOut_T_4, _dfma_io_in_bits_req_in1_expOut_T_5) @[FPU.scala 276:10]
    node dfma_io_in_bits_req_in1_hi = cat(dfma_io_in_bits_req_in1_sign, dfma_io_in_bits_req_in1_expOut) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in1_floats_0 = cat(dfma_io_in_bits_req_in1_hi, dfma_io_in_bits_req_in1_fractOut) @[Cat.scala 33:92]
    node _dfma_io_in_bits_req_in1_isbox_T = bits(io.req.bits.rs1_data, 64, 60) @[FPU.scala 327:49]
    node dfma_io_in_bits_req_in1_isbox = andr(_dfma_io_in_bits_req_in1_isbox_T) @[FPU.scala 327:84]
    node dfma_io_in_bits_req_in1_oks_0 = and(dfma_io_in_bits_req_in1_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node _dfma_io_in_bits_req_in1_T = mux(UInt<1>("h1"), UInt<1>("h0"), UInt<65>("he008000000000000")) @[FPU.scala 367:31]
    node _dfma_io_in_bits_req_in1_T_1 = or(io.req.bits.rs1_data, _dfma_io_in_bits_req_in1_T) @[FPU.scala 367:26]
    dfma_io_in_bits_req.in1 <= _dfma_io_in_bits_req_in1_T_1 @[fpu.scala 189:13]
    node _dfma_io_in_bits_req_in2_unswizzled_T = bits(io.req.bits.rs2_data, 31, 31) @[FPU.scala 352:14]
    node _dfma_io_in_bits_req_in2_unswizzled_T_1 = bits(io.req.bits.rs2_data, 52, 52) @[FPU.scala 353:14]
    node _dfma_io_in_bits_req_in2_unswizzled_T_2 = bits(io.req.bits.rs2_data, 30, 0) @[FPU.scala 354:14]
    node dfma_io_in_bits_req_in2_unswizzled_hi = cat(_dfma_io_in_bits_req_in2_unswizzled_T, _dfma_io_in_bits_req_in2_unswizzled_T_1) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in2_unswizzled = cat(dfma_io_in_bits_req_in2_unswizzled_hi, _dfma_io_in_bits_req_in2_unswizzled_T_2) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in2_sign = bits(dfma_io_in_bits_req_in2_unswizzled, 32, 32) @[FPU.scala 269:17]
    node dfma_io_in_bits_req_in2_fractIn = bits(dfma_io_in_bits_req_in2_unswizzled, 22, 0) @[FPU.scala 270:20]
    node dfma_io_in_bits_req_in2_expIn = bits(dfma_io_in_bits_req_in2_unswizzled, 31, 23) @[FPU.scala 271:18]
    node _dfma_io_in_bits_req_in2_fractOut_T = shl(dfma_io_in_bits_req_in2_fractIn, 53) @[FPU.scala 272:28]
    node dfma_io_in_bits_req_in2_fractOut = shr(_dfma_io_in_bits_req_in2_fractOut_T, 24) @[FPU.scala 272:38]
    node dfma_io_in_bits_req_in2_expOut_expCode = bits(dfma_io_in_bits_req_in2_expIn, 8, 6) @[FPU.scala 274:26]
    node _dfma_io_in_bits_req_in2_expOut_commonCase_T = add(dfma_io_in_bits_req_in2_expIn, UInt<12>("h800")) @[FPU.scala 275:31]
    node _dfma_io_in_bits_req_in2_expOut_commonCase_T_1 = tail(_dfma_io_in_bits_req_in2_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _dfma_io_in_bits_req_in2_expOut_commonCase_T_2 = sub(_dfma_io_in_bits_req_in2_expOut_commonCase_T_1, UInt<9>("h100")) @[FPU.scala 275:48]
    node dfma_io_in_bits_req_in2_expOut_commonCase = tail(_dfma_io_in_bits_req_in2_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _dfma_io_in_bits_req_in2_expOut_T = eq(dfma_io_in_bits_req_in2_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _dfma_io_in_bits_req_in2_expOut_T_1 = geq(dfma_io_in_bits_req_in2_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _dfma_io_in_bits_req_in2_expOut_T_2 = or(_dfma_io_in_bits_req_in2_expOut_T, _dfma_io_in_bits_req_in2_expOut_T_1) @[FPU.scala 276:25]
    node _dfma_io_in_bits_req_in2_expOut_T_3 = bits(dfma_io_in_bits_req_in2_expOut_commonCase, 8, 0) @[FPU.scala 276:65]
    node _dfma_io_in_bits_req_in2_expOut_T_4 = cat(dfma_io_in_bits_req_in2_expOut_expCode, _dfma_io_in_bits_req_in2_expOut_T_3) @[Cat.scala 33:92]
    node _dfma_io_in_bits_req_in2_expOut_T_5 = bits(dfma_io_in_bits_req_in2_expOut_commonCase, 11, 0) @[FPU.scala 276:93]
    node dfma_io_in_bits_req_in2_expOut = mux(_dfma_io_in_bits_req_in2_expOut_T_2, _dfma_io_in_bits_req_in2_expOut_T_4, _dfma_io_in_bits_req_in2_expOut_T_5) @[FPU.scala 276:10]
    node dfma_io_in_bits_req_in2_hi = cat(dfma_io_in_bits_req_in2_sign, dfma_io_in_bits_req_in2_expOut) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in2_floats_0 = cat(dfma_io_in_bits_req_in2_hi, dfma_io_in_bits_req_in2_fractOut) @[Cat.scala 33:92]
    node _dfma_io_in_bits_req_in2_isbox_T = bits(io.req.bits.rs2_data, 64, 60) @[FPU.scala 327:49]
    node dfma_io_in_bits_req_in2_isbox = andr(_dfma_io_in_bits_req_in2_isbox_T) @[FPU.scala 327:84]
    node dfma_io_in_bits_req_in2_oks_0 = and(dfma_io_in_bits_req_in2_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node _dfma_io_in_bits_req_in2_T = mux(UInt<1>("h1"), UInt<1>("h0"), UInt<65>("he008000000000000")) @[FPU.scala 367:31]
    node _dfma_io_in_bits_req_in2_T_1 = or(io.req.bits.rs2_data, _dfma_io_in_bits_req_in2_T) @[FPU.scala 367:26]
    dfma_io_in_bits_req.in2 <= _dfma_io_in_bits_req_in2_T_1 @[fpu.scala 190:13]
    node _dfma_io_in_bits_req_in3_unswizzled_T = bits(io.req.bits.rs3_data, 31, 31) @[FPU.scala 352:14]
    node _dfma_io_in_bits_req_in3_unswizzled_T_1 = bits(io.req.bits.rs3_data, 52, 52) @[FPU.scala 353:14]
    node _dfma_io_in_bits_req_in3_unswizzled_T_2 = bits(io.req.bits.rs3_data, 30, 0) @[FPU.scala 354:14]
    node dfma_io_in_bits_req_in3_unswizzled_hi = cat(_dfma_io_in_bits_req_in3_unswizzled_T, _dfma_io_in_bits_req_in3_unswizzled_T_1) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in3_unswizzled = cat(dfma_io_in_bits_req_in3_unswizzled_hi, _dfma_io_in_bits_req_in3_unswizzled_T_2) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in3_sign = bits(dfma_io_in_bits_req_in3_unswizzled, 32, 32) @[FPU.scala 269:17]
    node dfma_io_in_bits_req_in3_fractIn = bits(dfma_io_in_bits_req_in3_unswizzled, 22, 0) @[FPU.scala 270:20]
    node dfma_io_in_bits_req_in3_expIn = bits(dfma_io_in_bits_req_in3_unswizzled, 31, 23) @[FPU.scala 271:18]
    node _dfma_io_in_bits_req_in3_fractOut_T = shl(dfma_io_in_bits_req_in3_fractIn, 53) @[FPU.scala 272:28]
    node dfma_io_in_bits_req_in3_fractOut = shr(_dfma_io_in_bits_req_in3_fractOut_T, 24) @[FPU.scala 272:38]
    node dfma_io_in_bits_req_in3_expOut_expCode = bits(dfma_io_in_bits_req_in3_expIn, 8, 6) @[FPU.scala 274:26]
    node _dfma_io_in_bits_req_in3_expOut_commonCase_T = add(dfma_io_in_bits_req_in3_expIn, UInt<12>("h800")) @[FPU.scala 275:31]
    node _dfma_io_in_bits_req_in3_expOut_commonCase_T_1 = tail(_dfma_io_in_bits_req_in3_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _dfma_io_in_bits_req_in3_expOut_commonCase_T_2 = sub(_dfma_io_in_bits_req_in3_expOut_commonCase_T_1, UInt<9>("h100")) @[FPU.scala 275:48]
    node dfma_io_in_bits_req_in3_expOut_commonCase = tail(_dfma_io_in_bits_req_in3_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _dfma_io_in_bits_req_in3_expOut_T = eq(dfma_io_in_bits_req_in3_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _dfma_io_in_bits_req_in3_expOut_T_1 = geq(dfma_io_in_bits_req_in3_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _dfma_io_in_bits_req_in3_expOut_T_2 = or(_dfma_io_in_bits_req_in3_expOut_T, _dfma_io_in_bits_req_in3_expOut_T_1) @[FPU.scala 276:25]
    node _dfma_io_in_bits_req_in3_expOut_T_3 = bits(dfma_io_in_bits_req_in3_expOut_commonCase, 8, 0) @[FPU.scala 276:65]
    node _dfma_io_in_bits_req_in3_expOut_T_4 = cat(dfma_io_in_bits_req_in3_expOut_expCode, _dfma_io_in_bits_req_in3_expOut_T_3) @[Cat.scala 33:92]
    node _dfma_io_in_bits_req_in3_expOut_T_5 = bits(dfma_io_in_bits_req_in3_expOut_commonCase, 11, 0) @[FPU.scala 276:93]
    node dfma_io_in_bits_req_in3_expOut = mux(_dfma_io_in_bits_req_in3_expOut_T_2, _dfma_io_in_bits_req_in3_expOut_T_4, _dfma_io_in_bits_req_in3_expOut_T_5) @[FPU.scala 276:10]
    node dfma_io_in_bits_req_in3_hi = cat(dfma_io_in_bits_req_in3_sign, dfma_io_in_bits_req_in3_expOut) @[Cat.scala 33:92]
    node dfma_io_in_bits_req_in3_floats_0 = cat(dfma_io_in_bits_req_in3_hi, dfma_io_in_bits_req_in3_fractOut) @[Cat.scala 33:92]
    node _dfma_io_in_bits_req_in3_isbox_T = bits(io.req.bits.rs3_data, 64, 60) @[FPU.scala 327:49]
    node dfma_io_in_bits_req_in3_isbox = andr(_dfma_io_in_bits_req_in3_isbox_T) @[FPU.scala 327:84]
    node dfma_io_in_bits_req_in3_oks_0 = and(dfma_io_in_bits_req_in3_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node _dfma_io_in_bits_req_in3_T = mux(UInt<1>("h1"), UInt<1>("h0"), UInt<65>("he008000000000000")) @[FPU.scala 367:31]
    node _dfma_io_in_bits_req_in3_T_1 = or(io.req.bits.rs3_data, _dfma_io_in_bits_req_in3_T) @[FPU.scala 367:26]
    dfma_io_in_bits_req.in3 <= _dfma_io_in_bits_req_in3_T_1 @[fpu.scala 191:13]
    when fp_decoder.io.sigs.swap23 : @[fpu.scala 192:27]
      dfma_io_in_bits_req.in3 <= dfma_io_in_bits_req.in2 @[fpu.scala 192:37]
    node _dfma_io_in_bits_req_typ_T = bits(io.req.bits.uop.imm_packed, 9, 8) @[util.scala 295:59]
    dfma_io_in_bits_req.typ <= _dfma_io_in_bits_req_typ_T @[fpu.scala 193:13]
    node _dfma_io_in_bits_req_fmt_T = eq(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[fpu.scala 194:24]
    node _dfma_io_in_bits_req_fmt_T_1 = mux(_dfma_io_in_bits_req_fmt_T, UInt<1>("h0"), UInt<1>("h1")) @[fpu.scala 194:19]
    dfma_io_in_bits_req.fmt <= _dfma_io_in_bits_req_fmt_T_1 @[fpu.scala 194:13]
    node _dfma_io_in_bits_T = eq(io.req.bits.uop.uopc, UInt<7>("h46")) @[fpu.scala 195:27]
    when _dfma_io_in_bits_T : @[fpu.scala 195:43]
      dfma_io_in_bits_req.fmt <= UInt<1>("h0") @[fpu.scala 196:15]
    inst dfma_io_in_bits_fma_decoder of FMADecoder @[fpu.scala 199:29]
    dfma_io_in_bits_fma_decoder.clock <= clock
    dfma_io_in_bits_fma_decoder.reset <= reset
    dfma_io_in_bits_fma_decoder.io.uopc <= io.req.bits.uop.uopc @[fpu.scala 200:25]
    dfma_io_in_bits_req.fmaCmd <= dfma_io_in_bits_fma_decoder.io.cmd @[fpu.scala 201:16]
    dfma.io.in.bits.in3 <= dfma_io_in_bits_req.in3 @[fpu.scala 207:19]
    dfma.io.in.bits.in2 <= dfma_io_in_bits_req.in2 @[fpu.scala 207:19]
    dfma.io.in.bits.in1 <= dfma_io_in_bits_req.in1 @[fpu.scala 207:19]
    dfma.io.in.bits.fmt <= dfma_io_in_bits_req.fmt @[fpu.scala 207:19]
    dfma.io.in.bits.typ <= dfma_io_in_bits_req.typ @[fpu.scala 207:19]
    dfma.io.in.bits.fmaCmd <= dfma_io_in_bits_req.fmaCmd @[fpu.scala 207:19]
    dfma.io.in.bits.rm <= dfma_io_in_bits_req.rm @[fpu.scala 207:19]
    dfma.io.in.bits.wflags <= dfma_io_in_bits_req.wflags @[fpu.scala 207:19]
    dfma.io.in.bits.sqrt <= dfma_io_in_bits_req.sqrt @[fpu.scala 207:19]
    dfma.io.in.bits.div <= dfma_io_in_bits_req.div @[fpu.scala 207:19]
    dfma.io.in.bits.fma <= dfma_io_in_bits_req.fma @[fpu.scala 207:19]
    dfma.io.in.bits.fastpipe <= dfma_io_in_bits_req.fastpipe @[fpu.scala 207:19]
    dfma.io.in.bits.toint <= dfma_io_in_bits_req.toint @[fpu.scala 207:19]
    dfma.io.in.bits.fromint <= dfma_io_in_bits_req.fromint @[fpu.scala 207:19]
    dfma.io.in.bits.typeTagOut <= dfma_io_in_bits_req.typeTagOut @[fpu.scala 207:19]
    dfma.io.in.bits.typeTagIn <= dfma_io_in_bits_req.typeTagIn @[fpu.scala 207:19]
    dfma.io.in.bits.swap23 <= dfma_io_in_bits_req.swap23 @[fpu.scala 207:19]
    dfma.io.in.bits.swap12 <= dfma_io_in_bits_req.swap12 @[fpu.scala 207:19]
    dfma.io.in.bits.ren3 <= dfma_io_in_bits_req.ren3 @[fpu.scala 207:19]
    dfma.io.in.bits.ren2 <= dfma_io_in_bits_req.ren2 @[fpu.scala 207:19]
    dfma.io.in.bits.ren1 <= dfma_io_in_bits_req.ren1 @[fpu.scala 207:19]
    dfma.io.in.bits.wen <= dfma_io_in_bits_req.wen @[fpu.scala 207:19]
    dfma.io.in.bits.ldst <= dfma_io_in_bits_req.ldst @[fpu.scala 207:19]
    inst sfma of FPUFMAPipe_1 @[fpu.scala 209:20]
    sfma.clock <= clock
    sfma.reset <= reset
    node _sfma_io_in_valid_T = and(io.req.valid, fp_decoder.io.sigs.fma) @[fpu.scala 210:36]
    node _sfma_io_in_valid_T_1 = eq(fp_decoder.io.sigs.typeTagOut, UInt<1>("h0")) @[fpu.scala 210:74]
    node _sfma_io_in_valid_T_2 = and(_sfma_io_in_valid_T, _sfma_io_in_valid_T_1) @[fpu.scala 210:51]
    sfma.io.in.valid <= _sfma_io_in_valid_T_2 @[fpu.scala 210:20]
    wire sfma_io_in_bits_req : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>} @[fpu.scala 185:19]
    sfma_io_in_bits_req <- fp_decoder.io.sigs @[fpu.scala 187:9]
    sfma_io_in_bits_req.rm <= fp_rm @[fpu.scala 188:12]
    node _sfma_io_in_bits_req_in1_unswizzled_T = bits(io.req.bits.rs1_data, 31, 31) @[FPU.scala 352:14]
    node _sfma_io_in_bits_req_in1_unswizzled_T_1 = bits(io.req.bits.rs1_data, 52, 52) @[FPU.scala 353:14]
    node _sfma_io_in_bits_req_in1_unswizzled_T_2 = bits(io.req.bits.rs1_data, 30, 0) @[FPU.scala 354:14]
    node sfma_io_in_bits_req_in1_unswizzled_hi = cat(_sfma_io_in_bits_req_in1_unswizzled_T, _sfma_io_in_bits_req_in1_unswizzled_T_1) @[Cat.scala 33:92]
    node sfma_io_in_bits_req_in1_floats_0 = cat(sfma_io_in_bits_req_in1_unswizzled_hi, _sfma_io_in_bits_req_in1_unswizzled_T_2) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in1_isbox_T = bits(io.req.bits.rs1_data, 64, 60) @[FPU.scala 327:49]
    node sfma_io_in_bits_req_in1_isbox = andr(_sfma_io_in_bits_req_in1_isbox_T) @[FPU.scala 327:84]
    node sfma_io_in_bits_req_in1_oks_0 = and(sfma_io_in_bits_req_in1_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node sfma_io_in_bits_req_in1_sign = bits(io.req.bits.rs1_data, 64, 64) @[FPU.scala 269:17]
    node sfma_io_in_bits_req_in1_fractIn = bits(io.req.bits.rs1_data, 51, 0) @[FPU.scala 270:20]
    node sfma_io_in_bits_req_in1_expIn = bits(io.req.bits.rs1_data, 63, 52) @[FPU.scala 271:18]
    node _sfma_io_in_bits_req_in1_fractOut_T = shl(sfma_io_in_bits_req_in1_fractIn, 24) @[FPU.scala 272:28]
    node sfma_io_in_bits_req_in1_fractOut = shr(_sfma_io_in_bits_req_in1_fractOut_T, 53) @[FPU.scala 272:38]
    node sfma_io_in_bits_req_in1_expOut_expCode = bits(sfma_io_in_bits_req_in1_expIn, 11, 9) @[FPU.scala 274:26]
    node _sfma_io_in_bits_req_in1_expOut_commonCase_T = add(sfma_io_in_bits_req_in1_expIn, UInt<9>("h100")) @[FPU.scala 275:31]
    node _sfma_io_in_bits_req_in1_expOut_commonCase_T_1 = tail(_sfma_io_in_bits_req_in1_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _sfma_io_in_bits_req_in1_expOut_commonCase_T_2 = sub(_sfma_io_in_bits_req_in1_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 275:48]
    node sfma_io_in_bits_req_in1_expOut_commonCase = tail(_sfma_io_in_bits_req_in1_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _sfma_io_in_bits_req_in1_expOut_T = eq(sfma_io_in_bits_req_in1_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _sfma_io_in_bits_req_in1_expOut_T_1 = geq(sfma_io_in_bits_req_in1_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _sfma_io_in_bits_req_in1_expOut_T_2 = or(_sfma_io_in_bits_req_in1_expOut_T, _sfma_io_in_bits_req_in1_expOut_T_1) @[FPU.scala 276:25]
    node _sfma_io_in_bits_req_in1_expOut_T_3 = bits(sfma_io_in_bits_req_in1_expOut_commonCase, 5, 0) @[FPU.scala 276:65]
    node _sfma_io_in_bits_req_in1_expOut_T_4 = cat(sfma_io_in_bits_req_in1_expOut_expCode, _sfma_io_in_bits_req_in1_expOut_T_3) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in1_expOut_T_5 = bits(sfma_io_in_bits_req_in1_expOut_commonCase, 8, 0) @[FPU.scala 276:93]
    node sfma_io_in_bits_req_in1_expOut = mux(_sfma_io_in_bits_req_in1_expOut_T_2, _sfma_io_in_bits_req_in1_expOut_T_4, _sfma_io_in_bits_req_in1_expOut_T_5) @[FPU.scala 276:10]
    node sfma_io_in_bits_req_in1_hi = cat(sfma_io_in_bits_req_in1_sign, sfma_io_in_bits_req_in1_expOut) @[Cat.scala 33:92]
    node sfma_io_in_bits_req_in1_floats_1 = cat(sfma_io_in_bits_req_in1_hi, sfma_io_in_bits_req_in1_fractOut) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in1_T = mux(sfma_io_in_bits_req_in1_oks_0, UInt<1>("h0"), UInt<33>("he0400000")) @[FPU.scala 367:31]
    node _sfma_io_in_bits_req_in1_T_1 = or(sfma_io_in_bits_req_in1_floats_0, _sfma_io_in_bits_req_in1_T) @[FPU.scala 367:26]
    sfma_io_in_bits_req.in1 <= _sfma_io_in_bits_req_in1_T_1 @[fpu.scala 189:13]
    node _sfma_io_in_bits_req_in2_unswizzled_T = bits(io.req.bits.rs2_data, 31, 31) @[FPU.scala 352:14]
    node _sfma_io_in_bits_req_in2_unswizzled_T_1 = bits(io.req.bits.rs2_data, 52, 52) @[FPU.scala 353:14]
    node _sfma_io_in_bits_req_in2_unswizzled_T_2 = bits(io.req.bits.rs2_data, 30, 0) @[FPU.scala 354:14]
    node sfma_io_in_bits_req_in2_unswizzled_hi = cat(_sfma_io_in_bits_req_in2_unswizzled_T, _sfma_io_in_bits_req_in2_unswizzled_T_1) @[Cat.scala 33:92]
    node sfma_io_in_bits_req_in2_floats_0 = cat(sfma_io_in_bits_req_in2_unswizzled_hi, _sfma_io_in_bits_req_in2_unswizzled_T_2) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in2_isbox_T = bits(io.req.bits.rs2_data, 64, 60) @[FPU.scala 327:49]
    node sfma_io_in_bits_req_in2_isbox = andr(_sfma_io_in_bits_req_in2_isbox_T) @[FPU.scala 327:84]
    node sfma_io_in_bits_req_in2_oks_0 = and(sfma_io_in_bits_req_in2_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node sfma_io_in_bits_req_in2_sign = bits(io.req.bits.rs2_data, 64, 64) @[FPU.scala 269:17]
    node sfma_io_in_bits_req_in2_fractIn = bits(io.req.bits.rs2_data, 51, 0) @[FPU.scala 270:20]
    node sfma_io_in_bits_req_in2_expIn = bits(io.req.bits.rs2_data, 63, 52) @[FPU.scala 271:18]
    node _sfma_io_in_bits_req_in2_fractOut_T = shl(sfma_io_in_bits_req_in2_fractIn, 24) @[FPU.scala 272:28]
    node sfma_io_in_bits_req_in2_fractOut = shr(_sfma_io_in_bits_req_in2_fractOut_T, 53) @[FPU.scala 272:38]
    node sfma_io_in_bits_req_in2_expOut_expCode = bits(sfma_io_in_bits_req_in2_expIn, 11, 9) @[FPU.scala 274:26]
    node _sfma_io_in_bits_req_in2_expOut_commonCase_T = add(sfma_io_in_bits_req_in2_expIn, UInt<9>("h100")) @[FPU.scala 275:31]
    node _sfma_io_in_bits_req_in2_expOut_commonCase_T_1 = tail(_sfma_io_in_bits_req_in2_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _sfma_io_in_bits_req_in2_expOut_commonCase_T_2 = sub(_sfma_io_in_bits_req_in2_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 275:48]
    node sfma_io_in_bits_req_in2_expOut_commonCase = tail(_sfma_io_in_bits_req_in2_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _sfma_io_in_bits_req_in2_expOut_T = eq(sfma_io_in_bits_req_in2_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _sfma_io_in_bits_req_in2_expOut_T_1 = geq(sfma_io_in_bits_req_in2_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _sfma_io_in_bits_req_in2_expOut_T_2 = or(_sfma_io_in_bits_req_in2_expOut_T, _sfma_io_in_bits_req_in2_expOut_T_1) @[FPU.scala 276:25]
    node _sfma_io_in_bits_req_in2_expOut_T_3 = bits(sfma_io_in_bits_req_in2_expOut_commonCase, 5, 0) @[FPU.scala 276:65]
    node _sfma_io_in_bits_req_in2_expOut_T_4 = cat(sfma_io_in_bits_req_in2_expOut_expCode, _sfma_io_in_bits_req_in2_expOut_T_3) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in2_expOut_T_5 = bits(sfma_io_in_bits_req_in2_expOut_commonCase, 8, 0) @[FPU.scala 276:93]
    node sfma_io_in_bits_req_in2_expOut = mux(_sfma_io_in_bits_req_in2_expOut_T_2, _sfma_io_in_bits_req_in2_expOut_T_4, _sfma_io_in_bits_req_in2_expOut_T_5) @[FPU.scala 276:10]
    node sfma_io_in_bits_req_in2_hi = cat(sfma_io_in_bits_req_in2_sign, sfma_io_in_bits_req_in2_expOut) @[Cat.scala 33:92]
    node sfma_io_in_bits_req_in2_floats_1 = cat(sfma_io_in_bits_req_in2_hi, sfma_io_in_bits_req_in2_fractOut) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in2_T = mux(sfma_io_in_bits_req_in2_oks_0, UInt<1>("h0"), UInt<33>("he0400000")) @[FPU.scala 367:31]
    node _sfma_io_in_bits_req_in2_T_1 = or(sfma_io_in_bits_req_in2_floats_0, _sfma_io_in_bits_req_in2_T) @[FPU.scala 367:26]
    sfma_io_in_bits_req.in2 <= _sfma_io_in_bits_req_in2_T_1 @[fpu.scala 190:13]
    node _sfma_io_in_bits_req_in3_unswizzled_T = bits(io.req.bits.rs3_data, 31, 31) @[FPU.scala 352:14]
    node _sfma_io_in_bits_req_in3_unswizzled_T_1 = bits(io.req.bits.rs3_data, 52, 52) @[FPU.scala 353:14]
    node _sfma_io_in_bits_req_in3_unswizzled_T_2 = bits(io.req.bits.rs3_data, 30, 0) @[FPU.scala 354:14]
    node sfma_io_in_bits_req_in3_unswizzled_hi = cat(_sfma_io_in_bits_req_in3_unswizzled_T, _sfma_io_in_bits_req_in3_unswizzled_T_1) @[Cat.scala 33:92]
    node sfma_io_in_bits_req_in3_floats_0 = cat(sfma_io_in_bits_req_in3_unswizzled_hi, _sfma_io_in_bits_req_in3_unswizzled_T_2) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in3_isbox_T = bits(io.req.bits.rs3_data, 64, 60) @[FPU.scala 327:49]
    node sfma_io_in_bits_req_in3_isbox = andr(_sfma_io_in_bits_req_in3_isbox_T) @[FPU.scala 327:84]
    node sfma_io_in_bits_req_in3_oks_0 = and(sfma_io_in_bits_req_in3_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node sfma_io_in_bits_req_in3_sign = bits(io.req.bits.rs3_data, 64, 64) @[FPU.scala 269:17]
    node sfma_io_in_bits_req_in3_fractIn = bits(io.req.bits.rs3_data, 51, 0) @[FPU.scala 270:20]
    node sfma_io_in_bits_req_in3_expIn = bits(io.req.bits.rs3_data, 63, 52) @[FPU.scala 271:18]
    node _sfma_io_in_bits_req_in3_fractOut_T = shl(sfma_io_in_bits_req_in3_fractIn, 24) @[FPU.scala 272:28]
    node sfma_io_in_bits_req_in3_fractOut = shr(_sfma_io_in_bits_req_in3_fractOut_T, 53) @[FPU.scala 272:38]
    node sfma_io_in_bits_req_in3_expOut_expCode = bits(sfma_io_in_bits_req_in3_expIn, 11, 9) @[FPU.scala 274:26]
    node _sfma_io_in_bits_req_in3_expOut_commonCase_T = add(sfma_io_in_bits_req_in3_expIn, UInt<9>("h100")) @[FPU.scala 275:31]
    node _sfma_io_in_bits_req_in3_expOut_commonCase_T_1 = tail(_sfma_io_in_bits_req_in3_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _sfma_io_in_bits_req_in3_expOut_commonCase_T_2 = sub(_sfma_io_in_bits_req_in3_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 275:48]
    node sfma_io_in_bits_req_in3_expOut_commonCase = tail(_sfma_io_in_bits_req_in3_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _sfma_io_in_bits_req_in3_expOut_T = eq(sfma_io_in_bits_req_in3_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _sfma_io_in_bits_req_in3_expOut_T_1 = geq(sfma_io_in_bits_req_in3_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _sfma_io_in_bits_req_in3_expOut_T_2 = or(_sfma_io_in_bits_req_in3_expOut_T, _sfma_io_in_bits_req_in3_expOut_T_1) @[FPU.scala 276:25]
    node _sfma_io_in_bits_req_in3_expOut_T_3 = bits(sfma_io_in_bits_req_in3_expOut_commonCase, 5, 0) @[FPU.scala 276:65]
    node _sfma_io_in_bits_req_in3_expOut_T_4 = cat(sfma_io_in_bits_req_in3_expOut_expCode, _sfma_io_in_bits_req_in3_expOut_T_3) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in3_expOut_T_5 = bits(sfma_io_in_bits_req_in3_expOut_commonCase, 8, 0) @[FPU.scala 276:93]
    node sfma_io_in_bits_req_in3_expOut = mux(_sfma_io_in_bits_req_in3_expOut_T_2, _sfma_io_in_bits_req_in3_expOut_T_4, _sfma_io_in_bits_req_in3_expOut_T_5) @[FPU.scala 276:10]
    node sfma_io_in_bits_req_in3_hi = cat(sfma_io_in_bits_req_in3_sign, sfma_io_in_bits_req_in3_expOut) @[Cat.scala 33:92]
    node sfma_io_in_bits_req_in3_floats_1 = cat(sfma_io_in_bits_req_in3_hi, sfma_io_in_bits_req_in3_fractOut) @[Cat.scala 33:92]
    node _sfma_io_in_bits_req_in3_T = mux(sfma_io_in_bits_req_in3_oks_0, UInt<1>("h0"), UInt<33>("he0400000")) @[FPU.scala 367:31]
    node _sfma_io_in_bits_req_in3_T_1 = or(sfma_io_in_bits_req_in3_floats_0, _sfma_io_in_bits_req_in3_T) @[FPU.scala 367:26]
    sfma_io_in_bits_req.in3 <= _sfma_io_in_bits_req_in3_T_1 @[fpu.scala 191:13]
    when fp_decoder.io.sigs.swap23 : @[fpu.scala 192:27]
      sfma_io_in_bits_req.in3 <= sfma_io_in_bits_req.in2 @[fpu.scala 192:37]
    node _sfma_io_in_bits_req_typ_T = bits(io.req.bits.uop.imm_packed, 9, 8) @[util.scala 295:59]
    sfma_io_in_bits_req.typ <= _sfma_io_in_bits_req_typ_T @[fpu.scala 193:13]
    node _sfma_io_in_bits_req_fmt_T = eq(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[fpu.scala 194:24]
    node _sfma_io_in_bits_req_fmt_T_1 = mux(_sfma_io_in_bits_req_fmt_T, UInt<1>("h0"), UInt<1>("h1")) @[fpu.scala 194:19]
    sfma_io_in_bits_req.fmt <= _sfma_io_in_bits_req_fmt_T_1 @[fpu.scala 194:13]
    node _sfma_io_in_bits_T = eq(io.req.bits.uop.uopc, UInt<7>("h46")) @[fpu.scala 195:27]
    when _sfma_io_in_bits_T : @[fpu.scala 195:43]
      sfma_io_in_bits_req.fmt <= UInt<1>("h0") @[fpu.scala 196:15]
    inst sfma_io_in_bits_fma_decoder of FMADecoder @[fpu.scala 199:29]
    sfma_io_in_bits_fma_decoder.clock <= clock
    sfma_io_in_bits_fma_decoder.reset <= reset
    sfma_io_in_bits_fma_decoder.io.uopc <= io.req.bits.uop.uopc @[fpu.scala 200:25]
    sfma_io_in_bits_req.fmaCmd <= sfma_io_in_bits_fma_decoder.io.cmd @[fpu.scala 201:16]
    sfma.io.in.bits.in3 <= sfma_io_in_bits_req.in3 @[fpu.scala 211:19]
    sfma.io.in.bits.in2 <= sfma_io_in_bits_req.in2 @[fpu.scala 211:19]
    sfma.io.in.bits.in1 <= sfma_io_in_bits_req.in1 @[fpu.scala 211:19]
    sfma.io.in.bits.fmt <= sfma_io_in_bits_req.fmt @[fpu.scala 211:19]
    sfma.io.in.bits.typ <= sfma_io_in_bits_req.typ @[fpu.scala 211:19]
    sfma.io.in.bits.fmaCmd <= sfma_io_in_bits_req.fmaCmd @[fpu.scala 211:19]
    sfma.io.in.bits.rm <= sfma_io_in_bits_req.rm @[fpu.scala 211:19]
    sfma.io.in.bits.wflags <= sfma_io_in_bits_req.wflags @[fpu.scala 211:19]
    sfma.io.in.bits.sqrt <= sfma_io_in_bits_req.sqrt @[fpu.scala 211:19]
    sfma.io.in.bits.div <= sfma_io_in_bits_req.div @[fpu.scala 211:19]
    sfma.io.in.bits.fma <= sfma_io_in_bits_req.fma @[fpu.scala 211:19]
    sfma.io.in.bits.fastpipe <= sfma_io_in_bits_req.fastpipe @[fpu.scala 211:19]
    sfma.io.in.bits.toint <= sfma_io_in_bits_req.toint @[fpu.scala 211:19]
    sfma.io.in.bits.fromint <= sfma_io_in_bits_req.fromint @[fpu.scala 211:19]
    sfma.io.in.bits.typeTagOut <= sfma_io_in_bits_req.typeTagOut @[fpu.scala 211:19]
    sfma.io.in.bits.typeTagIn <= sfma_io_in_bits_req.typeTagIn @[fpu.scala 211:19]
    sfma.io.in.bits.swap23 <= sfma_io_in_bits_req.swap23 @[fpu.scala 211:19]
    sfma.io.in.bits.swap12 <= sfma_io_in_bits_req.swap12 @[fpu.scala 211:19]
    sfma.io.in.bits.ren3 <= sfma_io_in_bits_req.ren3 @[fpu.scala 211:19]
    sfma.io.in.bits.ren2 <= sfma_io_in_bits_req.ren2 @[fpu.scala 211:19]
    sfma.io.in.bits.ren1 <= sfma_io_in_bits_req.ren1 @[fpu.scala 211:19]
    sfma.io.in.bits.wen <= sfma_io_in_bits_req.wen @[fpu.scala 211:19]
    sfma.io.in.bits.ldst <= sfma_io_in_bits_req.ldst @[fpu.scala 211:19]
    inst fpiu of FPToInt @[fpu.scala 213:20]
    fpiu.clock <= clock
    fpiu.reset <= reset
    node _fpiu_io_in_valid_T = and(fp_decoder.io.sigs.fastpipe, fp_decoder.io.sigs.wflags) @[fpu.scala 214:75]
    node _fpiu_io_in_valid_T_1 = or(fp_decoder.io.sigs.toint, _fpiu_io_in_valid_T) @[fpu.scala 214:54]
    node _fpiu_io_in_valid_T_2 = and(io.req.valid, _fpiu_io_in_valid_T_1) @[fpu.scala 214:36]
    fpiu.io.in.valid <= _fpiu_io_in_valid_T_2 @[fpu.scala 214:20]
    wire fpiu_io_in_bits_req : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>} @[fpu.scala 185:19]
    fpiu_io_in_bits_req <- fp_decoder.io.sigs @[fpu.scala 187:9]
    fpiu_io_in_bits_req.rm <= fp_rm @[fpu.scala 188:12]
    node _fpiu_io_in_bits_req_in1_unswizzled_T = bits(io.req.bits.rs1_data, 31, 31) @[FPU.scala 352:14]
    node _fpiu_io_in_bits_req_in1_unswizzled_T_1 = bits(io.req.bits.rs1_data, 52, 52) @[FPU.scala 353:14]
    node _fpiu_io_in_bits_req_in1_unswizzled_T_2 = bits(io.req.bits.rs1_data, 30, 0) @[FPU.scala 354:14]
    node fpiu_io_in_bits_req_in1_unswizzled_hi = cat(_fpiu_io_in_bits_req_in1_unswizzled_T, _fpiu_io_in_bits_req_in1_unswizzled_T_1) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in1_unswizzled = cat(fpiu_io_in_bits_req_in1_unswizzled_hi, _fpiu_io_in_bits_req_in1_unswizzled_T_2) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in1_sign = bits(fpiu_io_in_bits_req_in1_unswizzled, 32, 32) @[FPU.scala 269:17]
    node fpiu_io_in_bits_req_in1_fractIn = bits(fpiu_io_in_bits_req_in1_unswizzled, 22, 0) @[FPU.scala 270:20]
    node fpiu_io_in_bits_req_in1_expIn = bits(fpiu_io_in_bits_req_in1_unswizzled, 31, 23) @[FPU.scala 271:18]
    node _fpiu_io_in_bits_req_in1_fractOut_T = shl(fpiu_io_in_bits_req_in1_fractIn, 53) @[FPU.scala 272:28]
    node fpiu_io_in_bits_req_in1_fractOut = shr(_fpiu_io_in_bits_req_in1_fractOut_T, 24) @[FPU.scala 272:38]
    node fpiu_io_in_bits_req_in1_expOut_expCode = bits(fpiu_io_in_bits_req_in1_expIn, 8, 6) @[FPU.scala 274:26]
    node _fpiu_io_in_bits_req_in1_expOut_commonCase_T = add(fpiu_io_in_bits_req_in1_expIn, UInt<12>("h800")) @[FPU.scala 275:31]
    node _fpiu_io_in_bits_req_in1_expOut_commonCase_T_1 = tail(_fpiu_io_in_bits_req_in1_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _fpiu_io_in_bits_req_in1_expOut_commonCase_T_2 = sub(_fpiu_io_in_bits_req_in1_expOut_commonCase_T_1, UInt<9>("h100")) @[FPU.scala 275:48]
    node fpiu_io_in_bits_req_in1_expOut_commonCase = tail(_fpiu_io_in_bits_req_in1_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _fpiu_io_in_bits_req_in1_expOut_T = eq(fpiu_io_in_bits_req_in1_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _fpiu_io_in_bits_req_in1_expOut_T_1 = geq(fpiu_io_in_bits_req_in1_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _fpiu_io_in_bits_req_in1_expOut_T_2 = or(_fpiu_io_in_bits_req_in1_expOut_T, _fpiu_io_in_bits_req_in1_expOut_T_1) @[FPU.scala 276:25]
    node _fpiu_io_in_bits_req_in1_expOut_T_3 = bits(fpiu_io_in_bits_req_in1_expOut_commonCase, 8, 0) @[FPU.scala 276:65]
    node _fpiu_io_in_bits_req_in1_expOut_T_4 = cat(fpiu_io_in_bits_req_in1_expOut_expCode, _fpiu_io_in_bits_req_in1_expOut_T_3) @[Cat.scala 33:92]
    node _fpiu_io_in_bits_req_in1_expOut_T_5 = bits(fpiu_io_in_bits_req_in1_expOut_commonCase, 11, 0) @[FPU.scala 276:93]
    node fpiu_io_in_bits_req_in1_expOut = mux(_fpiu_io_in_bits_req_in1_expOut_T_2, _fpiu_io_in_bits_req_in1_expOut_T_4, _fpiu_io_in_bits_req_in1_expOut_T_5) @[FPU.scala 276:10]
    node fpiu_io_in_bits_req_in1_hi = cat(fpiu_io_in_bits_req_in1_sign, fpiu_io_in_bits_req_in1_expOut) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in1_floats_0 = cat(fpiu_io_in_bits_req_in1_hi, fpiu_io_in_bits_req_in1_fractOut) @[Cat.scala 33:92]
    node _fpiu_io_in_bits_req_in1_isbox_T = bits(io.req.bits.rs1_data, 64, 60) @[FPU.scala 327:49]
    node fpiu_io_in_bits_req_in1_isbox = andr(_fpiu_io_in_bits_req_in1_isbox_T) @[FPU.scala 327:84]
    node fpiu_io_in_bits_req_in1_oks_0 = and(fpiu_io_in_bits_req_in1_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node _fpiu_io_in_bits_req_in1_truncIdx_T = or(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[package.scala 31:21]
    node fpiu_io_in_bits_req_in1_truncIdx = bits(_fpiu_io_in_bits_req_in1_truncIdx_T, 0, 0) @[package.scala 31:49]
    node _fpiu_io_in_bits_req_in1_T = eq(fpiu_io_in_bits_req_in1_truncIdx, UInt<1>("h1")) @[package.scala 32:86]
    node _fpiu_io_in_bits_req_in1_T_1 = mux(_fpiu_io_in_bits_req_in1_T, UInt<1>("h1"), fpiu_io_in_bits_req_in1_oks_0) @[package.scala 32:76]
    node _fpiu_io_in_bits_req_in1_truncIdx_T_1 = or(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[package.scala 31:21]
    node fpiu_io_in_bits_req_in1_truncIdx_1 = bits(_fpiu_io_in_bits_req_in1_truncIdx_T_1, 0, 0) @[package.scala 31:49]
    node _fpiu_io_in_bits_req_in1_T_2 = eq(fpiu_io_in_bits_req_in1_truncIdx_1, UInt<1>("h1")) @[package.scala 32:86]
    node _fpiu_io_in_bits_req_in1_T_3 = mux(_fpiu_io_in_bits_req_in1_T_2, io.req.bits.rs1_data, fpiu_io_in_bits_req_in1_floats_0) @[package.scala 32:76]
    node _fpiu_io_in_bits_req_in1_T_4 = mux(_fpiu_io_in_bits_req_in1_T_1, _fpiu_io_in_bits_req_in1_T_3, UInt<65>("he008000000000000")) @[FPU.scala 364:10]
    fpiu_io_in_bits_req.in1 <= _fpiu_io_in_bits_req_in1_T_4 @[fpu.scala 189:13]
    node _fpiu_io_in_bits_req_in2_unswizzled_T = bits(io.req.bits.rs2_data, 31, 31) @[FPU.scala 352:14]
    node _fpiu_io_in_bits_req_in2_unswizzled_T_1 = bits(io.req.bits.rs2_data, 52, 52) @[FPU.scala 353:14]
    node _fpiu_io_in_bits_req_in2_unswizzled_T_2 = bits(io.req.bits.rs2_data, 30, 0) @[FPU.scala 354:14]
    node fpiu_io_in_bits_req_in2_unswizzled_hi = cat(_fpiu_io_in_bits_req_in2_unswizzled_T, _fpiu_io_in_bits_req_in2_unswizzled_T_1) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in2_unswizzled = cat(fpiu_io_in_bits_req_in2_unswizzled_hi, _fpiu_io_in_bits_req_in2_unswizzled_T_2) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in2_sign = bits(fpiu_io_in_bits_req_in2_unswizzled, 32, 32) @[FPU.scala 269:17]
    node fpiu_io_in_bits_req_in2_fractIn = bits(fpiu_io_in_bits_req_in2_unswizzled, 22, 0) @[FPU.scala 270:20]
    node fpiu_io_in_bits_req_in2_expIn = bits(fpiu_io_in_bits_req_in2_unswizzled, 31, 23) @[FPU.scala 271:18]
    node _fpiu_io_in_bits_req_in2_fractOut_T = shl(fpiu_io_in_bits_req_in2_fractIn, 53) @[FPU.scala 272:28]
    node fpiu_io_in_bits_req_in2_fractOut = shr(_fpiu_io_in_bits_req_in2_fractOut_T, 24) @[FPU.scala 272:38]
    node fpiu_io_in_bits_req_in2_expOut_expCode = bits(fpiu_io_in_bits_req_in2_expIn, 8, 6) @[FPU.scala 274:26]
    node _fpiu_io_in_bits_req_in2_expOut_commonCase_T = add(fpiu_io_in_bits_req_in2_expIn, UInt<12>("h800")) @[FPU.scala 275:31]
    node _fpiu_io_in_bits_req_in2_expOut_commonCase_T_1 = tail(_fpiu_io_in_bits_req_in2_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _fpiu_io_in_bits_req_in2_expOut_commonCase_T_2 = sub(_fpiu_io_in_bits_req_in2_expOut_commonCase_T_1, UInt<9>("h100")) @[FPU.scala 275:48]
    node fpiu_io_in_bits_req_in2_expOut_commonCase = tail(_fpiu_io_in_bits_req_in2_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _fpiu_io_in_bits_req_in2_expOut_T = eq(fpiu_io_in_bits_req_in2_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _fpiu_io_in_bits_req_in2_expOut_T_1 = geq(fpiu_io_in_bits_req_in2_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _fpiu_io_in_bits_req_in2_expOut_T_2 = or(_fpiu_io_in_bits_req_in2_expOut_T, _fpiu_io_in_bits_req_in2_expOut_T_1) @[FPU.scala 276:25]
    node _fpiu_io_in_bits_req_in2_expOut_T_3 = bits(fpiu_io_in_bits_req_in2_expOut_commonCase, 8, 0) @[FPU.scala 276:65]
    node _fpiu_io_in_bits_req_in2_expOut_T_4 = cat(fpiu_io_in_bits_req_in2_expOut_expCode, _fpiu_io_in_bits_req_in2_expOut_T_3) @[Cat.scala 33:92]
    node _fpiu_io_in_bits_req_in2_expOut_T_5 = bits(fpiu_io_in_bits_req_in2_expOut_commonCase, 11, 0) @[FPU.scala 276:93]
    node fpiu_io_in_bits_req_in2_expOut = mux(_fpiu_io_in_bits_req_in2_expOut_T_2, _fpiu_io_in_bits_req_in2_expOut_T_4, _fpiu_io_in_bits_req_in2_expOut_T_5) @[FPU.scala 276:10]
    node fpiu_io_in_bits_req_in2_hi = cat(fpiu_io_in_bits_req_in2_sign, fpiu_io_in_bits_req_in2_expOut) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in2_floats_0 = cat(fpiu_io_in_bits_req_in2_hi, fpiu_io_in_bits_req_in2_fractOut) @[Cat.scala 33:92]
    node _fpiu_io_in_bits_req_in2_isbox_T = bits(io.req.bits.rs2_data, 64, 60) @[FPU.scala 327:49]
    node fpiu_io_in_bits_req_in2_isbox = andr(_fpiu_io_in_bits_req_in2_isbox_T) @[FPU.scala 327:84]
    node fpiu_io_in_bits_req_in2_oks_0 = and(fpiu_io_in_bits_req_in2_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node _fpiu_io_in_bits_req_in2_truncIdx_T = or(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[package.scala 31:21]
    node fpiu_io_in_bits_req_in2_truncIdx = bits(_fpiu_io_in_bits_req_in2_truncIdx_T, 0, 0) @[package.scala 31:49]
    node _fpiu_io_in_bits_req_in2_T = eq(fpiu_io_in_bits_req_in2_truncIdx, UInt<1>("h1")) @[package.scala 32:86]
    node _fpiu_io_in_bits_req_in2_T_1 = mux(_fpiu_io_in_bits_req_in2_T, UInt<1>("h1"), fpiu_io_in_bits_req_in2_oks_0) @[package.scala 32:76]
    node _fpiu_io_in_bits_req_in2_truncIdx_T_1 = or(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[package.scala 31:21]
    node fpiu_io_in_bits_req_in2_truncIdx_1 = bits(_fpiu_io_in_bits_req_in2_truncIdx_T_1, 0, 0) @[package.scala 31:49]
    node _fpiu_io_in_bits_req_in2_T_2 = eq(fpiu_io_in_bits_req_in2_truncIdx_1, UInt<1>("h1")) @[package.scala 32:86]
    node _fpiu_io_in_bits_req_in2_T_3 = mux(_fpiu_io_in_bits_req_in2_T_2, io.req.bits.rs2_data, fpiu_io_in_bits_req_in2_floats_0) @[package.scala 32:76]
    node _fpiu_io_in_bits_req_in2_T_4 = mux(_fpiu_io_in_bits_req_in2_T_1, _fpiu_io_in_bits_req_in2_T_3, UInt<65>("he008000000000000")) @[FPU.scala 364:10]
    fpiu_io_in_bits_req.in2 <= _fpiu_io_in_bits_req_in2_T_4 @[fpu.scala 190:13]
    node _fpiu_io_in_bits_req_in3_unswizzled_T = bits(io.req.bits.rs3_data, 31, 31) @[FPU.scala 352:14]
    node _fpiu_io_in_bits_req_in3_unswizzled_T_1 = bits(io.req.bits.rs3_data, 52, 52) @[FPU.scala 353:14]
    node _fpiu_io_in_bits_req_in3_unswizzled_T_2 = bits(io.req.bits.rs3_data, 30, 0) @[FPU.scala 354:14]
    node fpiu_io_in_bits_req_in3_unswizzled_hi = cat(_fpiu_io_in_bits_req_in3_unswizzled_T, _fpiu_io_in_bits_req_in3_unswizzled_T_1) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in3_unswizzled = cat(fpiu_io_in_bits_req_in3_unswizzled_hi, _fpiu_io_in_bits_req_in3_unswizzled_T_2) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in3_sign = bits(fpiu_io_in_bits_req_in3_unswizzled, 32, 32) @[FPU.scala 269:17]
    node fpiu_io_in_bits_req_in3_fractIn = bits(fpiu_io_in_bits_req_in3_unswizzled, 22, 0) @[FPU.scala 270:20]
    node fpiu_io_in_bits_req_in3_expIn = bits(fpiu_io_in_bits_req_in3_unswizzled, 31, 23) @[FPU.scala 271:18]
    node _fpiu_io_in_bits_req_in3_fractOut_T = shl(fpiu_io_in_bits_req_in3_fractIn, 53) @[FPU.scala 272:28]
    node fpiu_io_in_bits_req_in3_fractOut = shr(_fpiu_io_in_bits_req_in3_fractOut_T, 24) @[FPU.scala 272:38]
    node fpiu_io_in_bits_req_in3_expOut_expCode = bits(fpiu_io_in_bits_req_in3_expIn, 8, 6) @[FPU.scala 274:26]
    node _fpiu_io_in_bits_req_in3_expOut_commonCase_T = add(fpiu_io_in_bits_req_in3_expIn, UInt<12>("h800")) @[FPU.scala 275:31]
    node _fpiu_io_in_bits_req_in3_expOut_commonCase_T_1 = tail(_fpiu_io_in_bits_req_in3_expOut_commonCase_T, 1) @[FPU.scala 275:31]
    node _fpiu_io_in_bits_req_in3_expOut_commonCase_T_2 = sub(_fpiu_io_in_bits_req_in3_expOut_commonCase_T_1, UInt<9>("h100")) @[FPU.scala 275:48]
    node fpiu_io_in_bits_req_in3_expOut_commonCase = tail(_fpiu_io_in_bits_req_in3_expOut_commonCase_T_2, 1) @[FPU.scala 275:48]
    node _fpiu_io_in_bits_req_in3_expOut_T = eq(fpiu_io_in_bits_req_in3_expOut_expCode, UInt<1>("h0")) @[FPU.scala 276:19]
    node _fpiu_io_in_bits_req_in3_expOut_T_1 = geq(fpiu_io_in_bits_req_in3_expOut_expCode, UInt<3>("h6")) @[FPU.scala 276:36]
    node _fpiu_io_in_bits_req_in3_expOut_T_2 = or(_fpiu_io_in_bits_req_in3_expOut_T, _fpiu_io_in_bits_req_in3_expOut_T_1) @[FPU.scala 276:25]
    node _fpiu_io_in_bits_req_in3_expOut_T_3 = bits(fpiu_io_in_bits_req_in3_expOut_commonCase, 8, 0) @[FPU.scala 276:65]
    node _fpiu_io_in_bits_req_in3_expOut_T_4 = cat(fpiu_io_in_bits_req_in3_expOut_expCode, _fpiu_io_in_bits_req_in3_expOut_T_3) @[Cat.scala 33:92]
    node _fpiu_io_in_bits_req_in3_expOut_T_5 = bits(fpiu_io_in_bits_req_in3_expOut_commonCase, 11, 0) @[FPU.scala 276:93]
    node fpiu_io_in_bits_req_in3_expOut = mux(_fpiu_io_in_bits_req_in3_expOut_T_2, _fpiu_io_in_bits_req_in3_expOut_T_4, _fpiu_io_in_bits_req_in3_expOut_T_5) @[FPU.scala 276:10]
    node fpiu_io_in_bits_req_in3_hi = cat(fpiu_io_in_bits_req_in3_sign, fpiu_io_in_bits_req_in3_expOut) @[Cat.scala 33:92]
    node fpiu_io_in_bits_req_in3_floats_0 = cat(fpiu_io_in_bits_req_in3_hi, fpiu_io_in_bits_req_in3_fractOut) @[Cat.scala 33:92]
    node _fpiu_io_in_bits_req_in3_isbox_T = bits(io.req.bits.rs3_data, 64, 60) @[FPU.scala 327:49]
    node fpiu_io_in_bits_req_in3_isbox = andr(_fpiu_io_in_bits_req_in3_isbox_T) @[FPU.scala 327:84]
    node fpiu_io_in_bits_req_in3_oks_0 = and(fpiu_io_in_bits_req_in3_isbox, UInt<1>("h1")) @[FPU.scala 357:32]
    node _fpiu_io_in_bits_req_in3_truncIdx_T = or(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[package.scala 31:21]
    node fpiu_io_in_bits_req_in3_truncIdx = bits(_fpiu_io_in_bits_req_in3_truncIdx_T, 0, 0) @[package.scala 31:49]
    node _fpiu_io_in_bits_req_in3_T = eq(fpiu_io_in_bits_req_in3_truncIdx, UInt<1>("h1")) @[package.scala 32:86]
    node _fpiu_io_in_bits_req_in3_T_1 = mux(_fpiu_io_in_bits_req_in3_T, UInt<1>("h1"), fpiu_io_in_bits_req_in3_oks_0) @[package.scala 32:76]
    node _fpiu_io_in_bits_req_in3_truncIdx_T_1 = or(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[package.scala 31:21]
    node fpiu_io_in_bits_req_in3_truncIdx_1 = bits(_fpiu_io_in_bits_req_in3_truncIdx_T_1, 0, 0) @[package.scala 31:49]
    node _fpiu_io_in_bits_req_in3_T_2 = eq(fpiu_io_in_bits_req_in3_truncIdx_1, UInt<1>("h1")) @[package.scala 32:86]
    node _fpiu_io_in_bits_req_in3_T_3 = mux(_fpiu_io_in_bits_req_in3_T_2, io.req.bits.rs3_data, fpiu_io_in_bits_req_in3_floats_0) @[package.scala 32:76]
    node _fpiu_io_in_bits_req_in3_T_4 = mux(_fpiu_io_in_bits_req_in3_T_1, _fpiu_io_in_bits_req_in3_T_3, UInt<65>("he008000000000000")) @[FPU.scala 364:10]
    fpiu_io_in_bits_req.in3 <= _fpiu_io_in_bits_req_in3_T_4 @[fpu.scala 191:13]
    when fp_decoder.io.sigs.swap23 : @[fpu.scala 192:27]
      fpiu_io_in_bits_req.in3 <= fpiu_io_in_bits_req.in2 @[fpu.scala 192:37]
    node _fpiu_io_in_bits_req_typ_T = bits(io.req.bits.uop.imm_packed, 9, 8) @[util.scala 295:59]
    fpiu_io_in_bits_req.typ <= _fpiu_io_in_bits_req_typ_T @[fpu.scala 193:13]
    node _fpiu_io_in_bits_req_fmt_T = eq(fp_decoder.io.sigs.typeTagIn, UInt<1>("h0")) @[fpu.scala 194:24]
    node _fpiu_io_in_bits_req_fmt_T_1 = mux(_fpiu_io_in_bits_req_fmt_T, UInt<1>("h0"), UInt<1>("h1")) @[fpu.scala 194:19]
    fpiu_io_in_bits_req.fmt <= _fpiu_io_in_bits_req_fmt_T_1 @[fpu.scala 194:13]
    node _fpiu_io_in_bits_T = eq(io.req.bits.uop.uopc, UInt<7>("h46")) @[fpu.scala 195:27]
    when _fpiu_io_in_bits_T : @[fpu.scala 195:43]
      fpiu_io_in_bits_req.fmt <= UInt<1>("h0") @[fpu.scala 196:15]
    inst fpiu_io_in_bits_fma_decoder of FMADecoder @[fpu.scala 199:29]
    fpiu_io_in_bits_fma_decoder.clock <= clock
    fpiu_io_in_bits_fma_decoder.reset <= reset
    fpiu_io_in_bits_fma_decoder.io.uopc <= io.req.bits.uop.uopc @[fpu.scala 200:25]
    fpiu_io_in_bits_req.fmaCmd <= fpiu_io_in_bits_fma_decoder.io.cmd @[fpu.scala 201:16]
    fpiu.io.in.bits.in3 <= fpiu_io_in_bits_req.in3 @[fpu.scala 215:19]
    fpiu.io.in.bits.in2 <= fpiu_io_in_bits_req.in2 @[fpu.scala 215:19]
    fpiu.io.in.bits.in1 <= fpiu_io_in_bits_req.in1 @[fpu.scala 215:19]
    fpiu.io.in.bits.fmt <= fpiu_io_in_bits_req.fmt @[fpu.scala 215:19]
    fpiu.io.in.bits.typ <= fpiu_io_in_bits_req.typ @[fpu.scala 215:19]
    fpiu.io.in.bits.fmaCmd <= fpiu_io_in_bits_req.fmaCmd @[fpu.scala 215:19]
    fpiu.io.in.bits.rm <= fpiu_io_in_bits_req.rm @[fpu.scala 215:19]
    fpiu.io.in.bits.wflags <= fpiu_io_in_bits_req.wflags @[fpu.scala 215:19]
    fpiu.io.in.bits.sqrt <= fpiu_io_in_bits_req.sqrt @[fpu.scala 215:19]
    fpiu.io.in.bits.div <= fpiu_io_in_bits_req.div @[fpu.scala 215:19]
    fpiu.io.in.bits.fma <= fpiu_io_in_bits_req.fma @[fpu.scala 215:19]
    fpiu.io.in.bits.fastpipe <= fpiu_io_in_bits_req.fastpipe @[fpu.scala 215:19]
    fpiu.io.in.bits.toint <= fpiu_io_in_bits_req.toint @[fpu.scala 215:19]
    fpiu.io.in.bits.fromint <= fpiu_io_in_bits_req.fromint @[fpu.scala 215:19]
    fpiu.io.in.bits.typeTagOut <= fpiu_io_in_bits_req.typeTagOut @[fpu.scala 215:19]
    fpiu.io.in.bits.typeTagIn <= fpiu_io_in_bits_req.typeTagIn @[fpu.scala 215:19]
    fpiu.io.in.bits.swap23 <= fpiu_io_in_bits_req.swap23 @[fpu.scala 215:19]
    fpiu.io.in.bits.swap12 <= fpiu_io_in_bits_req.swap12 @[fpu.scala 215:19]
    fpiu.io.in.bits.ren3 <= fpiu_io_in_bits_req.ren3 @[fpu.scala 215:19]
    fpiu.io.in.bits.ren2 <= fpiu_io_in_bits_req.ren2 @[fpu.scala 215:19]
    fpiu.io.in.bits.ren1 <= fpiu_io_in_bits_req.ren1 @[fpu.scala 215:19]
    fpiu.io.in.bits.wen <= fpiu_io_in_bits_req.wen @[fpu.scala 215:19]
    fpiu.io.in.bits.ldst <= fpiu_io_in_bits_req.ldst @[fpu.scala 215:19]
    node _fpiu_out_T = eq(fp_decoder.io.sigs.fastpipe, UInt<1>("h0")) @[fpu.scala 216:51]
    node _fpiu_out_T_1 = and(fpiu.io.in.valid, _fpiu_out_T) @[fpu.scala 216:48]
    reg fpiu_out_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), fpiu_out_REG) @[fpu.scala 216:30]
    fpiu_out_REG <= _fpiu_out_T_1 @[fpu.scala 216:30]
    reg fpiu_outPipe_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpiu_outPipe_valid <= fpiu_out_REG @[Valid.scala 130:22]
    reg fpiu_outPipe_bits : { in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, lt : UInt<1>, store : UInt<64>, toint : UInt<64>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), fpiu_outPipe_bits) @[Reg.scala 19:16]
    when fpiu_out_REG : @[Reg.scala 20:18]
      fpiu_outPipe_bits <= fpiu.io.out.bits @[Reg.scala 20:22]
    reg fpiu_outPipe_valid_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpiu_outPipe_valid_1 <= fpiu_outPipe_valid @[Valid.scala 130:22]
    reg fpiu_outPipe_bits_1 : { in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, lt : UInt<1>, store : UInt<64>, toint : UInt<64>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), fpiu_outPipe_bits_1) @[Reg.scala 19:16]
    when fpiu_outPipe_valid : @[Reg.scala 20:18]
      fpiu_outPipe_bits_1 <= fpiu_outPipe_bits @[Reg.scala 20:22]
    reg fpiu_outPipe_valid_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpiu_outPipe_valid_2 <= fpiu_outPipe_valid_1 @[Valid.scala 130:22]
    reg fpiu_outPipe_bits_2 : { in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, lt : UInt<1>, store : UInt<64>, toint : UInt<64>, exc : UInt<5>}, clock with :
      reset => (UInt<1>("h0"), fpiu_outPipe_bits_2) @[Reg.scala 19:16]
    when fpiu_outPipe_valid_1 : @[Reg.scala 20:18]
      fpiu_outPipe_bits_2 <= fpiu_outPipe_bits_1 @[Reg.scala 20:22]
    wire fpiu_out : { valid : UInt<1>, bits : { in : { ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>, rm : UInt<3>, fmaCmd : UInt<2>, typ : UInt<2>, fmt : UInt<2>, in1 : UInt<65>, in2 : UInt<65>, in3 : UInt<65>}, lt : UInt<1>, store : UInt<64>, toint : UInt<64>, exc : UInt<5>}} @[Valid.scala 125:21]
    fpiu_out.valid <= fpiu_outPipe_valid_2 @[Valid.scala 126:17]
    fpiu_out.bits <= fpiu_outPipe_bits_2 @[Valid.scala 127:16]
    wire fpiu_result : { data : UInt<65>, exc : UInt<5>} @[fpu.scala 218:26]
    fpiu_result.data <= fpiu_out.bits.toint @[fpu.scala 219:20]
    fpiu_result.exc <= fpiu_out.bits.exc @[fpu.scala 220:20]
    inst fpmu of FPToFP @[fpu.scala 222:20]
    fpmu.clock <= clock
    fpmu.reset <= reset
    node _fpmu_io_in_valid_T = and(io.req.valid, fp_decoder.io.sigs.fastpipe) @[fpu.scala 223:36]
    fpmu.io.in.valid <= _fpmu_io_in_valid_T @[fpu.scala 223:20]
    fpmu.io.in.bits.in3 <= fpiu.io.in.bits.in3 @[fpu.scala 224:19]
    fpmu.io.in.bits.in2 <= fpiu.io.in.bits.in2 @[fpu.scala 224:19]
    fpmu.io.in.bits.in1 <= fpiu.io.in.bits.in1 @[fpu.scala 224:19]
    fpmu.io.in.bits.fmt <= fpiu.io.in.bits.fmt @[fpu.scala 224:19]
    fpmu.io.in.bits.typ <= fpiu.io.in.bits.typ @[fpu.scala 224:19]
    fpmu.io.in.bits.fmaCmd <= fpiu.io.in.bits.fmaCmd @[fpu.scala 224:19]
    fpmu.io.in.bits.rm <= fpiu.io.in.bits.rm @[fpu.scala 224:19]
    fpmu.io.in.bits.wflags <= fpiu.io.in.bits.wflags @[fpu.scala 224:19]
    fpmu.io.in.bits.sqrt <= fpiu.io.in.bits.sqrt @[fpu.scala 224:19]
    fpmu.io.in.bits.div <= fpiu.io.in.bits.div @[fpu.scala 224:19]
    fpmu.io.in.bits.fma <= fpiu.io.in.bits.fma @[fpu.scala 224:19]
    fpmu.io.in.bits.fastpipe <= fpiu.io.in.bits.fastpipe @[fpu.scala 224:19]
    fpmu.io.in.bits.toint <= fpiu.io.in.bits.toint @[fpu.scala 224:19]
    fpmu.io.in.bits.fromint <= fpiu.io.in.bits.fromint @[fpu.scala 224:19]
    fpmu.io.in.bits.typeTagOut <= fpiu.io.in.bits.typeTagOut @[fpu.scala 224:19]
    fpmu.io.in.bits.typeTagIn <= fpiu.io.in.bits.typeTagIn @[fpu.scala 224:19]
    fpmu.io.in.bits.swap23 <= fpiu.io.in.bits.swap23 @[fpu.scala 224:19]
    fpmu.io.in.bits.swap12 <= fpiu.io.in.bits.swap12 @[fpu.scala 224:19]
    fpmu.io.in.bits.ren3 <= fpiu.io.in.bits.ren3 @[fpu.scala 224:19]
    fpmu.io.in.bits.ren2 <= fpiu.io.in.bits.ren2 @[fpu.scala 224:19]
    fpmu.io.in.bits.ren1 <= fpiu.io.in.bits.ren1 @[fpu.scala 224:19]
    fpmu.io.in.bits.wen <= fpiu.io.in.bits.wen @[fpu.scala 224:19]
    fpmu.io.in.bits.ldst <= fpiu.io.in.bits.ldst @[fpu.scala 224:19]
    fpmu.io.lt <= fpiu.io.out.bits.lt @[fpu.scala 225:14]
    node _fpmu_double_T = and(io.req.valid, fp_decoder.io.sigs.fastpipe) @[fpu.scala 226:39]
    node _fpmu_double_T_1 = eq(fp_decoder.io.sigs.typeTagOut, UInt<1>("h1")) @[fpu.scala 226:79]
    reg fpmu_double_v : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpmu_double_v <= _fpmu_double_T @[Valid.scala 130:22]
    reg fpmu_double_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), fpmu_double_b) @[Reg.scala 19:16]
    when _fpmu_double_T : @[Reg.scala 20:18]
      fpmu_double_b <= _fpmu_double_T_1 @[Reg.scala 20:22]
    reg fpmu_double_outPipe_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpmu_double_outPipe_valid <= fpmu_double_v @[Valid.scala 130:22]
    reg fpmu_double_outPipe_bits : UInt<1>, clock with :
      reset => (UInt<1>("h0"), fpmu_double_outPipe_bits) @[Reg.scala 19:16]
    when fpmu_double_v : @[Reg.scala 20:18]
      fpmu_double_outPipe_bits <= fpmu_double_b @[Reg.scala 20:22]
    reg fpmu_double_outPipe_valid_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpmu_double_outPipe_valid_1 <= fpmu_double_outPipe_valid @[Valid.scala 130:22]
    reg fpmu_double_outPipe_bits_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), fpmu_double_outPipe_bits_1) @[Reg.scala 19:16]
    when fpmu_double_outPipe_valid : @[Reg.scala 20:18]
      fpmu_double_outPipe_bits_1 <= fpmu_double_outPipe_bits @[Reg.scala 20:22]
    reg fpmu_double_outPipe_valid_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Valid.scala 130:22]
    fpmu_double_outPipe_valid_2 <= fpmu_double_outPipe_valid_1 @[Valid.scala 130:22]
    reg fpmu_double_outPipe_bits_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), fpmu_double_outPipe_bits_2) @[Reg.scala 19:16]
    when fpmu_double_outPipe_valid_1 : @[Reg.scala 20:18]
      fpmu_double_outPipe_bits_2 <= fpmu_double_outPipe_bits_1 @[Reg.scala 20:22]
    wire fpmu_double_out : { valid : UInt<1>, bits : UInt<1>} @[Valid.scala 125:21]
    fpmu_double_out.valid <= fpmu_double_outPipe_valid_2 @[Valid.scala 126:17]
    fpmu_double_out.bits <= fpmu_double_outPipe_bits_2 @[Valid.scala 127:16]
    node _io_resp_valid_T = or(fpiu_out.valid, fpmu.io.out.valid) @[fpu.scala 229:35]
    node _io_resp_valid_T_1 = or(_io_resp_valid_T, sfma.io.out.valid) @[fpu.scala 230:38]
    node _io_resp_valid_T_2 = or(_io_resp_valid_T_1, dfma.io.out.valid) @[fpu.scala 231:38]
    io.resp.valid <= _io_resp_valid_T_2 @[fpu.scala 229:17]
    node _fpu_out_data_opts_bigger_swizzledNaN_T = andr(UInt<20>("hfffff")) @[FPU.scala 333:42]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_1 = bits(dfma.io.out.bits.data, 31, 31) @[FPU.scala 335:8]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_2 = bits(dfma.io.out.bits.data, 32, 32) @[FPU.scala 337:8]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_3 = bits(dfma.io.out.bits.data, 30, 0) @[FPU.scala 338:8]
    node fpu_out_data_opts_bigger_swizzledNaN_lo_hi = cat(UInt<20>("hfffff"), _fpu_out_data_opts_bigger_swizzledNaN_T_2) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_lo = cat(fpu_out_data_opts_bigger_swizzledNaN_lo_hi, _fpu_out_data_opts_bigger_swizzledNaN_T_3) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_lo = cat(UInt<7>("h7f"), _fpu_out_data_opts_bigger_swizzledNaN_T_1) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_hi = cat(UInt<4>("hf"), _fpu_out_data_opts_bigger_swizzledNaN_T) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi = cat(fpu_out_data_opts_bigger_swizzledNaN_hi_hi, fpu_out_data_opts_bigger_swizzledNaN_hi_lo) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN = cat(fpu_out_data_opts_bigger_swizzledNaN_hi, fpu_out_data_opts_bigger_swizzledNaN_lo) @[Cat.scala 33:92]
    node _fpu_out_data_opts_bigger_T = andr(UInt<3>("h7")) @[FPU.scala 244:56]
    node fpu_out_data_opts_bigger = mux(_fpu_out_data_opts_bigger_T, fpu_out_data_opts_bigger_swizzledNaN, UInt<65>("h1ffffffffffffffff")) @[FPU.scala 339:8]
    node fpu_out_data_opts_0 = or(fpu_out_data_opts_bigger, UInt<1>("h0")) @[FPU.scala 393:14]
    node _fpu_out_data_T = eq(UInt<1>("h1"), UInt<1>("h1")) @[package.scala 32:86]
    node _fpu_out_data_T_1 = mux(_fpu_out_data_T, dfma.io.out.bits.data, fpu_out_data_opts_0) @[package.scala 32:76]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_4 = andr(UInt<20>("hfffff")) @[FPU.scala 333:42]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_5 = bits(sfma.io.out.bits.data, 31, 31) @[FPU.scala 335:8]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_6 = bits(sfma.io.out.bits.data, 32, 32) @[FPU.scala 337:8]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_7 = bits(sfma.io.out.bits.data, 30, 0) @[FPU.scala 338:8]
    node fpu_out_data_opts_bigger_swizzledNaN_lo_hi_1 = cat(UInt<20>("hfffff"), _fpu_out_data_opts_bigger_swizzledNaN_T_6) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_lo_1 = cat(fpu_out_data_opts_bigger_swizzledNaN_lo_hi_1, _fpu_out_data_opts_bigger_swizzledNaN_T_7) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_lo_1 = cat(UInt<7>("h7f"), _fpu_out_data_opts_bigger_swizzledNaN_T_5) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_hi_1 = cat(UInt<4>("hf"), _fpu_out_data_opts_bigger_swizzledNaN_T_4) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_1 = cat(fpu_out_data_opts_bigger_swizzledNaN_hi_hi_1, fpu_out_data_opts_bigger_swizzledNaN_hi_lo_1) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_1 = cat(fpu_out_data_opts_bigger_swizzledNaN_hi_1, fpu_out_data_opts_bigger_swizzledNaN_lo_1) @[Cat.scala 33:92]
    node _fpu_out_data_opts_bigger_T_1 = andr(UInt<3>("h7")) @[FPU.scala 244:56]
    node fpu_out_data_opts_bigger_1 = mux(_fpu_out_data_opts_bigger_T_1, fpu_out_data_opts_bigger_swizzledNaN_1, UInt<65>("h1ffffffffffffffff")) @[FPU.scala 339:8]
    node fpu_out_data_opts_0_1 = or(fpu_out_data_opts_bigger_1, UInt<1>("h0")) @[FPU.scala 393:14]
    node _fpu_out_data_T_2 = eq(UInt<1>("h0"), UInt<1>("h1")) @[package.scala 32:86]
    node _fpu_out_data_T_3 = mux(_fpu_out_data_T_2, sfma.io.out.bits.data, fpu_out_data_opts_0_1) @[package.scala 32:76]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_8 = andr(UInt<20>("hfffff")) @[FPU.scala 333:42]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_9 = bits(fpmu.io.out.bits.data, 31, 31) @[FPU.scala 335:8]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_10 = bits(fpmu.io.out.bits.data, 32, 32) @[FPU.scala 337:8]
    node _fpu_out_data_opts_bigger_swizzledNaN_T_11 = bits(fpmu.io.out.bits.data, 30, 0) @[FPU.scala 338:8]
    node fpu_out_data_opts_bigger_swizzledNaN_lo_hi_2 = cat(UInt<20>("hfffff"), _fpu_out_data_opts_bigger_swizzledNaN_T_10) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_lo_2 = cat(fpu_out_data_opts_bigger_swizzledNaN_lo_hi_2, _fpu_out_data_opts_bigger_swizzledNaN_T_11) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_lo_2 = cat(UInt<7>("h7f"), _fpu_out_data_opts_bigger_swizzledNaN_T_9) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_hi_2 = cat(UInt<4>("hf"), _fpu_out_data_opts_bigger_swizzledNaN_T_8) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_hi_2 = cat(fpu_out_data_opts_bigger_swizzledNaN_hi_hi_2, fpu_out_data_opts_bigger_swizzledNaN_hi_lo_2) @[Cat.scala 33:92]
    node fpu_out_data_opts_bigger_swizzledNaN_2 = cat(fpu_out_data_opts_bigger_swizzledNaN_hi_2, fpu_out_data_opts_bigger_swizzledNaN_lo_2) @[Cat.scala 33:92]
    node _fpu_out_data_opts_bigger_T_2 = andr(UInt<3>("h7")) @[FPU.scala 244:56]
    node fpu_out_data_opts_bigger_2 = mux(_fpu_out_data_opts_bigger_T_2, fpu_out_data_opts_bigger_swizzledNaN_2, UInt<65>("h1ffffffffffffffff")) @[FPU.scala 339:8]
    node fpu_out_data_opts_0_2 = or(fpu_out_data_opts_bigger_2, UInt<1>("h0")) @[FPU.scala 393:14]
    node _fpu_out_data_T_4 = eq(fpmu_double_out.bits, UInt<1>("h1")) @[package.scala 32:86]
    node _fpu_out_data_T_5 = mux(_fpu_out_data_T_4, fpmu.io.out.bits.data, fpu_out_data_opts_0_2) @[package.scala 32:76]
    node _fpu_out_data_T_6 = mux(fpiu_out.valid, fpiu_result.data, _fpu_out_data_T_5) @[fpu.scala 236:8]
    node _fpu_out_data_T_7 = mux(sfma.io.out.valid, _fpu_out_data_T_3, _fpu_out_data_T_6) @[fpu.scala 235:8]
    node fpu_out_data = mux(dfma.io.out.valid, _fpu_out_data_T_1, _fpu_out_data_T_7) @[fpu.scala 234:8]
    node _fpu_out_exc_T = mux(fpiu_out.valid, fpiu_result.exc, fpmu.io.out.bits.exc) @[fpu.scala 242:8]
    node _fpu_out_exc_T_1 = mux(sfma.io.out.valid, sfma.io.out.bits.exc, _fpu_out_exc_T) @[fpu.scala 241:8]
    node fpu_out_exc = mux(dfma.io.out.valid, dfma.io.out.bits.exc, _fpu_out_exc_T_1) @[fpu.scala 240:8]
    io.resp.bits.data <= fpu_out_data @[fpu.scala 245:34]
    io.resp.bits.fflags.valid <= io.resp.valid @[fpu.scala 246:34]
    io.resp.bits.fflags.bits.flags <= fpu_out_exc @[fpu.scala 247:34]
